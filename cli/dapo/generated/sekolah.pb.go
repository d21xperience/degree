// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.28.3
// source: sekolah.proto

package sekolah

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TahunAjaran Structure
type TahunAjaran struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId  uint32                 `protobuf:"varint,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	Nama           string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	PeriodeAktif   string                 `protobuf:"bytes,3,opt,name=periode_aktif,json=periodeAktif,proto3" json:"periode_aktif,omitempty"`
	TanggalMulai   string                 `protobuf:"bytes,4,opt,name=tanggal_mulai,json=tanggalMulai,proto3" json:"tanggal_mulai,omitempty"`
	TanggalSelesai string                 `protobuf:"bytes,5,opt,name=tanggal_selesai,json=tanggalSelesai,proto3" json:"tanggal_selesai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TahunAjaran) Reset() {
	*x = TahunAjaran{}
	mi := &file_sekolah_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TahunAjaran) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TahunAjaran) ProtoMessage() {}

func (x *TahunAjaran) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TahunAjaran.ProtoReflect.Descriptor instead.
func (*TahunAjaran) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{0}
}

func (x *TahunAjaran) GetTahunAjaranId() uint32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

func (x *TahunAjaran) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *TahunAjaran) GetPeriodeAktif() string {
	if x != nil {
		return x.PeriodeAktif
	}
	return ""
}

func (x *TahunAjaran) GetTanggalMulai() string {
	if x != nil {
		return x.TanggalMulai
	}
	return ""
}

func (x *TahunAjaran) GetTanggalSelesai() string {
	if x != nil {
		return x.TanggalSelesai
	}
	return ""
}

// TahunAjaran CRUD
type CreateTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaran   *TahunAjaran           `protobuf:"bytes,1,opt,name=tahun_ajaran,json=tahunAjaran,proto3" json:"tahun_ajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTahunAjaranRequest) Reset() {
	*x = CreateTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTahunAjaranRequest) ProtoMessage() {}

func (x *CreateTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*CreateTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTahunAjaranRequest) GetTahunAjaran() *TahunAjaran {
	if x != nil {
		return x.TahunAjaran
	}
	return nil
}

type CreateTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTahunAjaranResponse) Reset() {
	*x = CreateTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTahunAjaranResponse) ProtoMessage() {}

func (x *CreateTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*CreateTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId *string                `protobuf:"bytes,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3,oneof" json:"tahun_ajaran_id,omitempty"` // ID Tahun Ajaran (opsional, kosong jika ingin semua data)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTahunAjaranRequest) Reset() {
	*x = GetTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTahunAjaranRequest) ProtoMessage() {}

func (x *GetTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*GetTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{3}
}

func (x *GetTahunAjaranRequest) GetTahunAjaranId() string {
	if x != nil && x.TahunAjaranId != nil {
		return *x.TahunAjaranId
	}
	return ""
}

type GetTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TahunAjaran   []*TahunAjaran         `protobuf:"bytes,3,rep,name=tahun_ajaran,json=tahunAjaran,proto3" json:"tahun_ajaran,omitempty"` // Slice dari Tahun Ajaran
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTahunAjaranResponse) Reset() {
	*x = GetTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTahunAjaranResponse) ProtoMessage() {}

func (x *GetTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*GetTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{4}
}

func (x *GetTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTahunAjaranResponse) GetTahunAjaran() []*TahunAjaran {
	if x != nil {
		return x.TahunAjaran
	}
	return nil
}

type UpdateTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaran   *TahunAjaran           `protobuf:"bytes,1,opt,name=tahun_ajaran,json=tahunAjaran,proto3" json:"tahun_ajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTahunAjaranRequest) Reset() {
	*x = UpdateTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTahunAjaranRequest) ProtoMessage() {}

func (x *UpdateTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*UpdateTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTahunAjaranRequest) GetTahunAjaran() *TahunAjaran {
	if x != nil {
		return x.TahunAjaran
	}
	return nil
}

type UpdateTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTahunAjaranResponse) Reset() {
	*x = UpdateTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTahunAjaranResponse) ProtoMessage() {}

func (x *UpdateTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*UpdateTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId string                 `protobuf:"bytes,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTahunAjaranRequest) Reset() {
	*x = DeleteTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTahunAjaranRequest) ProtoMessage() {}

func (x *DeleteTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*DeleteTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTahunAjaranRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

type DeleteTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTahunAjaranResponse) Reset() {
	*x = DeleteTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTahunAjaranResponse) ProtoMessage() {}

func (x *DeleteTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*DeleteTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Semester Structure
type Semester struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SemesterId     string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	TahunAjaranId  uint32                 `protobuf:"varint,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	NamaSemester   string                 `protobuf:"bytes,3,opt,name=nama_semester,json=namaSemester,proto3" json:"nama_semester,omitempty"`
	Semester       int32                  `protobuf:"varint,4,opt,name=semester,proto3" json:"semester,omitempty"`
	PeriodeAktif   int32                  `protobuf:"varint,5,opt,name=periode_aktif,json=periodeAktif,proto3" json:"periode_aktif,omitempty"`
	TanggalMulai   string                 `protobuf:"bytes,6,opt,name=tanggal_mulai,json=tanggalMulai,proto3" json:"tanggal_mulai,omitempty"`
	TanggalSelesai string                 `protobuf:"bytes,7,opt,name=tanggal_selesai,json=tanggalSelesai,proto3" json:"tanggal_selesai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Semester) Reset() {
	*x = Semester{}
	mi := &file_sekolah_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Semester) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Semester) ProtoMessage() {}

func (x *Semester) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Semester.ProtoReflect.Descriptor instead.
func (*Semester) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{9}
}

func (x *Semester) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *Semester) GetTahunAjaranId() uint32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

func (x *Semester) GetNamaSemester() string {
	if x != nil {
		return x.NamaSemester
	}
	return ""
}

func (x *Semester) GetSemester() int32 {
	if x != nil {
		return x.Semester
	}
	return 0
}

func (x *Semester) GetPeriodeAktif() int32 {
	if x != nil {
		return x.PeriodeAktif
	}
	return 0
}

func (x *Semester) GetTanggalMulai() string {
	if x != nil {
		return x.TanggalMulai
	}
	return ""
}

func (x *Semester) GetTanggalSelesai() string {
	if x != nil {
		return x.TanggalSelesai
	}
	return ""
}

// Semester CRUD
type CreateSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      *Semester              `protobuf:"bytes,1,opt,name=semester,proto3" json:"semester,omitempty"`
	TahunAjaranId uint32                 `protobuf:"varint,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSemesterRequest) Reset() {
	*x = CreateSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSemesterRequest) ProtoMessage() {}

func (x *CreateSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSemesterRequest.ProtoReflect.Descriptor instead.
func (*CreateSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSemesterRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *CreateSemesterRequest) GetTahunAjaranId() uint32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

type CreateSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSemesterResponse) Reset() {
	*x = CreateSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSemesterResponse) ProtoMessage() {}

func (x *CreateSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSemesterResponse.ProtoReflect.Descriptor instead.
func (*CreateSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSemesterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSemesterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemesterId    string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSemesterRequest) Reset() {
	*x = GetSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemesterRequest) ProtoMessage() {}

func (x *GetSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemesterRequest.ProtoReflect.Descriptor instead.
func (*GetSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{12}
}

func (x *GetSemesterRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type GetSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      []*Semester            `protobuf:"bytes,1,rep,name=semester,proto3" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSemesterResponse) Reset() {
	*x = GetSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemesterResponse) ProtoMessage() {}

func (x *GetSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemesterResponse.ProtoReflect.Descriptor instead.
func (*GetSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{13}
}

func (x *GetSemesterResponse) GetSemester() []*Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

//	message GetCurrentSemesterRequest {
//	  // string semester_id = 1;
//	}
type GetCurrentSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      *Semester              `protobuf:"bytes,1,opt,name=semester,proto3" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentSemesterResponse) Reset() {
	*x = GetCurrentSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSemesterResponse) ProtoMessage() {}

func (x *GetCurrentSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSemesterResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{14}
}

func (x *GetCurrentSemesterResponse) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

type UpdateSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      *Semester              `protobuf:"bytes,1,opt,name=semester,proto3" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSemesterRequest) Reset() {
	*x = UpdateSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSemesterRequest) ProtoMessage() {}

func (x *UpdateSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSemesterRequest.ProtoReflect.Descriptor instead.
func (*UpdateSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateSemesterRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

type UpdateSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSemesterResponse) Reset() {
	*x = UpdateSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSemesterResponse) ProtoMessage() {}

func (x *UpdateSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSemesterResponse.ProtoReflect.Descriptor instead.
func (*UpdateSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateSemesterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSemesterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemesterId    string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSemesterRequest) Reset() {
	*x = DeleteSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSemesterRequest) ProtoMessage() {}

func (x *DeleteSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSemesterRequest.ProtoReflect.Descriptor instead.
func (*DeleteSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSemesterRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type DeleteSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSemesterResponse) Reset() {
	*x = DeleteSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSemesterResponse) ProtoMessage() {}

func (x *DeleteSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSemesterResponse.ProtoReflect.Descriptor instead.
func (*DeleteSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteSemesterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSemesterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Struktur Sekolah
type Sekolah struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahTenantId uint32                 `protobuf:"varint,1,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"`
	EnkripId        string                 `protobuf:"bytes,2,opt,name=enkrip_id,json=enkripId,proto3" json:"enkrip_id,omitempty"`
	Kecamatan       string                 `protobuf:"bytes,3,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	Kabupaten       string                 `protobuf:"bytes,4,opt,name=kabupaten,proto3" json:"kabupaten,omitempty"`
	Propinsi        string                 `protobuf:"bytes,5,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	KodeKecamatan   string                 `protobuf:"bytes,6,opt,name=kode_kecamatan,json=kodeKecamatan,proto3" json:"kode_kecamatan,omitempty"`
	KodeKab         string                 `protobuf:"bytes,7,opt,name=kode_kab,json=kodeKab,proto3" json:"kode_kab,omitempty"`
	KodeProp        string                 `protobuf:"bytes,8,opt,name=kode_prop,json=kodeProp,proto3" json:"kode_prop,omitempty"`
	NamaSekolah     string                 `protobuf:"bytes,9,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	Npsn            string                 `protobuf:"bytes,10,opt,name=npsn,proto3" json:"npsn,omitempty"`
	AlamatJalan     string                 `protobuf:"bytes,11,opt,name=alamat_jalan,json=alamatJalan,proto3" json:"alamat_jalan,omitempty"`
	Status          string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Sekolah) Reset() {
	*x = Sekolah{}
	mi := &file_sekolah_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sekolah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sekolah) ProtoMessage() {}

func (x *Sekolah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sekolah.ProtoReflect.Descriptor instead.
func (*Sekolah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{19}
}

func (x *Sekolah) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

func (x *Sekolah) GetEnkripId() string {
	if x != nil {
		return x.EnkripId
	}
	return ""
}

func (x *Sekolah) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *Sekolah) GetKabupaten() string {
	if x != nil {
		return x.Kabupaten
	}
	return ""
}

func (x *Sekolah) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *Sekolah) GetKodeKecamatan() string {
	if x != nil {
		return x.KodeKecamatan
	}
	return ""
}

func (x *Sekolah) GetKodeKab() string {
	if x != nil {
		return x.KodeKab
	}
	return ""
}

func (x *Sekolah) GetKodeProp() string {
	if x != nil {
		return x.KodeProp
	}
	return ""
}

func (x *Sekolah) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *Sekolah) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *Sekolah) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *Sekolah) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SekolahDapo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SekolahId           string                 `protobuf:"bytes,1,opt,name=sekolah_id,proto3" json:"sekolah_id,omitempty"`
	Nama                string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	Npsn                string                 `protobuf:"bytes,3,opt,name=npsn,proto3" json:"npsn,omitempty"`
	Nss                 string                 `protobuf:"bytes,4,opt,name=nss,proto3" json:"nss,omitempty"`
	Alamat              string                 `protobuf:"bytes,5,opt,name=alamat,proto3" json:"alamat,omitempty"`
	KdPos               string                 `protobuf:"bytes,6,opt,name=kd_pos,json=kdPos,proto3" json:"kd_pos,omitempty"`
	Telepon             string                 `protobuf:"bytes,7,opt,name=telepon,proto3" json:"telepon,omitempty"`
	Fax                 string                 `protobuf:"bytes,8,opt,name=fax,proto3" json:"fax,omitempty"`
	Kelurahan           string                 `protobuf:"bytes,9,opt,name=kelurahan,proto3" json:"kelurahan,omitempty"`
	Kecamatan           string                 `protobuf:"bytes,10,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	KabKota             string                 `protobuf:"bytes,11,opt,name=kab_kota,json=kabKota,proto3" json:"kab_kota,omitempty"`
	Propinsi            string                 `protobuf:"bytes,12,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	Website             string                 `protobuf:"bytes,13,opt,name=website,proto3" json:"website,omitempty"`
	Email               string                 `protobuf:"bytes,14,opt,name=email,proto3" json:"email,omitempty"`
	NmKepsek            string                 `protobuf:"bytes,15,opt,name=nm_kepsek,json=nmKepsek,proto3" json:"nm_kepsek,omitempty"`
	NipKepsek           string                 `protobuf:"bytes,16,opt,name=nip_kepsek,json=nipKepsek,proto3" json:"nip_kepsek,omitempty"`
	NiyKepsek           string                 `protobuf:"bytes,17,opt,name=niy_kepsek,json=niyKepsek,proto3" json:"niy_kepsek,omitempty"`
	StatusKepemilikanId uint32                 `protobuf:"varint,18,opt,name=status_kepemilikan_id,json=statusKepemilikanId,proto3" json:"status_kepemilikan_id,omitempty"`
	KodeAktivasi        string                 `protobuf:"bytes,19,opt,name=kode_aktivasi,json=kodeAktivasi,proto3" json:"kode_aktivasi,omitempty"`
	BentukPendidikanId  uint32                 `protobuf:"varint,20,opt,name=bentuk_pendidikan_id,json=bentukPendidikanId,proto3" json:"bentuk_pendidikan_id,omitempty"`
	JenjangPendidikanId uint32                 `protobuf:"varint,21,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SekolahDapo) Reset() {
	*x = SekolahDapo{}
	mi := &file_sekolah_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahDapo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahDapo) ProtoMessage() {}

func (x *SekolahDapo) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahDapo.ProtoReflect.Descriptor instead.
func (*SekolahDapo) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{20}
}

func (x *SekolahDapo) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *SekolahDapo) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *SekolahDapo) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *SekolahDapo) GetNss() string {
	if x != nil {
		return x.Nss
	}
	return ""
}

func (x *SekolahDapo) GetAlamat() string {
	if x != nil {
		return x.Alamat
	}
	return ""
}

func (x *SekolahDapo) GetKdPos() string {
	if x != nil {
		return x.KdPos
	}
	return ""
}

func (x *SekolahDapo) GetTelepon() string {
	if x != nil {
		return x.Telepon
	}
	return ""
}

func (x *SekolahDapo) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *SekolahDapo) GetKelurahan() string {
	if x != nil {
		return x.Kelurahan
	}
	return ""
}

func (x *SekolahDapo) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *SekolahDapo) GetKabKota() string {
	if x != nil {
		return x.KabKota
	}
	return ""
}

func (x *SekolahDapo) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *SekolahDapo) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *SekolahDapo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SekolahDapo) GetNmKepsek() string {
	if x != nil {
		return x.NmKepsek
	}
	return ""
}

func (x *SekolahDapo) GetNipKepsek() string {
	if x != nil {
		return x.NipKepsek
	}
	return ""
}

func (x *SekolahDapo) GetNiyKepsek() string {
	if x != nil {
		return x.NiyKepsek
	}
	return ""
}

func (x *SekolahDapo) GetStatusKepemilikanId() uint32 {
	if x != nil {
		return x.StatusKepemilikanId
	}
	return 0
}

func (x *SekolahDapo) GetKodeAktivasi() string {
	if x != nil {
		return x.KodeAktivasi
	}
	return ""
}

func (x *SekolahDapo) GetBentukPendidikanId() uint32 {
	if x != nil {
		return x.BentukPendidikanId
	}
	return 0
}

func (x *SekolahDapo) GetJenjangPendidikanId() uint32 {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return 0
}

type KategoriSekolah struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	KategoriSekolahId uint32                 `protobuf:"varint,1,opt,name=kategori_sekolah_id,json=kategoriSekolahId,proto3" json:"kategori_sekolah_id,omitempty"`
	NamaKurikulum     string                 `protobuf:"bytes,2,opt,name=nama_kurikulum,json=namaKurikulum,proto3" json:"nama_kurikulum,omitempty"`
	NamaJurusan       string                 `protobuf:"bytes,3,opt,name=nama_jurusan,json=namaJurusan,proto3" json:"nama_jurusan,omitempty"`
	TahunAjaranId     int32                  `protobuf:"varint,4,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	KurikulumId       int32                  `protobuf:"varint,5,opt,name=kurikulum_id,json=kurikulumId,proto3" json:"kurikulum_id,omitempty"`
	JurusanId         string                 `protobuf:"bytes,6,opt,name=jurusan_id,json=jurusanId,proto3" json:"jurusan_id,omitempty"`
	KategoriKelas     []*KategoriKelas       `protobuf:"bytes,7,rep,name=kategori_kelas,json=kategoriKelas,proto3" json:"kategori_kelas,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *KategoriSekolah) Reset() {
	*x = KategoriSekolah{}
	mi := &file_sekolah_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KategoriSekolah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KategoriSekolah) ProtoMessage() {}

func (x *KategoriSekolah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KategoriSekolah.ProtoReflect.Descriptor instead.
func (*KategoriSekolah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{21}
}

func (x *KategoriSekolah) GetKategoriSekolahId() uint32 {
	if x != nil {
		return x.KategoriSekolahId
	}
	return 0
}

func (x *KategoriSekolah) GetNamaKurikulum() string {
	if x != nil {
		return x.NamaKurikulum
	}
	return ""
}

func (x *KategoriSekolah) GetNamaJurusan() string {
	if x != nil {
		return x.NamaJurusan
	}
	return ""
}

func (x *KategoriSekolah) GetTahunAjaranId() int32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

func (x *KategoriSekolah) GetKurikulumId() int32 {
	if x != nil {
		return x.KurikulumId
	}
	return 0
}

func (x *KategoriSekolah) GetJurusanId() string {
	if x != nil {
		return x.JurusanId
	}
	return ""
}

func (x *KategoriSekolah) GetKategoriKelas() []*KategoriKelas {
	if x != nil {
		return x.KategoriKelas
	}
	return nil
}

type KategoriKelas struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KategoriSekolahId int32                  `protobuf:"varint,2,opt,name=kategori_sekolah_id,json=kategoriSekolahId,proto3" json:"kategori_sekolah_id,omitempty"`
	TingkatId         int32                  `protobuf:"varint,3,opt,name=tingkat_id,json=tingkatId,proto3" json:"tingkat_id,omitempty"`
	Jumlah            int32                  `protobuf:"varint,4,opt,name=jumlah,proto3" json:"jumlah,omitempty"`
	TahunAjaranId     int32                  `protobuf:"varint,5,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *KategoriKelas) Reset() {
	*x = KategoriKelas{}
	mi := &file_sekolah_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KategoriKelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KategoriKelas) ProtoMessage() {}

func (x *KategoriKelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KategoriKelas.ProtoReflect.Descriptor instead.
func (*KategoriKelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{22}
}

func (x *KategoriKelas) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KategoriKelas) GetKategoriSekolahId() int32 {
	if x != nil {
		return x.KategoriSekolahId
	}
	return 0
}

func (x *KategoriKelas) GetTingkatId() int32 {
	if x != nil {
		return x.TingkatId
	}
	return 0
}

func (x *KategoriKelas) GetJumlah() int32 {
	if x != nil {
		return x.Jumlah
	}
	return 0
}

func (x *KategoriKelas) GetTahunAjaranId() int32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

type TabelSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sekolah       *Sekolah               `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TabelSekolahRequest) Reset() {
	*x = TabelSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabelSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabelSekolahRequest) ProtoMessage() {}

func (x *TabelSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabelSekolahRequest.ProtoReflect.Descriptor instead.
func (*TabelSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{23}
}

func (x *TabelSekolahRequest) GetSekolah() *Sekolah {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type TabelSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TabelSekolahResponse) Reset() {
	*x = TabelSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabelSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabelSekolahResponse) ProtoMessage() {}

func (x *TabelSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabelSekolahResponse.ProtoReflect.Descriptor instead.
func (*TabelSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{24}
}

func (x *TabelSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TabelSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SchoolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchoolId      string                 `protobuf:"bytes,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchoolRequest) Reset() {
	*x = SchoolRequest{}
	mi := &file_sekolah_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolRequest) ProtoMessage() {}

func (x *SchoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolRequest.ProtoReflect.Descriptor instead.
func (*SchoolRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{25}
}

func (x *SchoolRequest) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *SchoolRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

type SchoolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchoolName    string                 `protobuf:"bytes,1,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchoolResponse) Reset() {
	*x = SchoolResponse{}
	mi := &file_sekolah_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolResponse) ProtoMessage() {}

func (x *SchoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolResponse.ProtoReflect.Descriptor instead.
func (*SchoolResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{26}
}

func (x *SchoolResponse) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *SchoolResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SekolahTenantRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahTenantId uint32                 `protobuf:"varint,1,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"` // string schemaname = 2;
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SekolahTenantRequest) Reset() {
	*x = SekolahTenantRequest{}
	mi := &file_sekolah_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTenantRequest) ProtoMessage() {}

func (x *SekolahTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTenantRequest.ProtoReflect.Descriptor instead.
func (*SekolahTenantRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{27}
}

func (x *SekolahTenantRequest) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

type SekolahTenantResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahTenantId uint32                 `protobuf:"varint,1,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"`
	NamaSekolah     string                 `protobuf:"bytes,2,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	Schemaname      string                 `protobuf:"bytes,3,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SekolahTenantResponse) Reset() {
	*x = SekolahTenantResponse{}
	mi := &file_sekolah_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTenantResponse) ProtoMessage() {}

func (x *SekolahTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTenantResponse.ProtoReflect.Descriptor instead.
func (*SekolahTenantResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{28}
}

func (x *SekolahTenantResponse) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

func (x *SekolahTenantResponse) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *SekolahTenantResponse) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

type CreateSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Sekolah       *SekolahDapo           `protobuf:"bytes,2,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSekolahRequest) Reset() {
	*x = CreateSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSekolahRequest) ProtoMessage() {}

func (x *CreateSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSekolahRequest.ProtoReflect.Descriptor instead.
func (*CreateSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{29}
}

func (x *CreateSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateSekolahRequest) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type CreateSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSekolahResponse) Reset() {
	*x = CreateSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSekolahResponse) ProtoMessage() {}

func (x *CreateSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSekolahResponse.ProtoReflect.Descriptor instead.
func (*CreateSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{30}
}

func (x *CreateSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahRequest) Reset() {
	*x = GetSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahRequest) ProtoMessage() {}

func (x *GetSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahRequest.ProtoReflect.Descriptor instead.
func (*GetSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{31}
}

func (x *GetSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

type GetSekolahResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Sekolah              *SekolahDapo           `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	BentukPendidikanStr  string                 `protobuf:"bytes,2,opt,name=bentuk_pendidikan_str,json=bentukPendidikanStr,proto3" json:"bentuk_pendidikan_str,omitempty"`
	JenjangPendidikanStr string                 `protobuf:"bytes,3,opt,name=jenjang_pendidikan_str,json=jenjangPendidikanStr,proto3" json:"jenjang_pendidikan_str,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetSekolahResponse) Reset() {
	*x = GetSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahResponse) ProtoMessage() {}

func (x *GetSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahResponse.ProtoReflect.Descriptor instead.
func (*GetSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{32}
}

func (x *GetSekolahResponse) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

func (x *GetSekolahResponse) GetBentukPendidikanStr() string {
	if x != nil {
		return x.BentukPendidikanStr
	}
	return ""
}

func (x *GetSekolahResponse) GetJenjangPendidikanStr() string {
	if x != nil {
		return x.JenjangPendidikanStr
	}
	return ""
}

type UpdateSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Sekolah       *SekolahDapo           `protobuf:"bytes,2,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSekolahRequest) Reset() {
	*x = UpdateSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSekolahRequest) ProtoMessage() {}

func (x *UpdateSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSekolahRequest.ProtoReflect.Descriptor instead.
func (*UpdateSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateSekolahRequest) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type UpdateSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSekolahResponse) Reset() {
	*x = UpdateSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSekolahResponse) ProtoMessage() {}

func (x *UpdateSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSekolahResponse.ProtoReflect.Descriptor instead.
func (*UpdateSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateKategoriSekolahRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Schemaname      string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KategoriSekolah *KategoriSekolah       `protobuf:"bytes,2,opt,name=kategori_sekolah,json=kategoriSekolah,proto3" json:"kategori_sekolah,omitempty"`
	KategoriKelas   []*KategoriKelas       `protobuf:"bytes,3,rep,name=kategori_kelas,json=kategoriKelas,proto3" json:"kategori_kelas,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateKategoriSekolahRequest) Reset() {
	*x = CreateKategoriSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKategoriSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKategoriSekolahRequest) ProtoMessage() {}

func (x *CreateKategoriSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKategoriSekolahRequest.ProtoReflect.Descriptor instead.
func (*CreateKategoriSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{35}
}

func (x *CreateKategoriSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateKategoriSekolahRequest) GetKategoriSekolah() *KategoriSekolah {
	if x != nil {
		return x.KategoriSekolah
	}
	return nil
}

func (x *CreateKategoriSekolahRequest) GetKategoriKelas() []*KategoriKelas {
	if x != nil {
		return x.KategoriKelas
	}
	return nil
}

type CreateKategoriSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKategoriSekolahResponse) Reset() {
	*x = CreateKategoriSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKategoriSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKategoriSekolahResponse) ProtoMessage() {}

func (x *CreateKategoriSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKategoriSekolahResponse.ProtoReflect.Descriptor instead.
func (*CreateKategoriSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{36}
}

func (x *CreateKategoriSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateKategoriSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetKategoriSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	TahunAjaranId string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKategoriSekolahRequest) Reset() {
	*x = GetKategoriSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKategoriSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKategoriSekolahRequest) ProtoMessage() {}

func (x *GetKategoriSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKategoriSekolahRequest.ProtoReflect.Descriptor instead.
func (*GetKategoriSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{37}
}

func (x *GetKategoriSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetKategoriSekolahRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

type GetKategoriSekolahResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KategoriSekolah []*KategoriSekolah     `protobuf:"bytes,1,rep,name=kategori_sekolah,json=kategoriSekolah,proto3" json:"kategori_sekolah,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status          bool                   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetKategoriSekolahResponse) Reset() {
	*x = GetKategoriSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKategoriSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKategoriSekolahResponse) ProtoMessage() {}

func (x *GetKategoriSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKategoriSekolahResponse.ProtoReflect.Descriptor instead.
func (*GetKategoriSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{38}
}

func (x *GetKategoriSekolahResponse) GetKategoriSekolah() []*KategoriSekolah {
	if x != nil {
		return x.KategoriSekolah
	}
	return nil
}

func (x *GetKategoriSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetKategoriSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateKategoriSekolahRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Schemaname      string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KategoriSekolah *KategoriSekolah       `protobuf:"bytes,2,opt,name=kategori_sekolah,json=kategoriSekolah,proto3" json:"kategori_sekolah,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateKategoriSekolahRequest) Reset() {
	*x = UpdateKategoriSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKategoriSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKategoriSekolahRequest) ProtoMessage() {}

func (x *UpdateKategoriSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKategoriSekolahRequest.ProtoReflect.Descriptor instead.
func (*UpdateKategoriSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateKategoriSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateKategoriSekolahRequest) GetKategoriSekolah() *KategoriSekolah {
	if x != nil {
		return x.KategoriSekolah
	}
	return nil
}

type UpdateKategoriSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKategoriSekolahResponse) Reset() {
	*x = UpdateKategoriSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKategoriSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKategoriSekolahResponse) ProtoMessage() {}

func (x *UpdateKategoriSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKategoriSekolahResponse.ProtoReflect.Descriptor instead.
func (*UpdateKategoriSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateKategoriSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateKategoriSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteKategoriSekolahRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Schemaname        string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KategoriSekolahId int32                  `protobuf:"varint,2,opt,name=kategori_sekolah_id,json=kategoriSekolahId,proto3" json:"kategori_sekolah_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeleteKategoriSekolahRequest) Reset() {
	*x = DeleteKategoriSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKategoriSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKategoriSekolahRequest) ProtoMessage() {}

func (x *DeleteKategoriSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKategoriSekolahRequest.ProtoReflect.Descriptor instead.
func (*DeleteKategoriSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteKategoriSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteKategoriSekolahRequest) GetKategoriSekolahId() int32 {
	if x != nil {
		return x.KategoriSekolahId
	}
	return 0
}

type DeleteKategoriSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKategoriSekolahResponse) Reset() {
	*x = DeleteKategoriSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKategoriSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKategoriSekolahResponse) ProtoMessage() {}

func (x *DeleteKategoriSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKategoriSekolahResponse.ProtoReflect.Descriptor instead.
func (*DeleteKategoriSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteKategoriSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteKategoriSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Fungsi untuk membuat kelas berdasarkan kategori kelas dan sekolah
type ProsesKategoriSekolahDanKelasRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Schemaname      string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KategoriSekolah *KategoriSekolah       `protobuf:"bytes,2,opt,name=kategori_sekolah,json=kategoriSekolah,proto3" json:"kategori_sekolah,omitempty"`
	KategoriKelas   []*KategoriKelas       `protobuf:"bytes,3,rep,name=kategori_kelas,json=kategoriKelas,proto3" json:"kategori_kelas,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProsesKategoriSekolahDanKelasRequest) Reset() {
	*x = ProsesKategoriSekolahDanKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProsesKategoriSekolahDanKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProsesKategoriSekolahDanKelasRequest) ProtoMessage() {}

func (x *ProsesKategoriSekolahDanKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProsesKategoriSekolahDanKelasRequest.ProtoReflect.Descriptor instead.
func (*ProsesKategoriSekolahDanKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{43}
}

func (x *ProsesKategoriSekolahDanKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *ProsesKategoriSekolahDanKelasRequest) GetKategoriSekolah() *KategoriSekolah {
	if x != nil {
		return x.KategoriSekolah
	}
	return nil
}

func (x *ProsesKategoriSekolahDanKelasRequest) GetKategoriKelas() []*KategoriKelas {
	if x != nil {
		return x.KategoriKelas
	}
	return nil
}

type ProsesKategoriSekolahDanKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProsesKategoriSekolahDanKelasResponse) Reset() {
	*x = ProsesKategoriSekolahDanKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProsesKategoriSekolahDanKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProsesKategoriSekolahDanKelasResponse) ProtoMessage() {}

func (x *ProsesKategoriSekolahDanKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProsesKategoriSekolahDanKelasResponse.ProtoReflect.Descriptor instead.
func (*ProsesKategoriSekolahDanKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{44}
}

func (x *ProsesKategoriSekolahDanKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProsesKategoriSekolahDanKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Siswa Structure
type Siswa struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId  string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Nis             string                 `protobuf:"bytes,2,opt,name=nis,proto3" json:"nis,omitempty"`
	Nisn            string                 `protobuf:"bytes,3,opt,name=nisn,proto3" json:"nisn,omitempty"`
	NmSiswa         string                 `protobuf:"bytes,4,opt,name=nm_siswa,json=nmSiswa,proto3" json:"nm_siswa,omitempty"`
	TempatLahir     string                 `protobuf:"bytes,5,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir    string                 `protobuf:"bytes,6,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	JenisKelamin    string                 `protobuf:"bytes,7,opt,name=jenis_kelamin,json=jenisKelamin,proto3" json:"jenis_kelamin,omitempty"`
	Agama           string                 `protobuf:"bytes,8,opt,name=agama,proto3" json:"agama,omitempty"`
	AlamatSiswa     string                 `protobuf:"bytes,9,opt,name=alamat_siswa,json=alamatSiswa,proto3" json:"alamat_siswa,omitempty"`
	TeleponSiswa    string                 `protobuf:"bytes,10,opt,name=telepon_siswa,json=teleponSiswa,proto3" json:"telepon_siswa,omitempty"`
	DiterimaTanggal string                 `protobuf:"bytes,11,opt,name=diterima_tanggal,json=diterimaTanggal,proto3" json:"diterima_tanggal,omitempty"`
	NmAyah          string                 `protobuf:"bytes,12,opt,name=nm_ayah,json=nmAyah,proto3" json:"nm_ayah,omitempty"`
	NmIbu           string                 `protobuf:"bytes,13,opt,name=nm_ibu,json=nmIbu,proto3" json:"nm_ibu,omitempty"`
	PekerjaanAyah   string                 `protobuf:"bytes,14,opt,name=pekerjaan_ayah,json=pekerjaanAyah,proto3" json:"pekerjaan_ayah,omitempty"`
	PekerjaanIbu    string                 `protobuf:"bytes,15,opt,name=pekerjaan_ibu,json=pekerjaanIbu,proto3" json:"pekerjaan_ibu,omitempty"`
	NmWali          string                 `protobuf:"bytes,16,opt,name=nm_wali,json=nmWali,proto3" json:"nm_wali,omitempty"`
	PekerjaanWali   string                 `protobuf:"bytes,17,opt,name=pekerjaan_wali,json=pekerjaanWali,proto3" json:"pekerjaan_wali,omitempty"`
	Nik             string                 `protobuf:"bytes,18,opt,name=nik,proto3" json:"nik,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Siswa) Reset() {
	*x = Siswa{}
	mi := &file_sekolah_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Siswa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Siswa) ProtoMessage() {}

func (x *Siswa) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Siswa.ProtoReflect.Descriptor instead.
func (*Siswa) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{45}
}

func (x *Siswa) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *Siswa) GetNis() string {
	if x != nil {
		return x.Nis
	}
	return ""
}

func (x *Siswa) GetNisn() string {
	if x != nil {
		return x.Nisn
	}
	return ""
}

func (x *Siswa) GetNmSiswa() string {
	if x != nil {
		return x.NmSiswa
	}
	return ""
}

func (x *Siswa) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Siswa) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *Siswa) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *Siswa) GetAgama() string {
	if x != nil {
		return x.Agama
	}
	return ""
}

func (x *Siswa) GetAlamatSiswa() string {
	if x != nil {
		return x.AlamatSiswa
	}
	return ""
}

func (x *Siswa) GetTeleponSiswa() string {
	if x != nil {
		return x.TeleponSiswa
	}
	return ""
}

func (x *Siswa) GetDiterimaTanggal() string {
	if x != nil {
		return x.DiterimaTanggal
	}
	return ""
}

func (x *Siswa) GetNmAyah() string {
	if x != nil {
		return x.NmAyah
	}
	return ""
}

func (x *Siswa) GetNmIbu() string {
	if x != nil {
		return x.NmIbu
	}
	return ""
}

func (x *Siswa) GetPekerjaanAyah() string {
	if x != nil {
		return x.PekerjaanAyah
	}
	return ""
}

func (x *Siswa) GetPekerjaanIbu() string {
	if x != nil {
		return x.PekerjaanIbu
	}
	return ""
}

func (x *Siswa) GetNmWali() string {
	if x != nil {
		return x.NmWali
	}
	return ""
}

func (x *Siswa) GetPekerjaanWali() string {
	if x != nil {
		return x.PekerjaanWali
	}
	return ""
}

func (x *Siswa) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

type SiswaPelengkap struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PelengkapSiswaId string                 `protobuf:"bytes,1,opt,name=pelengkap_siswa_id,json=pelengkapSiswaId,proto3" json:"pelengkap_siswa_id,omitempty"`
	PesertaDidikId   string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	StatusDalamKel   string                 `protobuf:"bytes,3,opt,name=status_dalam_kel,json=statusDalamKel,proto3" json:"status_dalam_kel,omitempty"`
	AnakKe           string                 `protobuf:"bytes,4,opt,name=anak_ke,json=anakKe,proto3" json:"anak_ke,omitempty"`
	SekolahAsal      string                 `protobuf:"bytes,5,opt,name=sekolah_asal,json=sekolahAsal,proto3" json:"sekolah_asal,omitempty"`
	DiterimaKelas    string                 `protobuf:"bytes,6,opt,name=diterima_kelas,json=diterimaKelas,proto3" json:"diterima_kelas,omitempty"`
	AlamatOrtu       string                 `protobuf:"bytes,7,opt,name=alamat_ortu,json=alamatOrtu,proto3" json:"alamat_ortu,omitempty"`
	TeleponOrtu      string                 `protobuf:"bytes,8,opt,name=telepon_ortu,json=teleponOrtu,proto3" json:"telepon_ortu,omitempty"`
	AlamatWali       string                 `protobuf:"bytes,9,opt,name=alamat_wali,json=alamatWali,proto3" json:"alamat_wali,omitempty"`
	TeleponWali      string                 `protobuf:"bytes,10,opt,name=telepon_wali,json=teleponWali,proto3" json:"telepon_wali,omitempty"`
	FotoSiswa        string                 `protobuf:"bytes,11,opt,name=foto_siswa,json=fotoSiswa,proto3" json:"foto_siswa,omitempty"`
	Siswa            *Siswa                 `protobuf:"bytes,12,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SiswaPelengkap) Reset() {
	*x = SiswaPelengkap{}
	mi := &file_sekolah_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiswaPelengkap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiswaPelengkap) ProtoMessage() {}

func (x *SiswaPelengkap) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiswaPelengkap.ProtoReflect.Descriptor instead.
func (*SiswaPelengkap) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{46}
}

func (x *SiswaPelengkap) GetPelengkapSiswaId() string {
	if x != nil {
		return x.PelengkapSiswaId
	}
	return ""
}

func (x *SiswaPelengkap) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *SiswaPelengkap) GetStatusDalamKel() string {
	if x != nil {
		return x.StatusDalamKel
	}
	return ""
}

func (x *SiswaPelengkap) GetAnakKe() string {
	if x != nil {
		return x.AnakKe
	}
	return ""
}

func (x *SiswaPelengkap) GetSekolahAsal() string {
	if x != nil {
		return x.SekolahAsal
	}
	return ""
}

func (x *SiswaPelengkap) GetDiterimaKelas() string {
	if x != nil {
		return x.DiterimaKelas
	}
	return ""
}

func (x *SiswaPelengkap) GetAlamatOrtu() string {
	if x != nil {
		return x.AlamatOrtu
	}
	return ""
}

func (x *SiswaPelengkap) GetTeleponOrtu() string {
	if x != nil {
		return x.TeleponOrtu
	}
	return ""
}

func (x *SiswaPelengkap) GetAlamatWali() string {
	if x != nil {
		return x.AlamatWali
	}
	return ""
}

func (x *SiswaPelengkap) GetTeleponWali() string {
	if x != nil {
		return x.TeleponWali
	}
	return ""
}

func (x *SiswaPelengkap) GetFotoSiswa() string {
	if x != nil {
		return x.FotoSiswa
	}
	return ""
}

func (x *SiswaPelengkap) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

// Siswa CRUD
type CreateSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Siswa         *Siswa                 `protobuf:"bytes,2,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSiswaRequest) Reset() {
	*x = CreateSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiswaRequest) ProtoMessage() {}

func (x *CreateSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiswaRequest.ProtoReflect.Descriptor instead.
func (*CreateSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{47}
}

func (x *CreateSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateSiswaRequest) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type CreateSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSiswaResponse) Reset() {
	*x = CreateSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiswaResponse) ProtoMessage() {}

func (x *CreateSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiswaResponse.ProtoReflect.Descriptor instead.
func (*CreateSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{48}
}

func (x *CreateSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Crate Banyak Siswa
type CreateBanyakSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Siswa         []*Siswa               `protobuf:"bytes,2,rep,name=siswa,proto3" json:"siswa,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakSiswaRequest) Reset() {
	*x = CreateBanyakSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakSiswaRequest) ProtoMessage() {}

func (x *CreateBanyakSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakSiswaRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{49}
}

func (x *CreateBanyakSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateBanyakSiswaRequest) GetSiswa() []*Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

func (x *CreateBanyakSiswaRequest) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type CreateBanyakSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakSiswaResponse) Reset() {
	*x = CreateBanyakSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakSiswaResponse) ProtoMessage() {}

func (x *CreateBanyakSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakSiswaResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{50}
}

func (x *CreateBanyakSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`       // Batas data per halaman (opsional, default 10)
	Perpage       int32                  `protobuf:"varint,3,opt,name=perpage,proto3" json:"perpage,omitempty"` // Posisi data awal (opsional, default 0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSiswaRequest) Reset() {
	*x = GetSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiswaRequest) ProtoMessage() {}

func (x *GetSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiswaRequest.ProtoReflect.Descriptor instead.
func (*GetSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{51}
}

func (x *GetSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetSiswaRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSiswaRequest) GetPerpage() int32 {
	if x != nil {
		return x.Perpage
	}
	return 0
}

type GetSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Siswa         []*SiswaPelengkap      `protobuf:"bytes,1,rep,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSiswaResponse) Reset() {
	*x = GetSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiswaResponse) ProtoMessage() {}

func (x *GetSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiswaResponse.ProtoReflect.Descriptor instead.
func (*GetSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{52}
}

func (x *GetSiswaResponse) GetSiswa() []*SiswaPelengkap {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type UpdateSiswaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Siswa          *Siswa                 `protobuf:"bytes,2,opt,name=siswa,proto3" json:"siswa,omitempty"`
	SiswaPelengkap *SiswaPelengkap        `protobuf:"bytes,3,opt,name=siswa_pelengkap,json=siswaPelengkap,proto3" json:"siswa_pelengkap,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateSiswaRequest) Reset() {
	*x = UpdateSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiswaRequest) ProtoMessage() {}

func (x *UpdateSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiswaRequest.ProtoReflect.Descriptor instead.
func (*UpdateSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateSiswaRequest) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

func (x *UpdateSiswaRequest) GetSiswaPelengkap() *SiswaPelengkap {
	if x != nil {
		return x.SiswaPelengkap
	}
	return nil
}

type UpdateSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSiswaResponse) Reset() {
	*x = UpdateSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiswaResponse) ProtoMessage() {}

func (x *UpdateSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiswaResponse.ProtoReflect.Descriptor instead.
func (*UpdateSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SiswaId       string                 `protobuf:"bytes,2,opt,name=siswa_id,json=siswaId,proto3" json:"siswa_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSiswaRequest) Reset() {
	*x = DeleteSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiswaRequest) ProtoMessage() {}

func (x *DeleteSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiswaRequest.ProtoReflect.Descriptor instead.
func (*DeleteSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteSiswaRequest) GetSiswaId() string {
	if x != nil {
		return x.SiswaId
	}
	return ""
}

type DeleteSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSiswaResponse) Reset() {
	*x = DeleteSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiswaResponse) ProtoMessage() {}

func (x *DeleteSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiswaResponse.ProtoReflect.Descriptor instead.
func (*DeleteSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SearchSiswaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PesertaDidikId string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchSiswaRequest) Reset() {
	*x = SearchSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSiswaRequest) ProtoMessage() {}

func (x *SearchSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSiswaRequest.ProtoReflect.Descriptor instead.
func (*SearchSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{57}
}

func (x *SearchSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *SearchSiswaRequest) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

type SearchSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Siswa         *Siswa                 `protobuf:"bytes,1,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSiswaResponse) Reset() {
	*x = SearchSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSiswaResponse) ProtoMessage() {}

func (x *SearchSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSiswaResponse.ProtoReflect.Descriptor instead.
func (*SearchSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{58}
}

func (x *SearchSiswaResponse) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type UploadDataSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadType    string                 `protobuf:"bytes,1,opt,name=upload_type,json=uploadType,proto3" json:"upload_type,omitempty"` // siswa, nilai_akhir, guru, kelas
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId    string                 `protobuf:"bytes,3,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	File          []byte                 `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	Filename      string                 `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahRequest) Reset() {
	*x = UploadDataSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahRequest) ProtoMessage() {}

func (x *UploadDataSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahRequest.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{59}
}

func (x *UploadDataSekolahRequest) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

func (x *UploadDataSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UploadDataSekolahRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *UploadDataSekolahRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadDataSekolahRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type UploadDataSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	FileUrl       string                 `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahResponse) Reset() {
	*x = UploadDataSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahResponse) ProtoMessage() {}

func (x *UploadDataSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahResponse.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{60}
}

func (x *UploadDataSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadDataSekolahResponse) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type DownloadDataSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DownloadType  string                 `protobuf:"bytes,1,opt,name=download_type,json=downloadType,proto3" json:"download_type,omitempty"` // siswa, nilai_akhir, guru, kelas
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadDataSekolahRequest) Reset() {
	*x = DownloadDataSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadDataSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadDataSekolahRequest) ProtoMessage() {}

func (x *DownloadDataSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadDataSekolahRequest.ProtoReflect.Descriptor instead.
func (*DownloadDataSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{61}
}

func (x *DownloadDataSekolahRequest) GetDownloadType() string {
	if x != nil {
		return x.DownloadType
	}
	return ""
}

func (x *DownloadDataSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DownloadDataSekolahRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type DownloadDataSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	File          []byte                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadDataSekolahResponse) Reset() {
	*x = DownloadDataSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadDataSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadDataSekolahResponse) ProtoMessage() {}

func (x *DownloadDataSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadDataSekolahResponse.ProtoReflect.Descriptor instead.
func (*DownloadDataSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{62}
}

func (x *DownloadDataSekolahResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadDataSekolahResponse) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type Mapel1 struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IdMapMapel          int32                  `protobuf:"varint,1,opt,name=id_map_mapel,json=idMapMapel,proto3" json:"id_map_mapel,omitempty"`
	MataPelajaranId     string                 `protobuf:"bytes,2,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	NmLokal             string                 `protobuf:"bytes,3,opt,name=nm_lokal,json=nmLokal,proto3" json:"nm_lokal,omitempty"`
	AreaKompetensi      string                 `protobuf:"bytes,4,opt,name=area_kompetensi,json=areaKompetensi,proto3" json:"area_kompetensi,omitempty"`
	KlpMpl              string                 `protobuf:"bytes,5,opt,name=klp_mpl,json=klpMpl,proto3" json:"klp_mpl,omitempty"`
	KurikulumId         string                 `protobuf:"bytes,6,opt,name=kurikulum_id,json=kurikulumId,proto3" json:"kurikulum_id,omitempty"`
	UrutRapor           int32                  `protobuf:"varint,7,opt,name=urut_rapor,json=urutRapor,proto3" json:"urut_rapor,omitempty"`
	TingkatPendidikanId int32                  `protobuf:"varint,8,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Mapel1) Reset() {
	*x = Mapel1{}
	mi := &file_sekolah_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mapel1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapel1) ProtoMessage() {}

func (x *Mapel1) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapel1.ProtoReflect.Descriptor instead.
func (*Mapel1) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{63}
}

func (x *Mapel1) GetIdMapMapel() int32 {
	if x != nil {
		return x.IdMapMapel
	}
	return 0
}

func (x *Mapel1) GetMataPelajaranId() string {
	if x != nil {
		return x.MataPelajaranId
	}
	return ""
}

func (x *Mapel1) GetNmLokal() string {
	if x != nil {
		return x.NmLokal
	}
	return ""
}

func (x *Mapel1) GetAreaKompetensi() string {
	if x != nil {
		return x.AreaKompetensi
	}
	return ""
}

func (x *Mapel1) GetKlpMpl() string {
	if x != nil {
		return x.KlpMpl
	}
	return ""
}

func (x *Mapel1) GetKurikulumId() string {
	if x != nil {
		return x.KurikulumId
	}
	return ""
}

func (x *Mapel1) GetUrutRapor() int32 {
	if x != nil {
		return x.UrutRapor
	}
	return 0
}

func (x *Mapel1) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

type Mapel struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	MataPelajaranId     int32                  `protobuf:"varint,1,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	Nama                string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	PilihanSekolah      int32                  `protobuf:"varint,3,opt,name=pilihan_sekolah,json=pilihanSekolah,proto3" json:"pilihan_sekolah,omitempty"`
	PilihanBuku         int32                  `protobuf:"varint,4,opt,name=pilihan_buku,json=pilihanBuku,proto3" json:"pilihan_buku,omitempty"`
	PilihanKepengawasan int32                  `protobuf:"varint,5,opt,name=pilihan_kepengawasan,json=pilihanKepengawasan,proto3" json:"pilihan_kepengawasan,omitempty"`
	PilihanEvaluasi     int32                  `protobuf:"varint,6,opt,name=pilihan_evaluasi,json=pilihanEvaluasi,proto3" json:"pilihan_evaluasi,omitempty"`
	JurusanId           string                 `protobuf:"bytes,7,opt,name=jurusan_id,json=jurusanId,proto3" json:"jurusan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Mapel) Reset() {
	*x = Mapel{}
	mi := &file_sekolah_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mapel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapel) ProtoMessage() {}

func (x *Mapel) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapel.ProtoReflect.Descriptor instead.
func (*Mapel) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{64}
}

func (x *Mapel) GetMataPelajaranId() int32 {
	if x != nil {
		return x.MataPelajaranId
	}
	return 0
}

func (x *Mapel) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *Mapel) GetPilihanSekolah() int32 {
	if x != nil {
		return x.PilihanSekolah
	}
	return 0
}

func (x *Mapel) GetPilihanBuku() int32 {
	if x != nil {
		return x.PilihanBuku
	}
	return 0
}

func (x *Mapel) GetPilihanKepengawasan() int32 {
	if x != nil {
		return x.PilihanKepengawasan
	}
	return 0
}

func (x *Mapel) GetPilihanEvaluasi() int32 {
	if x != nil {
		return x.PilihanEvaluasi
	}
	return 0
}

func (x *Mapel) GetJurusanId() string {
	if x != nil {
		return x.JurusanId
	}
	return ""
}

type NilaiAkhir struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IdNilaiAkhir    string                 `protobuf:"bytes,1,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	AnggotaRombelId string                 `protobuf:"bytes,2,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	MataPelajaranId uint32                 `protobuf:"varint,3,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	SemesterId      string                 `protobuf:"bytes,4,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	NilaiPeng       uint32                 `protobuf:"varint,5,opt,name=nilai_peng,json=nilaiPeng,proto3" json:"nilai_peng,omitempty"`
	PredikatPeng    string                 `protobuf:"bytes,6,opt,name=predikat_peng,json=predikatPeng,proto3" json:"predikat_peng,omitempty"`
	NilaiKet        uint32                 `protobuf:"varint,7,opt,name=nilai_ket,json=nilaiKet,proto3" json:"nilai_ket,omitempty"`
	PredikatKet     string                 `protobuf:"bytes,8,opt,name=predikat_ket,json=predikatKet,proto3" json:"predikat_ket,omitempty"`
	NilaiSik        uint32                 `protobuf:"varint,9,opt,name=nilai_sik,json=nilaiSik,proto3" json:"nilai_sik,omitempty"`
	PredikatSik     string                 `protobuf:"bytes,10,opt,name=predikat_sik,json=predikatSik,proto3" json:"predikat_sik,omitempty"`
	NilaiSiksos     uint32                 `protobuf:"varint,11,opt,name=nilai_siksos,json=nilaiSiksos,proto3" json:"nilai_siksos,omitempty"`
	PredikatSiksos  string                 `protobuf:"bytes,12,opt,name=predikat_siksos,json=predikatSiksos,proto3" json:"predikat_siksos,omitempty"`
	PesertaDidikId  string                 `protobuf:"bytes,13,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	IdMinat         string                 `protobuf:"bytes,14,opt,name=id_minat,json=idMinat,proto3" json:"id_minat,omitempty"`
	Semester        uint32                 `protobuf:"varint,15,opt,name=semester,proto3" json:"semester,omitempty"`
	MataPelajaran   *Mapel                 `protobuf:"bytes,16,opt,name=mata_pelajaran,json=mataPelajaran,proto3" json:"mata_pelajaran,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NilaiAkhir) Reset() {
	*x = NilaiAkhir{}
	mi := &file_sekolah_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilaiAkhir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilaiAkhir) ProtoMessage() {}

func (x *NilaiAkhir) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilaiAkhir.ProtoReflect.Descriptor instead.
func (*NilaiAkhir) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{65}
}

func (x *NilaiAkhir) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

func (x *NilaiAkhir) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *NilaiAkhir) GetMataPelajaranId() uint32 {
	if x != nil {
		return x.MataPelajaranId
	}
	return 0
}

func (x *NilaiAkhir) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiPeng() uint32 {
	if x != nil {
		return x.NilaiPeng
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatPeng() string {
	if x != nil {
		return x.PredikatPeng
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiKet() uint32 {
	if x != nil {
		return x.NilaiKet
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatKet() string {
	if x != nil {
		return x.PredikatKet
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiSik() uint32 {
	if x != nil {
		return x.NilaiSik
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatSik() string {
	if x != nil {
		return x.PredikatSik
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiSiksos() uint32 {
	if x != nil {
		return x.NilaiSiksos
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatSiksos() string {
	if x != nil {
		return x.PredikatSiksos
	}
	return ""
}

func (x *NilaiAkhir) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *NilaiAkhir) GetIdMinat() string {
	if x != nil {
		return x.IdMinat
	}
	return ""
}

func (x *NilaiAkhir) GetSemester() uint32 {
	if x != nil {
		return x.Semester
	}
	return 0
}

func (x *NilaiAkhir) GetMataPelajaran() *Mapel {
	if x != nil {
		return x.MataPelajaran
	}
	return nil
}

type NilaiSiswa struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId      string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	NmSiswa             string                 `protobuf:"bytes,2,opt,name=nm_siswa,json=nmSiswa,proto3" json:"nm_siswa,omitempty"`
	RombonganBelajarId  string                 `protobuf:"bytes,3,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	NmKelas             string                 `protobuf:"bytes,4,opt,name=nm_kelas,json=nmKelas,proto3" json:"nm_kelas,omitempty"`
	TingkatPendidikanId int32                  `protobuf:"varint,5,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"` // repeated NilaiAkhir nilai_akhir = 6;
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NilaiSiswa) Reset() {
	*x = NilaiSiswa{}
	mi := &file_sekolah_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilaiSiswa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilaiSiswa) ProtoMessage() {}

func (x *NilaiSiswa) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilaiSiswa.ProtoReflect.Descriptor instead.
func (*NilaiSiswa) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{66}
}

func (x *NilaiSiswa) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *NilaiSiswa) GetNmSiswa() string {
	if x != nil {
		return x.NmSiswa
	}
	return ""
}

func (x *NilaiSiswa) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *NilaiSiswa) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *NilaiSiswa) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

type CreateNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	NilaiAkhir    []*NilaiAkhir          `protobuf:"bytes,2,rep,name=nilai_akhir,json=nilaiAkhir,proto3" json:"nilai_akhir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNilaiAkhirRequest) Reset() {
	*x = CreateNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNilaiAkhirRequest) ProtoMessage() {}

func (x *CreateNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*CreateNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{67}
}

func (x *CreateNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateNilaiAkhirRequest) GetNilaiAkhir() []*NilaiAkhir {
	if x != nil {
		return x.NilaiAkhir
	}
	return nil
}

type CreateNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNilaiAkhirResponse) Reset() {
	*x = CreateNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNilaiAkhirResponse) ProtoMessage() {}

func (x *CreateNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*CreateNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{68}
}

func (x *CreateNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetNilaiAkhirRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId     string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	PesertaDidikId string                 `protobuf:"bytes,3,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNilaiAkhirRequest) Reset() {
	*x = GetNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNilaiAkhirRequest) ProtoMessage() {}

func (x *GetNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*GetNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{69}
}

func (x *GetNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetNilaiAkhirRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetNilaiAkhirRequest) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

type GetNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NilaiSiswa    []*NilaiSiswa          `protobuf:"bytes,1,rep,name=nilai_siswa,json=nilaiSiswa,proto3" json:"nilai_siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNilaiAkhirResponse) Reset() {
	*x = GetNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNilaiAkhirResponse) ProtoMessage() {}

func (x *GetNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*GetNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{70}
}

func (x *GetNilaiAkhirResponse) GetNilaiSiswa() []*NilaiSiswa {
	if x != nil {
		return x.NilaiSiswa
	}
	return nil
}

type UpdateNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	IdNilaiAkhir  string                 `protobuf:"bytes,2,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	Nilai         *NilaiAkhir            `protobuf:"bytes,3,opt,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNilaiAkhirRequest) Reset() {
	*x = UpdateNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNilaiAkhirRequest) ProtoMessage() {}

func (x *UpdateNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*UpdateNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{71}
}

func (x *UpdateNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateNilaiAkhirRequest) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

func (x *UpdateNilaiAkhirRequest) GetNilai() *NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type UpdateNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNilaiAkhirResponse) Reset() {
	*x = UpdateNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNilaiAkhirResponse) ProtoMessage() {}

func (x *UpdateNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*UpdateNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{72}
}

func (x *UpdateNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	IdNilaiAkhir  string                 `protobuf:"bytes,2,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNilaiAkhirRequest) Reset() {
	*x = DeleteNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNilaiAkhirRequest) ProtoMessage() {}

func (x *DeleteNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*DeleteNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteNilaiAkhirRequest) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

type DeleteNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNilaiAkhirResponse) Reset() {
	*x = DeleteNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNilaiAkhirResponse) ProtoMessage() {}

func (x *DeleteNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*DeleteNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{74}
}

func (x *DeleteNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type NilaiSearch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// string id_nilai_akhir = 1;
	NilaiPeng uint32 `protobuf:"varint,1,opt,name=nilai_peng,json=nilaiPeng,proto3" json:"nilai_peng,omitempty"`
	// string mata_pelajaran_id = 3;
	MataPelajaran *Mapel `protobuf:"bytes,2,opt,name=mataPelajaran,proto3" json:"mataPelajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NilaiSearch) Reset() {
	*x = NilaiSearch{}
	mi := &file_sekolah_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilaiSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilaiSearch) ProtoMessage() {}

func (x *NilaiSearch) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilaiSearch.ProtoReflect.Descriptor instead.
func (*NilaiSearch) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{75}
}

func (x *NilaiSearch) GetNilaiPeng() uint32 {
	if x != nil {
		return x.NilaiPeng
	}
	return 0
}

func (x *NilaiSearch) GetMataPelajaran() *Mapel {
	if x != nil {
		return x.MataPelajaran
	}
	return nil
}

type SearchNilaiAkhirRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId     string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	PesertaDidikId string                 `protobuf:"bytes,3,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchNilaiAkhirRequest) Reset() {
	*x = SearchNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNilaiAkhirRequest) ProtoMessage() {}

func (x *SearchNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*SearchNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{76}
}

func (x *SearchNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *SearchNilaiAkhirRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *SearchNilaiAkhirRequest) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

type SearchNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nilai         []*NilaiSearch         `protobuf:"bytes,1,rep,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchNilaiAkhirResponse) Reset() {
	*x = SearchNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNilaiAkhirResponse) ProtoMessage() {}

func (x *SearchNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*SearchNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{77}
}

func (x *SearchNilaiAkhirResponse) GetNilai() []*NilaiSearch {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type Kelas struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RombonganBelajarId  string                 `protobuf:"bytes,1,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	SekolahId           string                 `protobuf:"bytes,2,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	SemesterId          string                 `protobuf:"bytes,3,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	JurusanId           string                 `protobuf:"bytes,4,opt,name=jurusan_id,json=jurusanId,proto3" json:"jurusan_id,omitempty"`
	PtkId               string                 `protobuf:"bytes,5,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	NmKelas             string                 `protobuf:"bytes,6,opt,name=nm_kelas,json=nmKelas,proto3" json:"nm_kelas,omitempty"`
	TingkatPendidikanId int32                  `protobuf:"varint,7,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	JenisRombel         int32                  `protobuf:"varint,8,opt,name=jenis_rombel,json=jenisRombel,proto3" json:"jenis_rombel,omitempty"`
	NamaJurusanSp       string                 `protobuf:"bytes,9,opt,name=nama_jurusan_sp,json=namaJurusanSp,proto3" json:"nama_jurusan_sp,omitempty"`
	JurusanSpId         *string                `protobuf:"bytes,10,opt,name=jurusan_sp_id,json=jurusanSpId,proto3,oneof" json:"jurusan_sp_id,omitempty"`
	KurikulumId         int32                  `protobuf:"varint,11,opt,name=kurikulum_id,json=kurikulumId,proto3" json:"kurikulum_id,omitempty"`
	AnggotaKelas        []*AnggotaKelas        `protobuf:"bytes,12,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	Pembelajaran        []*Pembelajaran        `protobuf:"bytes,13,rep,name=pembelajaran,proto3" json:"pembelajaran,omitempty"`
	Ptk                 *PTK                   `protobuf:"bytes,14,opt,name=ptk,proto3" json:"ptk,omitempty"`
	Jurusan             *Jurusan               `protobuf:"bytes,15,opt,name=jurusan,proto3" json:"jurusan,omitempty"`
	Kurikulum           *Kurikulum             `protobuf:"bytes,16,opt,name=kurikulum,proto3" json:"kurikulum,omitempty"`
	TingkatPendidikan   *TingkatPendidikan     `protobuf:"bytes,17,opt,name=tingkat_pendidikan,json=tingkatPendidikan,proto3" json:"tingkat_pendidikan,omitempty"`
	JumlahAnggota       uint32                 `protobuf:"varint,18,opt,name=jumlahAnggota,proto3" json:"jumlahAnggota,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Kelas) Reset() {
	*x = Kelas{}
	mi := &file_sekolah_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kelas) ProtoMessage() {}

func (x *Kelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kelas.ProtoReflect.Descriptor instead.
func (*Kelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{78}
}

func (x *Kelas) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *Kelas) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *Kelas) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *Kelas) GetJurusanId() string {
	if x != nil {
		return x.JurusanId
	}
	return ""
}

func (x *Kelas) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *Kelas) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *Kelas) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

func (x *Kelas) GetJenisRombel() int32 {
	if x != nil {
		return x.JenisRombel
	}
	return 0
}

func (x *Kelas) GetNamaJurusanSp() string {
	if x != nil {
		return x.NamaJurusanSp
	}
	return ""
}

func (x *Kelas) GetJurusanSpId() string {
	if x != nil && x.JurusanSpId != nil {
		return *x.JurusanSpId
	}
	return ""
}

func (x *Kelas) GetKurikulumId() int32 {
	if x != nil {
		return x.KurikulumId
	}
	return 0
}

func (x *Kelas) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

func (x *Kelas) GetPembelajaran() []*Pembelajaran {
	if x != nil {
		return x.Pembelajaran
	}
	return nil
}

func (x *Kelas) GetPtk() *PTK {
	if x != nil {
		return x.Ptk
	}
	return nil
}

func (x *Kelas) GetJurusan() *Jurusan {
	if x != nil {
		return x.Jurusan
	}
	return nil
}

func (x *Kelas) GetKurikulum() *Kurikulum {
	if x != nil {
		return x.Kurikulum
	}
	return nil
}

func (x *Kelas) GetTingkatPendidikan() *TingkatPendidikan {
	if x != nil {
		return x.TingkatPendidikan
	}
	return nil
}

func (x *Kelas) GetJumlahAnggota() uint32 {
	if x != nil {
		return x.JumlahAnggota
	}
	return 0
}

type NamaKelas struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RombonganBelajarId  string                 `protobuf:"bytes,1,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	NmKelas             string                 `protobuf:"bytes,2,opt,name=nm_kelas,json=nmKelas,proto3" json:"nm_kelas,omitempty"`
	PtkId               string                 `protobuf:"bytes,3,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	NamaJurusanSp       string                 `protobuf:"bytes,4,opt,name=nama_jurusan_sp,json=namaJurusanSp,proto3" json:"nama_jurusan_sp,omitempty"`
	TingkatPendidikanId int32                  `protobuf:"varint,5,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NamaKelas) Reset() {
	*x = NamaKelas{}
	mi := &file_sekolah_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamaKelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamaKelas) ProtoMessage() {}

func (x *NamaKelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamaKelas.ProtoReflect.Descriptor instead.
func (*NamaKelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{79}
}

func (x *NamaKelas) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *NamaKelas) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *NamaKelas) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *NamaKelas) GetNamaJurusanSp() string {
	if x != nil {
		return x.NamaJurusanSp
	}
	return ""
}

func (x *NamaKelas) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

type CreateKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kelas         []*Kelas               `protobuf:"bytes,2,rep,name=kelas,proto3" json:"kelas,omitempty"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,3,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKelasRequest) Reset() {
	*x = CreateKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKelasRequest) ProtoMessage() {}

func (x *CreateKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{80}
}

func (x *CreateKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateKelasRequest) GetKelas() []*Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

func (x *CreateKelasRequest) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type CreateKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKelasResponse) Reset() {
	*x = CreateKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKelasResponse) ProtoMessage() {}

func (x *CreateKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{81}
}

func (x *CreateKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// untuk import dari dapodik atau dari excel
// ==============================
type CreateBanyakKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kelas         []*Kelas               `protobuf:"bytes,2,rep,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakKelasRequest) Reset() {
	*x = CreateBanyakKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakKelasRequest) ProtoMessage() {}

func (x *CreateBanyakKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{82}
}

func (x *CreateBanyakKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateBanyakKelasRequest) GetKelas() []*Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type CreateBanyakKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakKelasResponse) Reset() {
	*x = CreateBanyakKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakKelasResponse) ProtoMessage() {}

func (x *CreateBanyakKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{83}
}

func (x *CreateBanyakKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateBanyakKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakKelasResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type GetKelasRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Schemaname          string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId          string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	KelasId             string                 `protobuf:"bytes,3,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	TingkatPendidikanId uint32                 `protobuf:"varint,4,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetKelasRequest) Reset() {
	*x = GetKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasRequest) ProtoMessage() {}

func (x *GetKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasRequest.ProtoReflect.Descriptor instead.
func (*GetKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{84}
}

func (x *GetKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetKelasRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

func (x *GetKelasRequest) GetTingkatPendidikanId() uint32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

type GetKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Kelas         []*Kelas               `protobuf:"bytes,3,rep,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasResponse) Reset() {
	*x = GetKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasResponse) ProtoMessage() {}

func (x *GetKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasResponse.ProtoReflect.Descriptor instead.
func (*GetKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{85}
}

func (x *GetKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetKelasResponse) GetKelas() []*Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type UpdateKelasRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Schemaname string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	// string kelas_id = 2;
	Kelas         *Kelas          `protobuf:"bytes,2,opt,name=kelas,proto3" json:"kelas,omitempty"`
	AnggotaKelas  []*AnggotaKelas `protobuf:"bytes,3,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKelasRequest) Reset() {
	*x = UpdateKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKelasRequest) ProtoMessage() {}

func (x *UpdateKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKelasRequest.ProtoReflect.Descriptor instead.
func (*UpdateKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{86}
}

func (x *UpdateKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateKelasRequest) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

func (x *UpdateKelasRequest) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type UpdateKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKelasResponse) Reset() {
	*x = UpdateKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKelasResponse) ProtoMessage() {}

func (x *UpdateKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKelasResponse.ProtoReflect.Descriptor instead.
func (*UpdateKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KelasId       string                 `protobuf:"bytes,2,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKelasRequest) Reset() {
	*x = DeleteKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKelasRequest) ProtoMessage() {}

func (x *DeleteKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKelasRequest.ProtoReflect.Descriptor instead.
func (*DeleteKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{88}
}

func (x *DeleteKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

type DeleteKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKelasResponse) Reset() {
	*x = DeleteKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKelasResponse) ProtoMessage() {}

func (x *DeleteKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKelasResponse.ProtoReflect.Descriptor instead.
func (*DeleteKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ImportDapodikRombelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kelas         []*Kelas               `protobuf:"bytes,2,rep,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportDapodikRombelRequest) Reset() {
	*x = ImportDapodikRombelRequest{}
	mi := &file_sekolah_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportDapodikRombelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDapodikRombelRequest) ProtoMessage() {}

func (x *ImportDapodikRombelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDapodikRombelRequest.ProtoReflect.Descriptor instead.
func (*ImportDapodikRombelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{90}
}

func (x *ImportDapodikRombelRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *ImportDapodikRombelRequest) GetKelas() []*Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type ImportDapodikRombelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportDapodikRombelResponse) Reset() {
	*x = ImportDapodikRombelResponse{}
	mi := &file_sekolah_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportDapodikRombelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDapodikRombelResponse) ProtoMessage() {}

func (x *ImportDapodikRombelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDapodikRombelResponse.ProtoReflect.Descriptor instead.
func (*ImportDapodikRombelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{91}
}

func (x *ImportDapodikRombelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImportDapodikRombelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ImportDapodikRombelResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type GetKelasByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId    string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasByNameRequest) Reset() {
	*x = GetKelasByNameRequest{}
	mi := &file_sekolah_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasByNameRequest) ProtoMessage() {}

func (x *GetKelasByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasByNameRequest.ProtoReflect.Descriptor instead.
func (*GetKelasByNameRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{92}
}

func (x *GetKelasByNameRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetKelasByNameRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type GetKelasByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kelas         []*NamaKelas           `protobuf:"bytes,1,rep,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasByNameResponse) Reset() {
	*x = GetKelasByNameResponse{}
	mi := &file_sekolah_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasByNameResponse) ProtoMessage() {}

func (x *GetKelasByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasByNameResponse.ProtoReflect.Descriptor instead.
func (*GetKelasByNameResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{93}
}

func (x *GetKelasByNameResponse) GetKelas() []*NamaKelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type AnggotaKelas struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AnggotaRombelId    string                 `protobuf:"bytes,1,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	PesertaDidikId     string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	RombonganBelajarId string                 `protobuf:"bytes,3,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	SemesterId         string                 `protobuf:"bytes,4,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	NmSiswa            string                 `protobuf:"bytes,5,opt,name=nm_siswa,json=nmSiswa,proto3" json:"nm_siswa,omitempty"`
	WaliKelas          string                 `protobuf:"bytes,6,opt,name=wali_kelas,json=waliKelas,proto3" json:"wali_kelas,omitempty"`
	PtkId              string                 `protobuf:"bytes,7,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	NmKelas            string                 `protobuf:"bytes,8,opt,name=nm_kelas,json=nmKelas,proto3" json:"nm_kelas,omitempty"`
	Nilai              []*NilaiAkhir          `protobuf:"bytes,9,rep,name=nilai,proto3" json:"nilai,omitempty"`
	PesertaDidik       *Siswa                 `protobuf:"bytes,10,opt,name=peserta_didik,json=pesertaDidik,proto3" json:"peserta_didik,omitempty"`
	RombonganBelajar   *Kelas                 `protobuf:"bytes,11,opt,name=rombongan_belajar,json=rombonganBelajar,proto3" json:"rombongan_belajar,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AnggotaKelas) Reset() {
	*x = AnggotaKelas{}
	mi := &file_sekolah_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnggotaKelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnggotaKelas) ProtoMessage() {}

func (x *AnggotaKelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnggotaKelas.ProtoReflect.Descriptor instead.
func (*AnggotaKelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{94}
}

func (x *AnggotaKelas) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *AnggotaKelas) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *AnggotaKelas) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *AnggotaKelas) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *AnggotaKelas) GetNmSiswa() string {
	if x != nil {
		return x.NmSiswa
	}
	return ""
}

func (x *AnggotaKelas) GetWaliKelas() string {
	if x != nil {
		return x.WaliKelas
	}
	return ""
}

func (x *AnggotaKelas) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *AnggotaKelas) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *AnggotaKelas) GetNilai() []*NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

func (x *AnggotaKelas) GetPesertaDidik() *Siswa {
	if x != nil {
		return x.PesertaDidik
	}
	return nil
}

func (x *AnggotaKelas) GetRombonganBelajar() *Kelas {
	if x != nil {
		return x.RombonganBelajar
	}
	return nil
}

type AnggotaKelas1 struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId      string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Nis                 string                 `protobuf:"bytes,2,opt,name=nis,proto3" json:"nis,omitempty"`
	Nisn                string                 `protobuf:"bytes,3,opt,name=nisn,proto3" json:"nisn,omitempty"`
	Nik                 string                 `protobuf:"bytes,4,opt,name=nik,proto3" json:"nik,omitempty"`
	NmSiswa             string                 `protobuf:"bytes,5,opt,name=nm_siswa,json=nmSiswa,proto3" json:"nm_siswa,omitempty"`
	TempatLahir         string                 `protobuf:"bytes,6,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir        string                 `protobuf:"bytes,7,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	JenisKelamin        string                 `protobuf:"bytes,8,opt,name=jenis_kelamin,json=jenisKelamin,proto3" json:"jenis_kelamin,omitempty"`
	NmIbu               string                 `protobuf:"bytes,9,opt,name=nm_ibu,json=nmIbu,proto3" json:"nm_ibu,omitempty"`
	NmKelas             string                 `protobuf:"bytes,10,opt,name=nmKelas,proto3" json:"nmKelas,omitempty"`
	WaliKelas           string                 `protobuf:"bytes,11,opt,name=waliKelas,proto3" json:"waliKelas,omitempty"`
	RombonganBelajarId  string                 `protobuf:"bytes,12,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	TingkatPendidikanId int32                  `protobuf:"varint,13,opt,name=tingkatPendidikanId,proto3" json:"tingkatPendidikanId,omitempty"`
	AnggotaRombelId     string                 `protobuf:"bytes,14,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	Agama               string                 `protobuf:"bytes,15,opt,name=agama,proto3" json:"agama,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AnggotaKelas1) Reset() {
	*x = AnggotaKelas1{}
	mi := &file_sekolah_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnggotaKelas1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnggotaKelas1) ProtoMessage() {}

func (x *AnggotaKelas1) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnggotaKelas1.ProtoReflect.Descriptor instead.
func (*AnggotaKelas1) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{95}
}

func (x *AnggotaKelas1) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *AnggotaKelas1) GetNis() string {
	if x != nil {
		return x.Nis
	}
	return ""
}

func (x *AnggotaKelas1) GetNisn() string {
	if x != nil {
		return x.Nisn
	}
	return ""
}

func (x *AnggotaKelas1) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *AnggotaKelas1) GetNmSiswa() string {
	if x != nil {
		return x.NmSiswa
	}
	return ""
}

func (x *AnggotaKelas1) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *AnggotaKelas1) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *AnggotaKelas1) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *AnggotaKelas1) GetNmIbu() string {
	if x != nil {
		return x.NmIbu
	}
	return ""
}

func (x *AnggotaKelas1) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *AnggotaKelas1) GetWaliKelas() string {
	if x != nil {
		return x.WaliKelas
	}
	return ""
}

func (x *AnggotaKelas1) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *AnggotaKelas1) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

func (x *AnggotaKelas1) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *AnggotaKelas1) GetAgama() string {
	if x != nil {
		return x.Agama
	}
	return ""
}

type CreateAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	AnggotaKelas  *AnggotaKelas          `protobuf:"bytes,2,opt,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	Kelas         *Kelas                 `protobuf:"bytes,3,opt,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAnggotaKelasRequest) Reset() {
	*x = CreateAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnggotaKelasRequest) ProtoMessage() {}

func (x *CreateAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{96}
}

func (x *CreateAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateAnggotaKelasRequest) GetAnggotaKelas() *AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

func (x *CreateAnggotaKelasRequest) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type CreateAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAnggotaKelasResponse) Reset() {
	*x = CreateAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnggotaKelasResponse) ProtoMessage() {}

func (x *CreateAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{97}
}

func (x *CreateAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,2,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakAnggotaKelasRequest) Reset() {
	*x = CreateBanyakAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakAnggotaKelasRequest) ProtoMessage() {}

func (x *CreateBanyakAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{98}
}

func (x *CreateBanyakAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateBanyakAnggotaKelasRequest) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type CreateBanyakAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakAnggotaKelasResponse) Reset() {
	*x = CreateBanyakAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakAnggotaKelasResponse) ProtoMessage() {}

func (x *CreateBanyakAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{99}
}

func (x *CreateBanyakAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetAnggotaKelasRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Schemaname      string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId      string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	AnggotaRombelId string                 `protobuf:"bytes,3,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetAnggotaKelasRequest) Reset() {
	*x = GetAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnggotaKelasRequest) ProtoMessage() {}

func (x *GetAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*GetAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{100}
}

func (x *GetAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetAnggotaKelasRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetAnggotaKelasRequest) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

type GetAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AnggotaKelas  []*AnggotaKelas1       `protobuf:"bytes,1,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAnggotaKelasResponse) Reset() {
	*x = GetAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnggotaKelasResponse) ProtoMessage() {}

func (x *GetAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*GetAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{101}
}

func (x *GetAnggotaKelasResponse) GetAnggotaKelas() []*AnggotaKelas1 {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type UpdateAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	AnggotaKelas  *AnggotaKelas          `protobuf:"bytes,2,opt,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"` // string kelas_id = 3;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnggotaKelasRequest) Reset() {
	*x = UpdateAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnggotaKelasRequest) ProtoMessage() {}

func (x *UpdateAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{102}
}

func (x *UpdateAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateAnggotaKelasRequest) GetAnggotaKelas() *AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type UpdateAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnggotaKelasResponse) Reset() {
	*x = UpdateAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnggotaKelasResponse) ProtoMessage() {}

func (x *UpdateAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*UpdateAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{103}
}

func (x *UpdateAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteAnggotaKelasRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Schemaname      string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	AnggotaRombelId string                 `protobuf:"bytes,2,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteAnggotaKelasRequest) Reset() {
	*x = DeleteAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnggotaKelasRequest) ProtoMessage() {}

func (x *DeleteAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*DeleteAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{104}
}

func (x *DeleteAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteAnggotaKelasRequest) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

type DeleteAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAnggotaKelasResponse) Reset() {
	*x = DeleteAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnggotaKelasResponse) ProtoMessage() {}

func (x *DeleteAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*DeleteAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{105}
}

func (x *DeleteAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteBatchAnggotaKelasRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Schemaname      string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	AnggotaRombelId []string               `protobuf:"bytes,2,rep,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteBatchAnggotaKelasRequest) Reset() {
	*x = DeleteBatchAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBatchAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBatchAnggotaKelasRequest) ProtoMessage() {}

func (x *DeleteBatchAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBatchAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*DeleteBatchAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{106}
}

func (x *DeleteBatchAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteBatchAnggotaKelasRequest) GetAnggotaRombelId() []string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return nil
}

type DeleteBatchAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBatchAnggotaKelasResponse) Reset() {
	*x = DeleteBatchAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBatchAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBatchAnggotaKelasResponse) ProtoMessage() {}

func (x *DeleteBatchAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBatchAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*DeleteBatchAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{107}
}

func (x *DeleteBatchAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteBatchAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SearchAnggotaKelasRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Schemaname         string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId         string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	TingkatId          *string                `protobuf:"bytes,3,opt,name=tingkat_id,json=tingkatId,proto3,oneof" json:"tingkat_id,omitempty"`
	PesertaDidikId     *string                `protobuf:"bytes,4,opt,name=peserta_didik_id,json=pesertaDidikId,proto3,oneof" json:"peserta_didik_id,omitempty"`
	RombonganBelajarId *string                `protobuf:"bytes,5,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3,oneof" json:"rombongan_belajar_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SearchAnggotaKelasRequest) Reset() {
	*x = SearchAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAnggotaKelasRequest) ProtoMessage() {}

func (x *SearchAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*SearchAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{108}
}

func (x *SearchAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *SearchAnggotaKelasRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *SearchAnggotaKelasRequest) GetTingkatId() string {
	if x != nil && x.TingkatId != nil {
		return *x.TingkatId
	}
	return ""
}

func (x *SearchAnggotaKelasRequest) GetPesertaDidikId() string {
	if x != nil && x.PesertaDidikId != nil {
		return *x.PesertaDidikId
	}
	return ""
}

func (x *SearchAnggotaKelasRequest) GetRombonganBelajarId() string {
	if x != nil && x.RombonganBelajarId != nil {
		return *x.RombonganBelajarId
	}
	return ""
}

type SearchAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,1,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAnggotaKelasResponse) Reset() {
	*x = SearchAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAnggotaKelasResponse) ProtoMessage() {}

func (x *SearchAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*SearchAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{109}
}

func (x *SearchAnggotaKelasResponse) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type FilterAnggotaKelasRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Schemaname          string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId          string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	TingkatPendidikanId *int32                 `protobuf:"varint,3,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3,oneof" json:"tingkat_pendidikan_id,omitempty"`
	RombonganBelajarId  *string                `protobuf:"bytes,4,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3,oneof" json:"rombongan_belajar_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FilterAnggotaKelasRequest) Reset() {
	*x = FilterAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAnggotaKelasRequest) ProtoMessage() {}

func (x *FilterAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*FilterAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{110}
}

func (x *FilterAnggotaKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *FilterAnggotaKelasRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *FilterAnggotaKelasRequest) GetTingkatPendidikanId() int32 {
	if x != nil && x.TingkatPendidikanId != nil {
		return *x.TingkatPendidikanId
	}
	return 0
}

func (x *FilterAnggotaKelasRequest) GetRombonganBelajarId() string {
	if x != nil && x.RombonganBelajarId != nil {
		return *x.RombonganBelajarId
	}
	return ""
}

type FilterAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,1,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterAnggotaKelasResponse) Reset() {
	*x = FilterAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAnggotaKelasResponse) ProtoMessage() {}

func (x *FilterAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*FilterAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{111}
}

func (x *FilterAnggotaKelasResponse) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type ConflictRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`     // nilai unik: bisa UUID, string, dsb
	Nama          string                 `protobuf:"bytes,4,opt,name=nama,proto3" json:"nama,omitempty"` // bisa juga nama entitas, opsional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConflictRow) Reset() {
	*x = ConflictRow{}
	mi := &file_sekolah_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConflictRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConflictRow) ProtoMessage() {}

func (x *ConflictRow) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConflictRow.ProtoReflect.Descriptor instead.
func (*ConflictRow) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{112}
}

func (x *ConflictRow) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ConflictRow) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ConflictRow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConflictRow) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

type ConflictResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Conflicts     []*ConflictRow         `protobuf:"bytes,2,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
	TotalConflict int32                  `protobuf:"varint,3,opt,name=total_conflict,json=totalConflict,proto3" json:"total_conflict,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConflictResponse) Reset() {
	*x = ConflictResponse{}
	mi := &file_sekolah_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConflictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConflictResponse) ProtoMessage() {}

func (x *ConflictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConflictResponse.ProtoReflect.Descriptor instead.
func (*ConflictResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{113}
}

func (x *ConflictResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConflictResponse) GetConflicts() []*ConflictRow {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

func (x *ConflictResponse) GetTotalConflict() int32 {
	if x != nil {
		return x.TotalConflict
	}
	return 0
}

// PTK Structure
type PTK struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PtkId             string                 `protobuf:"bytes,1,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	Nama              string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	JenisKelamin      string                 `protobuf:"bytes,3,opt,name=jenis_kelamin,json=jenisKelamin,proto3" json:"jenis_kelamin,omitempty"`
	Agama             string                 `protobuf:"bytes,4,opt,name=agama,proto3" json:"agama,omitempty"`
	TempatLahir       string                 `protobuf:"bytes,5,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir      string                 `protobuf:"bytes,6,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	IsDapodik         bool                   `protobuf:"varint,7,opt,name=is_dapodik,json=isDapodik,proto3" json:"is_dapodik,omitempty"`
	PtkIdDapodik      string                 `protobuf:"bytes,8,opt,name=ptk_id_dapodik,json=ptkIdDapodik,proto3" json:"ptk_id_dapodik,omitempty"`
	StatusKeaktifanId int32                  `protobuf:"varint,9,opt,name=status_keaktifan_id,json=statusKeaktifanId,proto3" json:"status_keaktifan_id,omitempty"`
	JenisPtkId        int32                  `protobuf:"varint,10,opt,name=jenis_ptk_id,json=jenisPtkId,proto3" json:"jenis_ptk_id,omitempty"`
	SoftDelete        int32                  `protobuf:"varint,11,opt,name=soft_delete,json=softDelete,proto3" json:"soft_delete,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PTK) Reset() {
	*x = PTK{}
	mi := &file_sekolah_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PTK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTK) ProtoMessage() {}

func (x *PTK) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTK.ProtoReflect.Descriptor instead.
func (*PTK) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{114}
}

func (x *PTK) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *PTK) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *PTK) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *PTK) GetAgama() string {
	if x != nil {
		return x.Agama
	}
	return ""
}

func (x *PTK) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *PTK) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *PTK) GetIsDapodik() bool {
	if x != nil {
		return x.IsDapodik
	}
	return false
}

func (x *PTK) GetPtkIdDapodik() string {
	if x != nil {
		return x.PtkIdDapodik
	}
	return ""
}

func (x *PTK) GetStatusKeaktifanId() int32 {
	if x != nil {
		return x.StatusKeaktifanId
	}
	return 0
}

func (x *PTK) GetJenisPtkId() int32 {
	if x != nil {
		return x.JenisPtkId
	}
	return 0
}

func (x *PTK) GetSoftDelete() int32 {
	if x != nil {
		return x.SoftDelete
	}
	return 0
}

// Request and Response for CRUD
// PTK CRUD
type CreatePTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PTK           []*PTK                 `protobuf:"bytes,2,rep,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKRequest) Reset() {
	*x = CreatePTKRequest{}
	mi := &file_sekolah_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKRequest) ProtoMessage() {}

func (x *CreatePTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKRequest.ProtoReflect.Descriptor instead.
func (*CreatePTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{115}
}

func (x *CreatePTKRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreatePTKRequest) GetPTK() []*PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type CreatePTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKResponse) Reset() {
	*x = CreatePTKResponse{}
	mi := &file_sekolah_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKResponse) ProtoMessage() {}

func (x *CreatePTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKResponse.ProtoReflect.Descriptor instead.
func (*CreatePTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{116}
}

func (x *CreatePTKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePTKResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreatePTKResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type GetPTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkId         *string                `protobuf:"bytes,2,opt,name=ptk_id,json=ptkId,proto3,oneof" json:"ptk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKRequest) Reset() {
	*x = GetPTKRequest{}
	mi := &file_sekolah_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKRequest) ProtoMessage() {}

func (x *GetPTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKRequest.ProtoReflect.Descriptor instead.
func (*GetPTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{117}
}

func (x *GetPTKRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetPTKRequest) GetPtkId() string {
	if x != nil && x.PtkId != nil {
		return *x.PtkId
	}
	return ""
}

type GetPTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PTK           []*PTK                 `protobuf:"bytes,1,rep,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKResponse) Reset() {
	*x = GetPTKResponse{}
	mi := &file_sekolah_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKResponse) ProtoMessage() {}

func (x *GetPTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKResponse.ProtoReflect.Descriptor instead.
func (*GetPTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{118}
}

func (x *GetPTKResponse) GetPTK() []*PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type UpdatePTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PTK           []*PTK                 `protobuf:"bytes,2,rep,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKRequest) Reset() {
	*x = UpdatePTKRequest{}
	mi := &file_sekolah_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKRequest) ProtoMessage() {}

func (x *UpdatePTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKRequest.ProtoReflect.Descriptor instead.
func (*UpdatePTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{119}
}

func (x *UpdatePTKRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdatePTKRequest) GetPTK() []*PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type UpdatePTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKResponse) Reset() {
	*x = UpdatePTKResponse{}
	mi := &file_sekolah_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKResponse) ProtoMessage() {}

func (x *UpdatePTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKResponse.ProtoReflect.Descriptor instead.
func (*UpdatePTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{120}
}

func (x *UpdatePTKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePTKResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeletePTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkId         string                 `protobuf:"bytes,2,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePTKRequest) Reset() {
	*x = DeletePTKRequest{}
	mi := &file_sekolah_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKRequest) ProtoMessage() {}

func (x *DeletePTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKRequest.ProtoReflect.Descriptor instead.
func (*DeletePTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{121}
}

func (x *DeletePTKRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeletePTKRequest) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

type DeletePTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePTKResponse) Reset() {
	*x = DeletePTKResponse{}
	mi := &file_sekolah_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKResponse) ProtoMessage() {}

func (x *DeletePTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKResponse.ProtoReflect.Descriptor instead.
func (*DeletePTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{122}
}

func (x *DeletePTKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeletePTKResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SearchPTKByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Nama          string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPTKByNameRequest) Reset() {
	*x = SearchPTKByNameRequest{}
	mi := &file_sekolah_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPTKByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPTKByNameRequest) ProtoMessage() {}

func (x *SearchPTKByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPTKByNameRequest.ProtoReflect.Descriptor instead.
func (*SearchPTKByNameRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{123}
}

func (x *SearchPTKByNameRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *SearchPTKByNameRequest) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

type SearchPTKByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PTK           []*PTK                 `protobuf:"bytes,1,rep,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPTKByNameResponse) Reset() {
	*x = SearchPTKByNameResponse{}
	mi := &file_sekolah_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPTKByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPTKByNameResponse) ProtoMessage() {}

func (x *SearchPTKByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPTKByNameResponse.ProtoReflect.Descriptor instead.
func (*SearchPTKByNameResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{124}
}

func (x *SearchPTKByNameResponse) GetPTK() []*PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type PTKTerdaftar struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PtkTerdaftarId        string                 `protobuf:"bytes,1,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	PtkId                 string                 `protobuf:"bytes,2,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	TahunAjaranId         string                 `protobuf:"bytes,3,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	JenisKeluarId         string                 `protobuf:"bytes,4,opt,name=jenis_keluar_id,json=jenisKeluarId,proto3" json:"jenis_keluar_id,omitempty"`
	IsDapodik             bool                   `protobuf:"varint,5,opt,name=is_dapodik,json=isDapodik,proto3" json:"is_dapodik,omitempty"`
	PtkTerdaftarIdDapodik string                 `protobuf:"bytes,6,opt,name=ptk_terdaftar_id_dapodik,json=ptkTerdaftarIdDapodik,proto3" json:"ptk_terdaftar_id_dapodik,omitempty"`
	Ptk                   *PTK                   `protobuf:"bytes,8,opt,name=ptk,proto3" json:"ptk,omitempty"`
	PtkPelengkap          *PtkPelengkap          `protobuf:"bytes,9,opt,name=ptk_pelengkap,json=ptkPelengkap,proto3" json:"ptk_pelengkap,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PTKTerdaftar) Reset() {
	*x = PTKTerdaftar{}
	mi := &file_sekolah_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PTKTerdaftar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTKTerdaftar) ProtoMessage() {}

func (x *PTKTerdaftar) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTKTerdaftar.ProtoReflect.Descriptor instead.
func (*PTKTerdaftar) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{125}
}

func (x *PTKTerdaftar) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

func (x *PTKTerdaftar) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *PTKTerdaftar) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *PTKTerdaftar) GetJenisKeluarId() string {
	if x != nil {
		return x.JenisKeluarId
	}
	return ""
}

func (x *PTKTerdaftar) GetIsDapodik() bool {
	if x != nil {
		return x.IsDapodik
	}
	return false
}

func (x *PTKTerdaftar) GetPtkTerdaftarIdDapodik() string {
	if x != nil {
		return x.PtkTerdaftarIdDapodik
	}
	return ""
}

func (x *PTKTerdaftar) GetPtk() *PTK {
	if x != nil {
		return x.Ptk
	}
	return nil
}

func (x *PTKTerdaftar) GetPtkPelengkap() *PtkPelengkap {
	if x != nil {
		return x.PtkPelengkap
	}
	return nil
}

type CreatePTKTerdaftarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkTerdaftar  []*PTKTerdaftar        `protobuf:"bytes,2,rep,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKTerdaftarRequest) Reset() {
	*x = CreatePTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKTerdaftarRequest) ProtoMessage() {}

func (x *CreatePTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*CreatePTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{126}
}

func (x *CreatePTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreatePTKTerdaftarRequest) GetPtkTerdaftar() []*PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

type CreatePTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKTerdaftarResponse) Reset() {
	*x = CreatePTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKTerdaftarResponse) ProtoMessage() {}

func (x *CreatePTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*CreatePTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{127}
}

func (x *CreatePTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreatePTKTerdaftarResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type CreateBanyakPTKTerdaftarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkTerdaftar  []*PTKTerdaftar        `protobuf:"bytes,2,rep,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakPTKTerdaftarRequest) Reset() {
	*x = CreateBanyakPTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakPTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakPTKTerdaftarRequest) ProtoMessage() {}

func (x *CreateBanyakPTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakPTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakPTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{128}
}

func (x *CreateBanyakPTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateBanyakPTKTerdaftarRequest) GetPtkTerdaftar() []*PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

type CreateBanyakPTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakPTKTerdaftarResponse) Reset() {
	*x = CreateBanyakPTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakPTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakPTKTerdaftarResponse) ProtoMessage() {}

func (x *CreateBanyakPTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakPTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakPTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{129}
}

func (x *CreateBanyakPTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakPTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateBanyakPTKTerdaftarResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type GetPTKTerdaftarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	TahunAjaranId string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"` // string ptk_terdaftar_id = 3;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKTerdaftarRequest) Reset() {
	*x = GetPTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKTerdaftarRequest) ProtoMessage() {}

func (x *GetPTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*GetPTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{130}
}

func (x *GetPTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetPTKTerdaftarRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

type GetPTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PtkTerdaftar  []*PTKTerdaftar        `protobuf:"bytes,1,rep,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKTerdaftarResponse) Reset() {
	*x = GetPTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKTerdaftarResponse) ProtoMessage() {}

func (x *GetPTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*GetPTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{131}
}

func (x *GetPTKTerdaftarResponse) GetPtkTerdaftar() []*PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

func (x *GetPTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdatePTKTerdaftarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkTerdaftar  []*PTKTerdaftar        `protobuf:"bytes,2,rep,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKTerdaftarRequest) Reset() {
	*x = UpdatePTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKTerdaftarRequest) ProtoMessage() {}

func (x *UpdatePTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*UpdatePTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{132}
}

func (x *UpdatePTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdatePTKTerdaftarRequest) GetPtkTerdaftar() []*PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

type UpdatePTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKTerdaftarResponse) Reset() {
	*x = UpdatePTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKTerdaftarResponse) ProtoMessage() {}

func (x *UpdatePTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*UpdatePTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{133}
}

func (x *UpdatePTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeletePTKTerdaftarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkTerdaftarId string                 `protobuf:"bytes,2,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeletePTKTerdaftarRequest) Reset() {
	*x = DeletePTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKTerdaftarRequest) ProtoMessage() {}

func (x *DeletePTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*DeletePTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{134}
}

func (x *DeletePTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeletePTKTerdaftarRequest) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

type DeletePTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePTKTerdaftarResponse) Reset() {
	*x = DeletePTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKTerdaftarResponse) ProtoMessage() {}

func (x *DeletePTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*DeletePTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{135}
}

func (x *DeletePTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeletePTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteBatchPTKTerdaftarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkTerdaftarId []string               `protobuf:"bytes,2,rep,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteBatchPTKTerdaftarRequest) Reset() {
	*x = DeleteBatchPTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBatchPTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBatchPTKTerdaftarRequest) ProtoMessage() {}

func (x *DeleteBatchPTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBatchPTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*DeleteBatchPTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{136}
}

func (x *DeleteBatchPTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteBatchPTKTerdaftarRequest) GetPtkTerdaftarId() []string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return nil
}

type DeleteBatchPTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBatchPTKTerdaftarResponse) Reset() {
	*x = DeleteBatchPTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBatchPTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBatchPTKTerdaftarResponse) ProtoMessage() {}

func (x *DeleteBatchPTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBatchPTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*DeleteBatchPTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{137}
}

func (x *DeleteBatchPTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteBatchPTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SearchPTKTerdaftarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PtkTerdaftarId string                 `protobuf:"bytes,2,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"` // string tahun_ajaran_id = 3;
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchPTKTerdaftarRequest) Reset() {
	*x = SearchPTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPTKTerdaftarRequest) ProtoMessage() {}

func (x *SearchPTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*SearchPTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{138}
}

func (x *SearchPTKTerdaftarRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *SearchPTKTerdaftarRequest) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

type SearchPTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PtkTerdaftar  *PTKTerdaftar          `protobuf:"bytes,1,opt,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPTKTerdaftarResponse) Reset() {
	*x = SearchPTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPTKTerdaftarResponse) ProtoMessage() {}

func (x *SearchPTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*SearchPTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{139}
}

func (x *SearchPTKTerdaftarResponse) GetPtkTerdaftar() *PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

func (x *SearchPTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchPTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Kenaikan struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SemesterId      string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	AnggotaRombelId string                 `protobuf:"bytes,2,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	PesertaDidikId  string                 `protobuf:"bytes,3,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Kenaikan        int32                  `protobuf:"varint,4,opt,name=kenaikan,proto3" json:"kenaikan,omitempty"`
	Tingkat         int32                  `protobuf:"varint,5,opt,name=tingkat,proto3" json:"tingkat,omitempty"`
	AnggotaKelas    *AnggotaKelas          `protobuf:"bytes,6,opt,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Kenaikan) Reset() {
	*x = Kenaikan{}
	mi := &file_sekolah_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kenaikan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kenaikan) ProtoMessage() {}

func (x *Kenaikan) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kenaikan.ProtoReflect.Descriptor instead.
func (*Kenaikan) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{140}
}

func (x *Kenaikan) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *Kenaikan) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *Kenaikan) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *Kenaikan) GetKenaikan() int32 {
	if x != nil {
		return x.Kenaikan
	}
	return 0
}

func (x *Kenaikan) GetTingkat() int32 {
	if x != nil {
		return x.Tingkat
	}
	return 0
}

func (x *Kenaikan) GetAnggotaKelas() *AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type CreateKenaikanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kenaikan      int32                  `protobuf:"varint,2,opt,name=kenaikan,proto3" json:"kenaikan,omitempty"`
	Tingkat       int32                  `protobuf:"varint,3,opt,name=tingkat,proto3" json:"tingkat,omitempty"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,4,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKenaikanRequest) Reset() {
	*x = CreateKenaikanRequest{}
	mi := &file_sekolah_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKenaikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKenaikanRequest) ProtoMessage() {}

func (x *CreateKenaikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKenaikanRequest.ProtoReflect.Descriptor instead.
func (*CreateKenaikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{141}
}

func (x *CreateKenaikanRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateKenaikanRequest) GetKenaikan() int32 {
	if x != nil {
		return x.Kenaikan
	}
	return 0
}

func (x *CreateKenaikanRequest) GetTingkat() int32 {
	if x != nil {
		return x.Tingkat
	}
	return 0
}

func (x *CreateKenaikanRequest) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type CreateKenaikanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKenaikanResponse) Reset() {
	*x = CreateKenaikanResponse{}
	mi := &file_sekolah_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKenaikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKenaikanResponse) ProtoMessage() {}

func (x *CreateKenaikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKenaikanResponse.ProtoReflect.Descriptor instead.
func (*CreateKenaikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{142}
}

func (x *CreateKenaikanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateKenaikanResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateKenaikanResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type GetKenaikanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId    string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	TipeKenaikan  int32                  `protobuf:"varint,3,opt,name=tipe_kenaikan,json=tipeKenaikan,proto3" json:"tipe_kenaikan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKenaikanRequest) Reset() {
	*x = GetKenaikanRequest{}
	mi := &file_sekolah_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKenaikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKenaikanRequest) ProtoMessage() {}

func (x *GetKenaikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKenaikanRequest.ProtoReflect.Descriptor instead.
func (*GetKenaikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{143}
}

func (x *GetKenaikanRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetKenaikanRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetKenaikanRequest) GetTipeKenaikan() int32 {
	if x != nil {
		return x.TipeKenaikan
	}
	return 0
}

type GetKenaikanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kenaikan      []*Kenaikan            `protobuf:"bytes,1,rep,name=kenaikan,proto3" json:"kenaikan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKenaikanResponse) Reset() {
	*x = GetKenaikanResponse{}
	mi := &file_sekolah_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKenaikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKenaikanResponse) ProtoMessage() {}

func (x *GetKenaikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKenaikanResponse.ProtoReflect.Descriptor instead.
func (*GetKenaikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{144}
}

func (x *GetKenaikanResponse) GetKenaikan() []*Kenaikan {
	if x != nil {
		return x.Kenaikan
	}
	return nil
}

type FilterKenaikanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId    string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	TipeKenaikan  int32                  `protobuf:"varint,3,opt,name=tipe_kenaikan,json=tipeKenaikan,proto3" json:"tipe_kenaikan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterKenaikanRequest) Reset() {
	*x = FilterKenaikanRequest{}
	mi := &file_sekolah_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterKenaikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterKenaikanRequest) ProtoMessage() {}

func (x *FilterKenaikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterKenaikanRequest.ProtoReflect.Descriptor instead.
func (*FilterKenaikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{145}
}

func (x *FilterKenaikanRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *FilterKenaikanRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *FilterKenaikanRequest) GetTipeKenaikan() int32 {
	if x != nil {
		return x.TipeKenaikan
	}
	return 0
}

type FilterKenaikanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kenaikan      []*Kenaikan            `protobuf:"bytes,1,rep,name=kenaikan,proto3" json:"kenaikan,omitempty"` // repeated Siswa siswa = 2;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterKenaikanResponse) Reset() {
	*x = FilterKenaikanResponse{}
	mi := &file_sekolah_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterKenaikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterKenaikanResponse) ProtoMessage() {}

func (x *FilterKenaikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterKenaikanResponse.ProtoReflect.Descriptor instead.
func (*FilterKenaikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{146}
}

func (x *FilterKenaikanResponse) GetKenaikan() []*Kenaikan {
	if x != nil {
		return x.Kenaikan
	}
	return nil
}

type UpdateKenaikanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kenaikan      []*Kenaikan            `protobuf:"bytes,2,rep,name=kenaikan,proto3" json:"kenaikan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKenaikanRequest) Reset() {
	*x = UpdateKenaikanRequest{}
	mi := &file_sekolah_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKenaikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKenaikanRequest) ProtoMessage() {}

func (x *UpdateKenaikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKenaikanRequest.ProtoReflect.Descriptor instead.
func (*UpdateKenaikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{147}
}

func (x *UpdateKenaikanRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateKenaikanRequest) GetKenaikan() []*Kenaikan {
	if x != nil {
		return x.Kenaikan
	}
	return nil
}

type UpdateKenaikanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Conflicts     *ConflictResponse      `protobuf:"bytes,3,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKenaikanResponse) Reset() {
	*x = UpdateKenaikanResponse{}
	mi := &file_sekolah_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKenaikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKenaikanResponse) ProtoMessage() {}

func (x *UpdateKenaikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKenaikanResponse.ProtoReflect.Descriptor instead.
func (*UpdateKenaikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{148}
}

func (x *UpdateKenaikanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateKenaikanResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateKenaikanResponse) GetConflicts() *ConflictResponse {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type DeleteKenaikanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KdKenaikan    []string               `protobuf:"bytes,2,rep,name=kd_kenaikan,json=kdKenaikan,proto3" json:"kd_kenaikan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKenaikanRequest) Reset() {
	*x = DeleteKenaikanRequest{}
	mi := &file_sekolah_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKenaikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKenaikanRequest) ProtoMessage() {}

func (x *DeleteKenaikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKenaikanRequest.ProtoReflect.Descriptor instead.
func (*DeleteKenaikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{149}
}

func (x *DeleteKenaikanRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteKenaikanRequest) GetKdKenaikan() []string {
	if x != nil {
		return x.KdKenaikan
	}
	return nil
}

type DeleteKenaikanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKenaikanResponse) Reset() {
	*x = DeleteKenaikanResponse{}
	mi := &file_sekolah_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKenaikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKenaikanResponse) ProtoMessage() {}

func (x *DeleteKenaikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKenaikanResponse.ProtoReflect.Descriptor instead.
func (*DeleteKenaikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{150}
}

func (x *DeleteKenaikanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteKenaikanResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadKenaikanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kenaikan      []*Kenaikan            `protobuf:"bytes,2,rep,name=kenaikan,proto3" json:"kenaikan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadKenaikanRequest) Reset() {
	*x = UploadKenaikanRequest{}
	mi := &file_sekolah_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadKenaikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadKenaikanRequest) ProtoMessage() {}

func (x *UploadKenaikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadKenaikanRequest.ProtoReflect.Descriptor instead.
func (*UploadKenaikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{151}
}

func (x *UploadKenaikanRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UploadKenaikanRequest) GetKenaikan() []*Kenaikan {
	if x != nil {
		return x.Kenaikan
	}
	return nil
}

type UploadKenaikanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadKenaikanResponse) Reset() {
	*x = UploadKenaikanResponse{}
	mi := &file_sekolah_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadKenaikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadKenaikanResponse) ProtoMessage() {}

func (x *UploadKenaikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadKenaikanResponse.ProtoReflect.Descriptor instead.
func (*UploadKenaikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{152}
}

func (x *UploadKenaikanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Ijazah struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ID                          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PesertaDidikId              string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	AnggotaRombelId             string                 `protobuf:"bytes,3,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	NomorIjazah                 string                 `protobuf:"bytes,4,opt,name=nomor_ijazah,json=nomorIjazah,proto3" json:"nomor_ijazah,omitempty"`
	TempatIjazah                string                 `protobuf:"bytes,5,opt,name=tempat_ijazah,json=tempatIjazah,proto3" json:"tempat_ijazah,omitempty"`
	TanggalIjazah               string                 `protobuf:"bytes,6,opt,name=tanggal_ijazah,json=tanggalIjazah,proto3" json:"tanggal_ijazah,omitempty"`
	ProgramKeahlian             string                 `protobuf:"bytes,7,opt,name=program_keahlian,json=programKeahlian,proto3" json:"program_keahlian,omitempty"`
	PaketKeahlian               string                 `protobuf:"bytes,8,opt,name=paket_keahlian,json=paketKeahlian,proto3" json:"paket_keahlian,omitempty"`
	SekolahId                   string                 `protobuf:"bytes,9,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	NamaOrtuWali                string                 `protobuf:"bytes,10,opt,name=nama_ortu_wali,json=namaOrtuWali,proto3" json:"nama_ortu_wali,omitempty"`
	SekolahPenyelenggaraUjianUs string                 `protobuf:"bytes,11,opt,name=sekolah_penyelenggara_ujian_us,json=sekolahPenyelenggaraUjianUs,proto3" json:"sekolah_penyelenggara_ujian_us,omitempty"`
	SekolahPenyelenggaraUjianUn string                 `protobuf:"bytes,12,opt,name=sekolah_penyelenggara_ujian_un,json=sekolahPenyelenggaraUjianUn,proto3" json:"sekolah_penyelenggara_ujian_un,omitempty"`
	CidUrl                      string                 `protobuf:"bytes,13,opt,name=cid_url,json=cidUrl,proto3" json:"cid_url,omitempty"`
	BlockexplorerUrl            string                 `protobuf:"bytes,14,opt,name=blockexplorer_url,json=blockexplorerUrl,proto3" json:"blockexplorer_url,omitempty"`
	TahunAjaranId               string                 `protobuf:"bytes,15,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	PesertaDidik                *Siswa                 `protobuf:"bytes,16,opt,name=peserta_didik,json=pesertaDidik,proto3" json:"peserta_didik,omitempty"`
	RombonganBelajar            *Kelas                 `protobuf:"bytes,17,opt,name=rombongan_belajar,json=rombonganBelajar,proto3" json:"rombongan_belajar,omitempty"`
	TranskripNilai              *TranskripNilai        `protobuf:"bytes,18,opt,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	Status                      int32                  `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Ijazah) Reset() {
	*x = Ijazah{}
	mi := &file_sekolah_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ijazah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ijazah) ProtoMessage() {}

func (x *Ijazah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ijazah.ProtoReflect.Descriptor instead.
func (*Ijazah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{153}
}

func (x *Ijazah) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Ijazah) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *Ijazah) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *Ijazah) GetNomorIjazah() string {
	if x != nil {
		return x.NomorIjazah
	}
	return ""
}

func (x *Ijazah) GetTempatIjazah() string {
	if x != nil {
		return x.TempatIjazah
	}
	return ""
}

func (x *Ijazah) GetTanggalIjazah() string {
	if x != nil {
		return x.TanggalIjazah
	}
	return ""
}

func (x *Ijazah) GetProgramKeahlian() string {
	if x != nil {
		return x.ProgramKeahlian
	}
	return ""
}

func (x *Ijazah) GetPaketKeahlian() string {
	if x != nil {
		return x.PaketKeahlian
	}
	return ""
}

func (x *Ijazah) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *Ijazah) GetNamaOrtuWali() string {
	if x != nil {
		return x.NamaOrtuWali
	}
	return ""
}

func (x *Ijazah) GetSekolahPenyelenggaraUjianUs() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUs
	}
	return ""
}

func (x *Ijazah) GetSekolahPenyelenggaraUjianUn() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUn
	}
	return ""
}

func (x *Ijazah) GetCidUrl() string {
	if x != nil {
		return x.CidUrl
	}
	return ""
}

func (x *Ijazah) GetBlockexplorerUrl() string {
	if x != nil {
		return x.BlockexplorerUrl
	}
	return ""
}

func (x *Ijazah) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *Ijazah) GetPesertaDidik() *Siswa {
	if x != nil {
		return x.PesertaDidik
	}
	return nil
}

func (x *Ijazah) GetRombonganBelajar() *Kelas {
	if x != nil {
		return x.RombonganBelajar
	}
	return nil
}

func (x *Ijazah) GetTranskripNilai() *TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

func (x *Ijazah) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Dns struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ID                          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PesertaDidikId              string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	RombonganBelajarId          string                 `protobuf:"bytes,3,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	ProgramKeahlian             string                 `protobuf:"bytes,4,opt,name=program_keahlian,json=programKeahlian,proto3" json:"program_keahlian,omitempty"`
	PaketKeahlian               string                 `protobuf:"bytes,5,opt,name=paket_keahlian,json=paketKeahlian,proto3" json:"paket_keahlian,omitempty"`
	SekolahId                   string                 `protobuf:"bytes,6,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	Npsn                        string                 `protobuf:"bytes,7,opt,name=npsn,proto3" json:"npsn,omitempty"`
	KabupatenKota               string                 `protobuf:"bytes,8,opt,name=kabupaten_kota,json=kabupatenKota,proto3" json:"kabupaten_kota,omitempty"`
	Provinsi                    string                 `protobuf:"bytes,9,opt,name=provinsi,proto3" json:"provinsi,omitempty"`
	Nama                        string                 `protobuf:"bytes,10,opt,name=nama,proto3" json:"nama,omitempty"`
	TempatLahir                 string                 `protobuf:"bytes,11,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir                string                 `protobuf:"bytes,12,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	Nis                         string                 `protobuf:"bytes,13,opt,name=nis,proto3" json:"nis,omitempty"`
	Nisn                        string                 `protobuf:"bytes,14,opt,name=nisn,proto3" json:"nisn,omitempty"`
	NamaOrtuWali                string                 `protobuf:"bytes,15,opt,name=nama_ortu_wali,json=namaOrtuWali,proto3" json:"nama_ortu_wali,omitempty"`
	SekolahPenyelenggaraUjianUs string                 `protobuf:"bytes,16,opt,name=sekolah_penyelenggara_ujian_us,json=sekolahPenyelenggaraUjianUs,proto3" json:"sekolah_penyelenggara_ujian_us,omitempty"`
	SekolahPenyelenggaraUjianUn string                 `protobuf:"bytes,17,opt,name=sekolah_penyelenggara_ujian_un,json=sekolahPenyelenggaraUjianUn,proto3" json:"sekolah_penyelenggara_ujian_un,omitempty"`
	AsalSekolah                 string                 `protobuf:"bytes,18,opt,name=asal_sekolah,json=asalSekolah,proto3" json:"asal_sekolah,omitempty"`
	NomorIjazah                 string                 `protobuf:"bytes,19,opt,name=nomor_ijazah,json=nomorIjazah,proto3" json:"nomor_ijazah,omitempty"`
	TempatIjazah                string                 `protobuf:"bytes,20,opt,name=tempat_ijazah,json=tempatIjazah,proto3" json:"tempat_ijazah,omitempty"`
	TanggalIjazah               string                 `protobuf:"bytes,21,opt,name=tanggal_ijazah,json=tanggalIjazah,proto3" json:"tanggal_ijazah,omitempty"`
	IsComplete                  bool                   `protobuf:"varint,22,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	TahunAjaranId               string                 `protobuf:"bytes,23,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	Kelas                       *Kelas                 `protobuf:"bytes,24,opt,name=kelas,proto3" json:"kelas,omitempty"`
	Siswa                       *Siswa                 `protobuf:"bytes,25,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Dns) Reset() {
	*x = Dns{}
	mi := &file_sekolah_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dns) ProtoMessage() {}

func (x *Dns) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dns.ProtoReflect.Descriptor instead.
func (*Dns) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{154}
}

func (x *Dns) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Dns) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *Dns) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *Dns) GetProgramKeahlian() string {
	if x != nil {
		return x.ProgramKeahlian
	}
	return ""
}

func (x *Dns) GetPaketKeahlian() string {
	if x != nil {
		return x.PaketKeahlian
	}
	return ""
}

func (x *Dns) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *Dns) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *Dns) GetKabupatenKota() string {
	if x != nil {
		return x.KabupatenKota
	}
	return ""
}

func (x *Dns) GetProvinsi() string {
	if x != nil {
		return x.Provinsi
	}
	return ""
}

func (x *Dns) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *Dns) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Dns) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *Dns) GetNis() string {
	if x != nil {
		return x.Nis
	}
	return ""
}

func (x *Dns) GetNisn() string {
	if x != nil {
		return x.Nisn
	}
	return ""
}

func (x *Dns) GetNamaOrtuWali() string {
	if x != nil {
		return x.NamaOrtuWali
	}
	return ""
}

func (x *Dns) GetSekolahPenyelenggaraUjianUs() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUs
	}
	return ""
}

func (x *Dns) GetSekolahPenyelenggaraUjianUn() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUn
	}
	return ""
}

func (x *Dns) GetAsalSekolah() string {
	if x != nil {
		return x.AsalSekolah
	}
	return ""
}

func (x *Dns) GetNomorIjazah() string {
	if x != nil {
		return x.NomorIjazah
	}
	return ""
}

func (x *Dns) GetTempatIjazah() string {
	if x != nil {
		return x.TempatIjazah
	}
	return ""
}

func (x *Dns) GetTanggalIjazah() string {
	if x != nil {
		return x.TanggalIjazah
	}
	return ""
}

func (x *Dns) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *Dns) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *Dns) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

func (x *Dns) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type InfoIjazah struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId           string                 `protobuf:"bytes,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	TempatDikeluarkanIjazah string                 `protobuf:"bytes,2,opt,name=tempat_dikeluarkan_ijazah,json=tempatDikeluarkanIjazah,proto3" json:"tempat_dikeluarkan_ijazah,omitempty"`
	TglDikeluarkanIjazah    string                 `protobuf:"bytes,3,opt,name=tgl_dikeluarkan_ijazah,json=tglDikeluarkanIjazah,proto3" json:"tgl_dikeluarkan_ijazah,omitempty"`
	PtkId                   string                 `protobuf:"bytes,4,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	KopSekolahUrl           string                 `protobuf:"bytes,5,opt,name=kop_sekolah_url,json=kopSekolahUrl,proto3" json:"kop_sekolah_url,omitempty"`
	Ptk                     *PTK                   `protobuf:"bytes,6,opt,name=ptk,proto3" json:"ptk,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *InfoIjazah) Reset() {
	*x = InfoIjazah{}
	mi := &file_sekolah_proto_msgTypes[155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoIjazah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoIjazah) ProtoMessage() {}

func (x *InfoIjazah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoIjazah.ProtoReflect.Descriptor instead.
func (*InfoIjazah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{155}
}

func (x *InfoIjazah) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *InfoIjazah) GetTempatDikeluarkanIjazah() string {
	if x != nil {
		return x.TempatDikeluarkanIjazah
	}
	return ""
}

func (x *InfoIjazah) GetTglDikeluarkanIjazah() string {
	if x != nil {
		return x.TglDikeluarkanIjazah
	}
	return ""
}

func (x *InfoIjazah) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *InfoIjazah) GetKopSekolahUrl() string {
	if x != nil {
		return x.KopSekolahUrl
	}
	return ""
}

func (x *InfoIjazah) GetPtk() *PTK {
	if x != nil {
		return x.Ptk
	}
	return nil
}

type CreateDnsRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Schemaname            string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	TahunAjaranId         string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	DataNominasiSementara []*Dns                 `protobuf:"bytes,3,rep,name=data_nominasi_sementara,json=dataNominasiSementara,proto3" json:"data_nominasi_sementara,omitempty"`
	SekolahId             string                 `protobuf:"bytes,4,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CreateDnsRequest) Reset() {
	*x = CreateDnsRequest{}
	mi := &file_sekolah_proto_msgTypes[156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDnsRequest) ProtoMessage() {}

func (x *CreateDnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDnsRequest.ProtoReflect.Descriptor instead.
func (*CreateDnsRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{156}
}

func (x *CreateDnsRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateDnsRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *CreateDnsRequest) GetDataNominasiSementara() []*Dns {
	if x != nil {
		return x.DataNominasiSementara
	}
	return nil
}

func (x *CreateDnsRequest) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

type CreateDnsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDnsResponse) Reset() {
	*x = CreateDnsResponse{}
	mi := &file_sekolah_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDnsResponse) ProtoMessage() {}

func (x *CreateDnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDnsResponse.ProtoReflect.Descriptor instead.
func (*CreateDnsResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{157}
}

func (x *CreateDnsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDnsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateDnsRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Schemaname            string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	TahunAjaranId         string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	DataNominasiSementara []*Dns                 `protobuf:"bytes,3,rep,name=data_nominasi_sementara,json=dataNominasiSementara,proto3" json:"data_nominasi_sementara,omitempty"`
	SekolahId             string                 `protobuf:"bytes,4,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UpdateDnsRequest) Reset() {
	*x = UpdateDnsRequest{}
	mi := &file_sekolah_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDnsRequest) ProtoMessage() {}

func (x *UpdateDnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDnsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDnsRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{158}
}

func (x *UpdateDnsRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateDnsRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *UpdateDnsRequest) GetDataNominasiSementara() []*Dns {
	if x != nil {
		return x.DataNominasiSementara
	}
	return nil
}

func (x *UpdateDnsRequest) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

type UpdateDnsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDnsResponse) Reset() {
	*x = UpdateDnsResponse{}
	mi := &file_sekolah_proto_msgTypes[159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDnsResponse) ProtoMessage() {}

func (x *UpdateDnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDnsResponse.ProtoReflect.Descriptor instead.
func (*UpdateDnsResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{159}
}

func (x *UpdateDnsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDnsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetDnsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	TahunAjaranId string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	IsComplete    bool                   `protobuf:"varint,3,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	Id            *string                `protobuf:"bytes,4,opt,name=id,proto3,oneof" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDnsRequest) Reset() {
	*x = GetDnsRequest{}
	mi := &file_sekolah_proto_msgTypes[160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDnsRequest) ProtoMessage() {}

func (x *GetDnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDnsRequest.ProtoReflect.Descriptor instead.
func (*GetDnsRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{160}
}

func (x *GetDnsRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetDnsRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *GetDnsRequest) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *GetDnsRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type GetDnsResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DataNominasiSementara []*Dns                 `protobuf:"bytes,1,rep,name=data_nominasi_sementara,json=dataNominasiSementara,proto3" json:"data_nominasi_sementara,omitempty"`
	Status                bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message               string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetDnsResponse) Reset() {
	*x = GetDnsResponse{}
	mi := &file_sekolah_proto_msgTypes[161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDnsResponse) ProtoMessage() {}

func (x *GetDnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDnsResponse.ProtoReflect.Descriptor instead.
func (*GetDnsResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{161}
}

func (x *GetDnsResponse) GetDataNominasiSementara() []*Dns {
	if x != nil {
		return x.DataNominasiSementara
	}
	return nil
}

func (x *GetDnsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetDnsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteDnsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Schemaname     string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteDnsRequest) Reset() {
	*x = DeleteDnsRequest{}
	mi := &file_sekolah_proto_msgTypes[162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDnsRequest) ProtoMessage() {}

func (x *DeleteDnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDnsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDnsRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{162}
}

func (x *DeleteDnsRequest) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *DeleteDnsRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

type DeleteDnsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDnsResponse) Reset() {
	*x = DeleteDnsResponse{}
	mi := &file_sekolah_proto_msgTypes[163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDnsResponse) ProtoMessage() {}

func (x *DeleteDnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDnsResponse.ProtoReflect.Descriptor instead.
func (*DeleteDnsResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{163}
}

func (x *DeleteDnsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteDnsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SearchDnsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PesertaDidikId string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	TahunAjaranId  string                 `protobuf:"bytes,3,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchDnsRequest) Reset() {
	*x = SearchDnsRequest{}
	mi := &file_sekolah_proto_msgTypes[164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDnsRequest) ProtoMessage() {}

func (x *SearchDnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDnsRequest.ProtoReflect.Descriptor instead.
func (*SearchDnsRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{164}
}

func (x *SearchDnsRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *SearchDnsRequest) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *SearchDnsRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

type SearchDnsResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Status                bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message               string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DataNominasiSementara *Dns                   `protobuf:"bytes,3,opt,name=data_nominasi_sementara,json=dataNominasiSementara,proto3" json:"data_nominasi_sementara,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SearchDnsResponse) Reset() {
	*x = SearchDnsResponse{}
	mi := &file_sekolah_proto_msgTypes[165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDnsResponse) ProtoMessage() {}

func (x *SearchDnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDnsResponse.ProtoReflect.Descriptor instead.
func (*SearchDnsResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{165}
}

func (x *SearchDnsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SearchDnsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchDnsResponse) GetDataNominasiSementara() *Dns {
	if x != nil {
		return x.DataNominasiSementara
	}
	return nil
}

type FilterDnsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	TahunAjaranId string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	IsComplete    *bool                  `protobuf:"varint,3,opt,name=is_complete,json=isComplete,proto3,oneof" json:"is_complete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterDnsRequest) Reset() {
	*x = FilterDnsRequest{}
	mi := &file_sekolah_proto_msgTypes[166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterDnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDnsRequest) ProtoMessage() {}

func (x *FilterDnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDnsRequest.ProtoReflect.Descriptor instead.
func (*FilterDnsRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{166}
}

func (x *FilterDnsRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *FilterDnsRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *FilterDnsRequest) GetIsComplete() bool {
	if x != nil && x.IsComplete != nil {
		return *x.IsComplete
	}
	return false
}

type FilterDnsResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DataNominasiSementara []*Dns                 `protobuf:"bytes,1,rep,name=data_nominasi_sementara,json=dataNominasiSementara,proto3" json:"data_nominasi_sementara,omitempty"`
	Status                bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message               string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *FilterDnsResponse) Reset() {
	*x = FilterDnsResponse{}
	mi := &file_sekolah_proto_msgTypes[167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterDnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDnsResponse) ProtoMessage() {}

func (x *FilterDnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDnsResponse.ProtoReflect.Descriptor instead.
func (*FilterDnsResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{167}
}

func (x *FilterDnsResponse) GetDataNominasiSementara() []*Dns {
	if x != nil {
		return x.DataNominasiSementara
	}
	return nil
}

func (x *FilterDnsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *FilterDnsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// =========================================
type CreateInfoIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	InfoIjazah    *InfoIjazah            `protobuf:"bytes,2,opt,name=info_ijazah,json=infoIjazah,proto3" json:"info_ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateInfoIjazahRequest) Reset() {
	*x = CreateInfoIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInfoIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoIjazahRequest) ProtoMessage() {}

func (x *CreateInfoIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoIjazahRequest.ProtoReflect.Descriptor instead.
func (*CreateInfoIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{168}
}

func (x *CreateInfoIjazahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateInfoIjazahRequest) GetInfoIjazah() *InfoIjazah {
	if x != nil {
		return x.InfoIjazah
	}
	return nil
}

type CreateInfoIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateInfoIjazahResponse) Reset() {
	*x = CreateInfoIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInfoIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoIjazahResponse) ProtoMessage() {}

func (x *CreateInfoIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoIjazahResponse.ProtoReflect.Descriptor instead.
func (*CreateInfoIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{169}
}

func (x *CreateInfoIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateInfoIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetInfoIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId string                 `protobuf:"bytes,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoIjazahRequest) Reset() {
	*x = GetInfoIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoIjazahRequest) ProtoMessage() {}

func (x *GetInfoIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoIjazahRequest.ProtoReflect.Descriptor instead.
func (*GetInfoIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{170}
}

func (x *GetInfoIjazahRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *GetInfoIjazahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

type GetInfoIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	InfoIjazah    *InfoIjazah            `protobuf:"bytes,3,opt,name=info_ijazah,json=infoIjazah,proto3" json:"info_ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoIjazahResponse) Reset() {
	*x = GetInfoIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoIjazahResponse) ProtoMessage() {}

func (x *GetInfoIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoIjazahResponse.ProtoReflect.Descriptor instead.
func (*GetInfoIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{171}
}

func (x *GetInfoIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetInfoIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetInfoIjazahResponse) GetInfoIjazah() *InfoIjazah {
	if x != nil {
		return x.InfoIjazah
	}
	return nil
}

type UpdateInfoIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId string                 `protobuf:"bytes,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	InfoIjazah    *InfoIjazah            `protobuf:"bytes,3,opt,name=info_ijazah,json=infoIjazah,proto3" json:"info_ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInfoIjazahRequest) Reset() {
	*x = UpdateInfoIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInfoIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoIjazahRequest) ProtoMessage() {}

func (x *UpdateInfoIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoIjazahRequest.ProtoReflect.Descriptor instead.
func (*UpdateInfoIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{172}
}

func (x *UpdateInfoIjazahRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *UpdateInfoIjazahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateInfoIjazahRequest) GetInfoIjazah() *InfoIjazah {
	if x != nil {
		return x.InfoIjazah
	}
	return nil
}

type UpdateInfoIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInfoIjazahResponse) Reset() {
	*x = UpdateInfoIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[173]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInfoIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoIjazahResponse) ProtoMessage() {}

func (x *UpdateInfoIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[173]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoIjazahResponse.ProtoReflect.Descriptor instead.
func (*UpdateInfoIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{173}
}

func (x *UpdateInfoIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateInfoIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteInfoIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId string                 `protobuf:"bytes,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	IdInfoIjazah  string                 `protobuf:"bytes,3,opt,name=idInfoIjazah,proto3" json:"idInfoIjazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteInfoIjazahRequest) Reset() {
	*x = DeleteInfoIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[174]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInfoIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInfoIjazahRequest) ProtoMessage() {}

func (x *DeleteInfoIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[174]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInfoIjazahRequest.ProtoReflect.Descriptor instead.
func (*DeleteInfoIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{174}
}

func (x *DeleteInfoIjazahRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *DeleteInfoIjazahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteInfoIjazahRequest) GetIdInfoIjazah() string {
	if x != nil {
		return x.IdInfoIjazah
	}
	return ""
}

type DeleteInfoIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteInfoIjazahResponse) Reset() {
	*x = DeleteInfoIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[175]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInfoIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInfoIjazahResponse) ProtoMessage() {}

func (x *DeleteInfoIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[175]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInfoIjazahResponse.ProtoReflect.Descriptor instead.
func (*DeleteInfoIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{175}
}

func (x *DeleteInfoIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteInfoIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// TRANSKRIP
type TranskripNilai struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId     string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	RombonganBelajarId string                 `protobuf:"bytes,2,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	MataPelajaranId    string                 `protobuf:"bytes,3,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	Nilai              int32                  `protobuf:"varint,4,opt,name=nilai,proto3" json:"nilai,omitempty"`
	TahunAjaranId      string                 `protobuf:"bytes,5,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TranskripNilai) Reset() {
	*x = TranskripNilai{}
	mi := &file_sekolah_proto_msgTypes[176]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranskripNilai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranskripNilai) ProtoMessage() {}

func (x *TranskripNilai) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[176]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranskripNilai.ProtoReflect.Descriptor instead.
func (*TranskripNilai) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{176}
}

func (x *TranskripNilai) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *TranskripNilai) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *TranskripNilai) GetMataPelajaranId() string {
	if x != nil {
		return x.MataPelajaranId
	}
	return ""
}

func (x *TranskripNilai) GetNilai() int32 {
	if x != nil {
		return x.Nilai
	}
	return 0
}

func (x *TranskripNilai) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

type CreateTranskripNilaiRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilai []*TranskripNilai      `protobuf:"bytes,1,rep,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateTranskripNilaiRequest) Reset() {
	*x = CreateTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[177]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTranskripNilaiRequest) ProtoMessage() {}

func (x *CreateTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[177]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*CreateTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{177}
}

func (x *CreateTranskripNilaiRequest) GetTranskripNilai() []*TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

type CreateTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTranskripNilaiResponse) Reset() {
	*x = CreateTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[178]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTranskripNilaiResponse) ProtoMessage() {}

func (x *CreateTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[178]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*CreateTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{178}
}

func (x *CreateTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTranskripNilaiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilaiId string                 `protobuf:"bytes,1,opt,name=transkrip_nilai_id,json=transkripNilaiId,proto3" json:"transkrip_nilai_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetTranskripNilaiRequest) Reset() {
	*x = GetTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[179]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranskripNilaiRequest) ProtoMessage() {}

func (x *GetTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[179]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*GetTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{179}
}

func (x *GetTranskripNilaiRequest) GetTranskripNilaiId() string {
	if x != nil {
		return x.TranskripNilaiId
	}
	return ""
}

type GetTranskripNilaiResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilai []*TranskripNilai      `protobuf:"bytes,1,rep,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	Status         bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message        string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTranskripNilaiResponse) Reset() {
	*x = GetTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[180]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranskripNilaiResponse) ProtoMessage() {}

func (x *GetTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[180]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*GetTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{180}
}

func (x *GetTranskripNilaiResponse) GetTranskripNilai() []*TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

func (x *GetTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTranskripNilaiRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilai *TranskripNilai        `protobuf:"bytes,1,opt,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateTranskripNilaiRequest) Reset() {
	*x = UpdateTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[181]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTranskripNilaiRequest) ProtoMessage() {}

func (x *UpdateTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[181]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*UpdateTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{181}
}

func (x *UpdateTranskripNilaiRequest) GetTranskripNilai() *TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

type UpdateTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTranskripNilaiResponse) Reset() {
	*x = UpdateTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[182]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTranskripNilaiResponse) ProtoMessage() {}

func (x *UpdateTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[182]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*UpdateTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{182}
}

func (x *UpdateTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTranskripNilaiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilaiId uint64                 `protobuf:"varint,1,opt,name=transkrip_nilai_id,json=transkripNilaiId,proto3" json:"transkrip_nilai_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteTranskripNilaiRequest) Reset() {
	*x = DeleteTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[183]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranskripNilaiRequest) ProtoMessage() {}

func (x *DeleteTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[183]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*DeleteTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{183}
}

func (x *DeleteTranskripNilaiRequest) GetTranskripNilaiId() uint64 {
	if x != nil {
		return x.TranskripNilaiId
	}
	return 0
}

type DeleteTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTranskripNilaiResponse) Reset() {
	*x = DeleteTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[184]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranskripNilaiResponse) ProtoMessage() {}

func (x *DeleteTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[184]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*DeleteTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{184}
}

func (x *DeleteTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UploadTranskripNilaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TranskripFile []byte                 `protobuf:"bytes,1,opt,name=transkrip_file,json=transkripFile,proto3" json:"transkrip_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadTranskripNilaiRequest) Reset() {
	*x = UploadTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[185]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTranskripNilaiRequest) ProtoMessage() {}

func (x *UploadTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[185]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*UploadTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{185}
}

func (x *UploadTranskripNilaiRequest) GetTranskripFile() []byte {
	if x != nil {
		return x.TranskripFile
	}
	return nil
}

type UploadTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadTranskripNilaiResponse) Reset() {
	*x = UploadTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[186]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTranskripNilaiResponse) ProtoMessage() {}

func (x *UploadTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[186]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*UploadTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{186}
}

func (x *UploadTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UploadTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DownloadSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	DownloadType  string                 `protobuf:"bytes,2,opt,name=download_type,json=downloadType,proto3" json:"download_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadSekolahRequest) Reset() {
	*x = DownloadSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[187]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSekolahRequest) ProtoMessage() {}

func (x *DownloadSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[187]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadSekolahRequest.ProtoReflect.Descriptor instead.
func (*DownloadSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{187}
}

func (x *DownloadSekolahRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DownloadSekolahRequest) GetDownloadType() string {
	if x != nil {
		return x.DownloadType
	}
	return ""
}

type DownloadSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          []byte                 `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadSekolahResponse) Reset() {
	*x = DownloadSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[188]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSekolahResponse) ProtoMessage() {}

func (x *DownloadSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[188]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadSekolahResponse.ProtoReflect.Descriptor instead.
func (*DownloadSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{188}
}

func (x *DownloadSekolahResponse) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type GetDashboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId    string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardRequest) Reset() {
	*x = GetDashboardRequest{}
	mi := &file_sekolah_proto_msgTypes[189]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardRequest) ProtoMessage() {}

func (x *GetDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[189]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{189}
}

func (x *GetDashboardRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetDashboardRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type GetDashboardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountSiswa    int64                  `protobuf:"varint,1,opt,name=count_siswa,json=countSiswa,proto3" json:"count_siswa,omitempty"`
	CountGuru     int64                  `protobuf:"varint,2,opt,name=count_guru,json=countGuru,proto3" json:"count_guru,omitempty"`
	CountKelas    int64                  `protobuf:"varint,3,opt,name=count_kelas,json=countKelas,proto3" json:"count_kelas,omitempty"`
	CountLulusan  int64                  `protobuf:"varint,4,opt,name=count_lulusan,json=countLulusan,proto3" json:"count_lulusan,omitempty"`
	CountJurusan  int64                  `protobuf:"varint,5,opt,name=count_jurusan,json=countJurusan,proto3" json:"count_jurusan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardResponse) Reset() {
	*x = GetDashboardResponse{}
	mi := &file_sekolah_proto_msgTypes[190]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardResponse) ProtoMessage() {}

func (x *GetDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[190]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{190}
}

func (x *GetDashboardResponse) GetCountSiswa() int64 {
	if x != nil {
		return x.CountSiswa
	}
	return 0
}

func (x *GetDashboardResponse) GetCountGuru() int64 {
	if x != nil {
		return x.CountGuru
	}
	return 0
}

func (x *GetDashboardResponse) GetCountKelas() int64 {
	if x != nil {
		return x.CountKelas
	}
	return 0
}

func (x *GetDashboardResponse) GetCountLulusan() int64 {
	if x != nil {
		return x.CountLulusan
	}
	return 0
}

func (x *GetDashboardResponse) GetCountJurusan() int64 {
	if x != nil {
		return x.CountJurusan
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_sekolah_proto_msgTypes[191]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[191]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{191}
}

type BentukPendidikan struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BentukPendidikanId   uint32                 `protobuf:"varint,1,opt,name=bentuk_pendidikan_id,json=bentukPendidikanId,proto3" json:"bentuk_pendidikan_id,omitempty"`
	Nama                 string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	JenjangPaud          uint32                 `protobuf:"varint,3,opt,name=jenjang_paud,json=jenjangPaud,proto3" json:"jenjang_paud,omitempty"`
	JenjangTk            uint32                 `protobuf:"varint,4,opt,name=jenjang_tk,json=jenjangTk,proto3" json:"jenjang_tk,omitempty"`
	JenjangSd            uint32                 `protobuf:"varint,5,opt,name=jenjang_sd,json=jenjangSd,proto3" json:"jenjang_sd,omitempty"`
	JenjangSmp           uint32                 `protobuf:"varint,6,opt,name=jenjang_smp,json=jenjangSmp,proto3" json:"jenjang_smp,omitempty"`
	JenjangSma           uint32                 `protobuf:"varint,7,opt,name=jenjang_sma,json=jenjangSma,proto3" json:"jenjang_sma,omitempty"`
	JenjangTinggi        uint32                 `protobuf:"varint,8,opt,name=jenjang_tinggi,json=jenjangTinggi,proto3" json:"jenjang_tinggi,omitempty"`
	DirektoratPembinaan  string                 `protobuf:"bytes,9,opt,name=direktorat_pembinaan,json=direktoratPembinaan,proto3" json:"direktorat_pembinaan,omitempty"`
	Aktif                uint32                 `protobuf:"varint,10,opt,name=aktif,proto3" json:"aktif,omitempty"`
	FormalitasPendidikan string                 `protobuf:"bytes,11,opt,name=formalitas_pendidikan,json=formalitasPendidikan,proto3" json:"formalitas_pendidikan,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BentukPendidikan) Reset() {
	*x = BentukPendidikan{}
	mi := &file_sekolah_proto_msgTypes[192]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BentukPendidikan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentukPendidikan) ProtoMessage() {}

func (x *BentukPendidikan) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[192]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentukPendidikan.ProtoReflect.Descriptor instead.
func (*BentukPendidikan) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{192}
}

func (x *BentukPendidikan) GetBentukPendidikanId() uint32 {
	if x != nil {
		return x.BentukPendidikanId
	}
	return 0
}

func (x *BentukPendidikan) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *BentukPendidikan) GetJenjangPaud() uint32 {
	if x != nil {
		return x.JenjangPaud
	}
	return 0
}

func (x *BentukPendidikan) GetJenjangTk() uint32 {
	if x != nil {
		return x.JenjangTk
	}
	return 0
}

func (x *BentukPendidikan) GetJenjangSd() uint32 {
	if x != nil {
		return x.JenjangSd
	}
	return 0
}

func (x *BentukPendidikan) GetJenjangSmp() uint32 {
	if x != nil {
		return x.JenjangSmp
	}
	return 0
}

func (x *BentukPendidikan) GetJenjangSma() uint32 {
	if x != nil {
		return x.JenjangSma
	}
	return 0
}

func (x *BentukPendidikan) GetJenjangTinggi() uint32 {
	if x != nil {
		return x.JenjangTinggi
	}
	return 0
}

func (x *BentukPendidikan) GetDirektoratPembinaan() string {
	if x != nil {
		return x.DirektoratPembinaan
	}
	return ""
}

func (x *BentukPendidikan) GetAktif() uint32 {
	if x != nil {
		return x.Aktif
	}
	return 0
}

func (x *BentukPendidikan) GetFormalitasPendidikan() string {
	if x != nil {
		return x.FormalitasPendidikan
	}
	return ""
}

type Jenjang struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JenjangPendidikanId uint32                 `protobuf:"varint,1,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	Nama                string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	JenjangLembaga      uint32                 `protobuf:"varint,3,opt,name=jenjang_lembaga,json=jenjangLembaga,proto3" json:"jenjang_lembaga,omitempty"`
	JenjangOrang        uint32                 `protobuf:"varint,4,opt,name=jenjang_orang,json=jenjangOrang,proto3" json:"jenjang_orang,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Jenjang) Reset() {
	*x = Jenjang{}
	mi := &file_sekolah_proto_msgTypes[193]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jenjang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jenjang) ProtoMessage() {}

func (x *Jenjang) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[193]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jenjang.ProtoReflect.Descriptor instead.
func (*Jenjang) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{193}
}

func (x *Jenjang) GetJenjangPendidikanId() uint32 {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return 0
}

func (x *Jenjang) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *Jenjang) GetJenjangLembaga() uint32 {
	if x != nil {
		return x.JenjangLembaga
	}
	return 0
}

func (x *Jenjang) GetJenjangOrang() uint32 {
	if x != nil {
		return x.JenjangOrang
	}
	return 0
}

type TingkatPendidikan struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TingkatPendidikanId int32                  `protobuf:"varint,1,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	Kode                string                 `protobuf:"bytes,2,opt,name=kode,proto3" json:"kode,omitempty"`
	Nama                string                 `protobuf:"bytes,3,opt,name=nama,proto3" json:"nama,omitempty"`
	JenjangPendidikanId uint32                 `protobuf:"varint,4,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TingkatPendidikan) Reset() {
	*x = TingkatPendidikan{}
	mi := &file_sekolah_proto_msgTypes[194]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TingkatPendidikan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TingkatPendidikan) ProtoMessage() {}

func (x *TingkatPendidikan) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[194]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TingkatPendidikan.ProtoReflect.Descriptor instead.
func (*TingkatPendidikan) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{194}
}

func (x *TingkatPendidikan) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

func (x *TingkatPendidikan) GetKode() string {
	if x != nil {
		return x.Kode
	}
	return ""
}

func (x *TingkatPendidikan) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *TingkatPendidikan) GetJenjangPendidikanId() uint32 {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return 0
}

type StatusKepemilikan struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	StatusKepemilikanId uint32                 `protobuf:"varint,1,opt,name=status_kepemilikan_id,json=statusKepemilikanId,proto3" json:"status_kepemilikan_id,omitempty"`
	Nama                string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StatusKepemilikan) Reset() {
	*x = StatusKepemilikan{}
	mi := &file_sekolah_proto_msgTypes[195]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusKepemilikan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusKepemilikan) ProtoMessage() {}

func (x *StatusKepemilikan) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[195]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusKepemilikan.ProtoReflect.Descriptor instead.
func (*StatusKepemilikan) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{195}
}

func (x *StatusKepemilikan) GetStatusKepemilikanId() uint32 {
	if x != nil {
		return x.StatusKepemilikanId
	}
	return 0
}

func (x *StatusKepemilikan) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

// Message untuk tabel Jurusan
type Jurusan struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JurusanId           string                 `protobuf:"bytes,1,opt,name=jurusan_id,json=jurusanId,proto3" json:"jurusan_id,omitempty"`
	NamaJurusan         string                 `protobuf:"bytes,2,opt,name=nama_jurusan,json=namaJurusan,proto3" json:"nama_jurusan,omitempty"`
	UntukSma            uint32                 `protobuf:"varint,3,opt,name=untuk_sma,json=untukSma,proto3" json:"untuk_sma,omitempty"`
	UntukSmk            uint32                 `protobuf:"varint,4,opt,name=untuk_smk,json=untukSmk,proto3" json:"untuk_smk,omitempty"`
	UntukPt             uint32                 `protobuf:"varint,5,opt,name=untuk_pt,json=untukPt,proto3" json:"untuk_pt,omitempty"`
	UntukSlb            uint32                 `protobuf:"varint,6,opt,name=untuk_slb,json=untukSlb,proto3" json:"untuk_slb,omitempty"`
	UntukSmklb          uint32                 `protobuf:"varint,7,opt,name=untuk_smklb,json=untukSmklb,proto3" json:"untuk_smklb,omitempty"`
	JenjangPendidikanId uint32                 `protobuf:"varint,8,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	JurusanInduk        string                 `protobuf:"bytes,9,opt,name=jurusan_induk,json=jurusanInduk,proto3" json:"jurusan_induk,omitempty"`
	LevelBidangId       string                 `protobuf:"bytes,10,opt,name=level_bidang_id,json=levelBidangId,proto3" json:"level_bidang_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Jurusan) Reset() {
	*x = Jurusan{}
	mi := &file_sekolah_proto_msgTypes[196]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jurusan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jurusan) ProtoMessage() {}

func (x *Jurusan) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[196]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jurusan.ProtoReflect.Descriptor instead.
func (*Jurusan) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{196}
}

func (x *Jurusan) GetJurusanId() string {
	if x != nil {
		return x.JurusanId
	}
	return ""
}

func (x *Jurusan) GetNamaJurusan() string {
	if x != nil {
		return x.NamaJurusan
	}
	return ""
}

func (x *Jurusan) GetUntukSma() uint32 {
	if x != nil {
		return x.UntukSma
	}
	return 0
}

func (x *Jurusan) GetUntukSmk() uint32 {
	if x != nil {
		return x.UntukSmk
	}
	return 0
}

func (x *Jurusan) GetUntukPt() uint32 {
	if x != nil {
		return x.UntukPt
	}
	return 0
}

func (x *Jurusan) GetUntukSlb() uint32 {
	if x != nil {
		return x.UntukSlb
	}
	return 0
}

func (x *Jurusan) GetUntukSmklb() uint32 {
	if x != nil {
		return x.UntukSmklb
	}
	return 0
}

func (x *Jurusan) GetJenjangPendidikanId() uint32 {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return 0
}

func (x *Jurusan) GetJurusanInduk() string {
	if x != nil {
		return x.JurusanInduk
	}
	return ""
}

func (x *Jurusan) GetLevelBidangId() string {
	if x != nil {
		return x.LevelBidangId
	}
	return ""
}

// Message untuk tabel Kurikulum
type Kurikulum struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	KurikulumId         uint32                 `protobuf:"varint,1,opt,name=kurikulum_id,json=kurikulumId,proto3" json:"kurikulum_id,omitempty"`
	NamaKurikulum       string                 `protobuf:"bytes,2,opt,name=nama_kurikulum,json=namaKurikulum,proto3" json:"nama_kurikulum,omitempty"`
	MulaiBerlaku        string                 `protobuf:"bytes,3,opt,name=mulai_berlaku,json=mulaiBerlaku,proto3" json:"mulai_berlaku,omitempty"`
	SistemSks           uint32                 `protobuf:"varint,4,opt,name=sistem_sks,json=sistemSks,proto3" json:"sistem_sks,omitempty"`
	TotalSks            uint32                 `protobuf:"varint,5,opt,name=total_sks,json=totalSks,proto3" json:"total_sks,omitempty"`
	JenjangPendidikanId uint32                 `protobuf:"varint,6,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	JurusanId           string                 `protobuf:"bytes,7,opt,name=jurusan_id,json=jurusanId,proto3" json:"jurusan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Kurikulum) Reset() {
	*x = Kurikulum{}
	mi := &file_sekolah_proto_msgTypes[197]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kurikulum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kurikulum) ProtoMessage() {}

func (x *Kurikulum) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[197]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kurikulum.ProtoReflect.Descriptor instead.
func (*Kurikulum) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{197}
}

func (x *Kurikulum) GetKurikulumId() uint32 {
	if x != nil {
		return x.KurikulumId
	}
	return 0
}

func (x *Kurikulum) GetNamaKurikulum() string {
	if x != nil {
		return x.NamaKurikulum
	}
	return ""
}

func (x *Kurikulum) GetMulaiBerlaku() string {
	if x != nil {
		return x.MulaiBerlaku
	}
	return ""
}

func (x *Kurikulum) GetSistemSks() uint32 {
	if x != nil {
		return x.SistemSks
	}
	return 0
}

func (x *Kurikulum) GetTotalSks() uint32 {
	if x != nil {
		return x.TotalSks
	}
	return 0
}

func (x *Kurikulum) GetJenjangPendidikanId() uint32 {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return 0
}

func (x *Kurikulum) GetJurusanId() string {
	if x != nil {
		return x.JurusanId
	}
	return ""
}

type GelarAkademik struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GelarAkademik *int32                 `protobuf:"varint,1,opt,name=gelar_akademik,json=gelarAkademik,proto3,oneof" json:"gelar_akademik,omitempty"`
	Kode          string                 `protobuf:"bytes,2,opt,name=kode,proto3" json:"kode,omitempty"`
	Nama          string                 `protobuf:"bytes,3,opt,name=nama,proto3" json:"nama,omitempty"`
	PosisiGelar   int32                  `protobuf:"varint,4,opt,name=posisi_gelar,json=posisiGelar,proto3" json:"posisi_gelar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GelarAkademik) Reset() {
	*x = GelarAkademik{}
	mi := &file_sekolah_proto_msgTypes[198]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GelarAkademik) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GelarAkademik) ProtoMessage() {}

func (x *GelarAkademik) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[198]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GelarAkademik.ProtoReflect.Descriptor instead.
func (*GelarAkademik) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{198}
}

func (x *GelarAkademik) GetGelarAkademik() int32 {
	if x != nil && x.GelarAkademik != nil {
		return *x.GelarAkademik
	}
	return 0
}

func (x *GelarAkademik) GetKode() string {
	if x != nil {
		return x.Kode
	}
	return ""
}

func (x *GelarAkademik) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *GelarAkademik) GetPosisiGelar() int32 {
	if x != nil {
		return x.PosisiGelar
	}
	return 0
}

type GetBentukPendidikanResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BentukPendidikan []*BentukPendidikan    `protobuf:"bytes,1,rep,name=bentuk_pendidikan,json=bentukPendidikan,proto3" json:"bentuk_pendidikan,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetBentukPendidikanResponse) Reset() {
	*x = GetBentukPendidikanResponse{}
	mi := &file_sekolah_proto_msgTypes[199]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBentukPendidikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBentukPendidikanResponse) ProtoMessage() {}

func (x *GetBentukPendidikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[199]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBentukPendidikanResponse.ProtoReflect.Descriptor instead.
func (*GetBentukPendidikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{199}
}

func (x *GetBentukPendidikanResponse) GetBentukPendidikan() []*BentukPendidikan {
	if x != nil {
		return x.BentukPendidikan
	}
	return nil
}

type GetJenjangResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jenjang       []*Jenjang             `protobuf:"bytes,1,rep,name=jenjang,proto3" json:"jenjang,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJenjangResponse) Reset() {
	*x = GetJenjangResponse{}
	mi := &file_sekolah_proto_msgTypes[200]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJenjangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJenjangResponse) ProtoMessage() {}

func (x *GetJenjangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[200]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJenjangResponse.ProtoReflect.Descriptor instead.
func (*GetJenjangResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{200}
}

func (x *GetJenjangResponse) GetJenjang() []*Jenjang {
	if x != nil {
		return x.Jenjang
	}
	return nil
}

type GetTingkatPendidikanRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JenjangPendidikanId string                 `protobuf:"bytes,1,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetTingkatPendidikanRequest) Reset() {
	*x = GetTingkatPendidikanRequest{}
	mi := &file_sekolah_proto_msgTypes[201]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTingkatPendidikanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTingkatPendidikanRequest) ProtoMessage() {}

func (x *GetTingkatPendidikanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[201]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTingkatPendidikanRequest.ProtoReflect.Descriptor instead.
func (*GetTingkatPendidikanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{201}
}

func (x *GetTingkatPendidikanRequest) GetJenjangPendidikanId() string {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return ""
}

type GetTingkatPendidikanResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TingkatPendidikan []*TingkatPendidikan   `protobuf:"bytes,1,rep,name=tingkat_pendidikan,json=tingkatPendidikan,proto3" json:"tingkat_pendidikan,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetTingkatPendidikanResponse) Reset() {
	*x = GetTingkatPendidikanResponse{}
	mi := &file_sekolah_proto_msgTypes[202]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTingkatPendidikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTingkatPendidikanResponse) ProtoMessage() {}

func (x *GetTingkatPendidikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[202]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTingkatPendidikanResponse.ProtoReflect.Descriptor instead.
func (*GetTingkatPendidikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{202}
}

func (x *GetTingkatPendidikanResponse) GetTingkatPendidikan() []*TingkatPendidikan {
	if x != nil {
		return x.TingkatPendidikan
	}
	return nil
}

type GetStatusKepemilikanResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StatusKepemilikan []*StatusKepemilikan   `protobuf:"bytes,1,rep,name=status_kepemilikan,json=statusKepemilikan,proto3" json:"status_kepemilikan,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetStatusKepemilikanResponse) Reset() {
	*x = GetStatusKepemilikanResponse{}
	mi := &file_sekolah_proto_msgTypes[203]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusKepemilikanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusKepemilikanResponse) ProtoMessage() {}

func (x *GetStatusKepemilikanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[203]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusKepemilikanResponse.ProtoReflect.Descriptor instead.
func (*GetStatusKepemilikanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{203}
}

func (x *GetStatusKepemilikanResponse) GetStatusKepemilikan() []*StatusKepemilikan {
	if x != nil {
		return x.StatusKepemilikan
	}
	return nil
}

type GetJurusanRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JenjangPendidikanId string                 `protobuf:"bytes,1,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	Param               string                 `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"` // parameter untuk pilihan kolom yang berisi untuk_smk; untuk_sma dan seterusnya
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetJurusanRequest) Reset() {
	*x = GetJurusanRequest{}
	mi := &file_sekolah_proto_msgTypes[204]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJurusanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJurusanRequest) ProtoMessage() {}

func (x *GetJurusanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[204]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJurusanRequest.ProtoReflect.Descriptor instead.
func (*GetJurusanRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{204}
}

func (x *GetJurusanRequest) GetJenjangPendidikanId() string {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return ""
}

func (x *GetJurusanRequest) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type GetJurusanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Jurusan       []*Jurusan             `protobuf:"bytes,3,rep,name=jurusan,proto3" json:"jurusan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJurusanResponse) Reset() {
	*x = GetJurusanResponse{}
	mi := &file_sekolah_proto_msgTypes[205]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJurusanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJurusanResponse) ProtoMessage() {}

func (x *GetJurusanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[205]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJurusanResponse.ProtoReflect.Descriptor instead.
func (*GetJurusanResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{205}
}

func (x *GetJurusanResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetJurusanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetJurusanResponse) GetJurusan() []*Jurusan {
	if x != nil {
		return x.Jurusan
	}
	return nil
}

type GetKurikulumRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JenjangPendidikanId string                 `protobuf:"bytes,1,opt,name=jenjang_pendidikan_id,json=jenjangPendidikanId,proto3" json:"jenjang_pendidikan_id,omitempty"`
	MulaiBerlaku        *string                `protobuf:"bytes,2,opt,name=mulai_berlaku,json=mulaiBerlaku,proto3,oneof" json:"mulai_berlaku,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetKurikulumRequest) Reset() {
	*x = GetKurikulumRequest{}
	mi := &file_sekolah_proto_msgTypes[206]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKurikulumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKurikulumRequest) ProtoMessage() {}

func (x *GetKurikulumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[206]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKurikulumRequest.ProtoReflect.Descriptor instead.
func (*GetKurikulumRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{206}
}

func (x *GetKurikulumRequest) GetJenjangPendidikanId() string {
	if x != nil {
		return x.JenjangPendidikanId
	}
	return ""
}

func (x *GetKurikulumRequest) GetMulaiBerlaku() string {
	if x != nil && x.MulaiBerlaku != nil {
		return *x.MulaiBerlaku
	}
	return ""
}

type GetKurikulumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Kurikulum     []*Kurikulum           `protobuf:"bytes,3,rep,name=kurikulum,proto3" json:"kurikulum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKurikulumResponse) Reset() {
	*x = GetKurikulumResponse{}
	mi := &file_sekolah_proto_msgTypes[207]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKurikulumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKurikulumResponse) ProtoMessage() {}

func (x *GetKurikulumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[207]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKurikulumResponse.ProtoReflect.Descriptor instead.
func (*GetKurikulumResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{207}
}

func (x *GetKurikulumResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetKurikulumResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetKurikulumResponse) GetKurikulum() []*Kurikulum {
	if x != nil {
		return x.Kurikulum
	}
	return nil
}

type GetMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapelId       string                 `protobuf:"bytes,1,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMapelRequest) Reset() {
	*x = GetMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[208]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapelRequest) ProtoMessage() {}

func (x *GetMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[208]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapelRequest.ProtoReflect.Descriptor instead.
func (*GetMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{208}
}

func (x *GetMapelRequest) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

type GetMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapel         []*Mapel               `protobuf:"bytes,1,rep,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMapelResponse) Reset() {
	*x = GetMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[209]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapelResponse) ProtoMessage() {}

func (x *GetMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[209]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapelResponse.ProtoReflect.Descriptor instead.
func (*GetMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{209}
}

func (x *GetMapelResponse) GetMapel() []*Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type GetGelarAkademikRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGelarAkademikRequest) Reset() {
	*x = GetGelarAkademikRequest{}
	mi := &file_sekolah_proto_msgTypes[210]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGelarAkademikRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGelarAkademikRequest) ProtoMessage() {}

func (x *GetGelarAkademikRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[210]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGelarAkademikRequest.ProtoReflect.Descriptor instead.
func (*GetGelarAkademikRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{210}
}

type GetGelarAkademikResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GelarAkademik []*GelarAkademik       `protobuf:"bytes,1,rep,name=gelar_akademik,json=gelarAkademik,proto3" json:"gelar_akademik,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGelarAkademikResponse) Reset() {
	*x = GetGelarAkademikResponse{}
	mi := &file_sekolah_proto_msgTypes[211]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGelarAkademikResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGelarAkademikResponse) ProtoMessage() {}

func (x *GetGelarAkademikResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[211]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGelarAkademikResponse.ProtoReflect.Descriptor instead.
func (*GetGelarAkademikResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{211}
}

func (x *GetGelarAkademikResponse) GetGelarAkademik() []*GelarAkademik {
	if x != nil {
		return x.GelarAkademik
	}
	return nil
}

type Pembelajaran struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PembelajaranId     string                 `protobuf:"bytes,1,opt,name=pembelajaran_id,json=pembelajaranId,proto3" json:"pembelajaran_id,omitempty"`
	RombonganBelajarId string                 `protobuf:"bytes,2,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	MataPelajaranId    int32                  `protobuf:"varint,3,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	SemesterId         string                 `protobuf:"bytes,4,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	PtkTerdaftarId     string                 `protobuf:"bytes,5,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	StatusDiKurikulum  int32                  `protobuf:"varint,6,opt,name=status_di_kurikulum,json=statusDiKurikulum,proto3" json:"status_di_kurikulum,omitempty"`
	NamaMataPelajaran  string                 `protobuf:"bytes,7,opt,name=nama_mata_pelajaran,json=namaMataPelajaran,proto3" json:"nama_mata_pelajaran,omitempty"`
	IndukPembelajaran  string                 `protobuf:"bytes,8,opt,name=induk_pembelajaran,json=indukPembelajaran,proto3" json:"induk_pembelajaran,omitempty"`
	IsDapo             int32                  `protobuf:"varint,9,opt,name=is_dapo,json=isDapo,proto3" json:"is_dapo,omitempty"`
	PtkTerdaftar       *PTKTerdaftar          `protobuf:"bytes,10,opt,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Pembelajaran) Reset() {
	*x = Pembelajaran{}
	mi := &file_sekolah_proto_msgTypes[212]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pembelajaran) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pembelajaran) ProtoMessage() {}

func (x *Pembelajaran) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[212]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pembelajaran.ProtoReflect.Descriptor instead.
func (*Pembelajaran) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{212}
}

func (x *Pembelajaran) GetPembelajaranId() string {
	if x != nil {
		return x.PembelajaranId
	}
	return ""
}

func (x *Pembelajaran) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *Pembelajaran) GetMataPelajaranId() int32 {
	if x != nil {
		return x.MataPelajaranId
	}
	return 0
}

func (x *Pembelajaran) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *Pembelajaran) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

func (x *Pembelajaran) GetStatusDiKurikulum() int32 {
	if x != nil {
		return x.StatusDiKurikulum
	}
	return 0
}

func (x *Pembelajaran) GetNamaMataPelajaran() string {
	if x != nil {
		return x.NamaMataPelajaran
	}
	return ""
}

func (x *Pembelajaran) GetIndukPembelajaran() string {
	if x != nil {
		return x.IndukPembelajaran
	}
	return ""
}

func (x *Pembelajaran) GetIsDapo() int32 {
	if x != nil {
		return x.IsDapo
	}
	return 0
}

func (x *Pembelajaran) GetPtkTerdaftar() *PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

// Message utama
type PtkPelengkap struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PtkPelengkapId string                 `protobuf:"bytes,1,opt,name=ptk_pelengkap_id,json=ptkPelengkapId,proto3" json:"ptk_pelengkap_id,omitempty"`
	PtkId          string                 `protobuf:"bytes,2,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	GelarDepan     string                 `protobuf:"bytes,3,opt,name=gelar_depan,json=gelarDepan,proto3" json:"gelar_depan,omitempty"`
	GelarBelakang  string                 `protobuf:"bytes,4,opt,name=gelar_belakang,json=gelarBelakang,proto3" json:"gelar_belakang,omitempty"`
	Nik            string                 `protobuf:"bytes,5,opt,name=nik,proto3" json:"nik,omitempty"`
	No_KK          string                 `protobuf:"bytes,6,opt,name=no_KK,json=noKK,proto3" json:"no_KK,omitempty"`
	Nuptk          string                 `protobuf:"bytes,7,opt,name=nuptk,proto3" json:"nuptk,omitempty"`
	Niy            string                 `protobuf:"bytes,8,opt,name=niy,proto3" json:"niy,omitempty"`
	Nip            string                 `protobuf:"bytes,9,opt,name=nip,proto3" json:"nip,omitempty"`
	AlamatJalan    string                 `protobuf:"bytes,10,opt,name=alamat_jalan,json=alamatJalan,proto3" json:"alamat_jalan,omitempty"`
	Rt             string                 `protobuf:"bytes,11,opt,name=rt,proto3" json:"rt,omitempty"`
	Rw             string                 `protobuf:"bytes,12,opt,name=rw,proto3" json:"rw,omitempty"`
	DesaKelurahan  string                 `protobuf:"bytes,13,opt,name=desa_kelurahan,json=desaKelurahan,proto3" json:"desa_kelurahan,omitempty"`
	Kec            string                 `protobuf:"bytes,14,opt,name=kec,proto3" json:"kec,omitempty"`
	KabKota        string                 `protobuf:"bytes,15,opt,name=kab_kota,json=kabKota,proto3" json:"kab_kota,omitempty"`
	Propinsi       string                 `protobuf:"bytes,16,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	KodePos        string                 `protobuf:"bytes,17,opt,name=kode_pos,json=kodePos,proto3" json:"kode_pos,omitempty"`
	NoTeleponRumah string                 `protobuf:"bytes,18,opt,name=no_telepon_rumah,json=noTeleponRumah,proto3" json:"no_telepon_rumah,omitempty"`
	NoHp           string                 `protobuf:"bytes,19,opt,name=no_hp,json=noHp,proto3" json:"no_hp,omitempty"`
	Email          string                 `protobuf:"bytes,20,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PtkPelengkap) Reset() {
	*x = PtkPelengkap{}
	mi := &file_sekolah_proto_msgTypes[213]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PtkPelengkap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtkPelengkap) ProtoMessage() {}

func (x *PtkPelengkap) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[213]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtkPelengkap.ProtoReflect.Descriptor instead.
func (*PtkPelengkap) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{213}
}

func (x *PtkPelengkap) GetPtkPelengkapId() string {
	if x != nil {
		return x.PtkPelengkapId
	}
	return ""
}

func (x *PtkPelengkap) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *PtkPelengkap) GetGelarDepan() string {
	if x != nil {
		return x.GelarDepan
	}
	return ""
}

func (x *PtkPelengkap) GetGelarBelakang() string {
	if x != nil {
		return x.GelarBelakang
	}
	return ""
}

func (x *PtkPelengkap) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *PtkPelengkap) GetNo_KK() string {
	if x != nil {
		return x.No_KK
	}
	return ""
}

func (x *PtkPelengkap) GetNuptk() string {
	if x != nil {
		return x.Nuptk
	}
	return ""
}

func (x *PtkPelengkap) GetNiy() string {
	if x != nil {
		return x.Niy
	}
	return ""
}

func (x *PtkPelengkap) GetNip() string {
	if x != nil {
		return x.Nip
	}
	return ""
}

func (x *PtkPelengkap) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *PtkPelengkap) GetRt() string {
	if x != nil {
		return x.Rt
	}
	return ""
}

func (x *PtkPelengkap) GetRw() string {
	if x != nil {
		return x.Rw
	}
	return ""
}

func (x *PtkPelengkap) GetDesaKelurahan() string {
	if x != nil {
		return x.DesaKelurahan
	}
	return ""
}

func (x *PtkPelengkap) GetKec() string {
	if x != nil {
		return x.Kec
	}
	return ""
}

func (x *PtkPelengkap) GetKabKota() string {
	if x != nil {
		return x.KabKota
	}
	return ""
}

func (x *PtkPelengkap) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *PtkPelengkap) GetKodePos() string {
	if x != nil {
		return x.KodePos
	}
	return ""
}

func (x *PtkPelengkap) GetNoTeleponRumah() string {
	if x != nil {
		return x.NoTeleponRumah
	}
	return ""
}

func (x *PtkPelengkap) GetNoHp() string {
	if x != nil {
		return x.NoHp
	}
	return ""
}

func (x *PtkPelengkap) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreatePembelajaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pembelajaran  []*Pembelajaran        `protobuf:"bytes,1,rep,name=pembelajaran,proto3" json:"pembelajaran,omitempty"`
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePembelajaranRequest) Reset() {
	*x = CreatePembelajaranRequest{}
	mi := &file_sekolah_proto_msgTypes[214]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePembelajaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePembelajaranRequest) ProtoMessage() {}

func (x *CreatePembelajaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[214]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePembelajaranRequest.ProtoReflect.Descriptor instead.
func (*CreatePembelajaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{214}
}

func (x *CreatePembelajaranRequest) GetPembelajaran() []*Pembelajaran {
	if x != nil {
		return x.Pembelajaran
	}
	return nil
}

func (x *CreatePembelajaranRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

type CreatePembelajaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePembelajaranResponse) Reset() {
	*x = CreatePembelajaranResponse{}
	mi := &file_sekolah_proto_msgTypes[215]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePembelajaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePembelajaranResponse) ProtoMessage() {}

func (x *CreatePembelajaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[215]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePembelajaranResponse.ProtoReflect.Descriptor instead.
func (*CreatePembelajaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{215}
}

func (x *CreatePembelajaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePembelajaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakPembelajaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Pembelajaran  []*Pembelajaran        `protobuf:"bytes,2,rep,name=pembelajaran,proto3" json:"pembelajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakPembelajaranRequest) Reset() {
	*x = CreateBanyakPembelajaranRequest{}
	mi := &file_sekolah_proto_msgTypes[216]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakPembelajaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakPembelajaranRequest) ProtoMessage() {}

func (x *CreateBanyakPembelajaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[216]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakPembelajaranRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakPembelajaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{216}
}

func (x *CreateBanyakPembelajaranRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateBanyakPembelajaranRequest) GetPembelajaran() []*Pembelajaran {
	if x != nil {
		return x.Pembelajaran
	}
	return nil
}

type CreateBanyakPembelajaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakPembelajaranResponse) Reset() {
	*x = CreateBanyakPembelajaranResponse{}
	mi := &file_sekolah_proto_msgTypes[217]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakPembelajaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakPembelajaranResponse) ProtoMessage() {}

func (x *CreateBanyakPembelajaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[217]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakPembelajaranResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakPembelajaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{217}
}

func (x *CreateBanyakPembelajaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakPembelajaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetPembelajaranRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SemesterId     string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	PembelajaranId *string                `protobuf:"bytes,3,opt,name=pembelajaran_id,json=pembelajaranId,proto3,oneof" json:"pembelajaran_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPembelajaranRequest) Reset() {
	*x = GetPembelajaranRequest{}
	mi := &file_sekolah_proto_msgTypes[218]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPembelajaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPembelajaranRequest) ProtoMessage() {}

func (x *GetPembelajaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[218]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPembelajaranRequest.ProtoReflect.Descriptor instead.
func (*GetPembelajaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{218}
}

func (x *GetPembelajaranRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetPembelajaranRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetPembelajaranRequest) GetPembelajaranId() string {
	if x != nil && x.PembelajaranId != nil {
		return *x.PembelajaranId
	}
	return ""
}

type GetPembelajaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pembelajaran  []*Pembelajaran        `protobuf:"bytes,1,rep,name=pembelajaran,proto3" json:"pembelajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPembelajaranResponse) Reset() {
	*x = GetPembelajaranResponse{}
	mi := &file_sekolah_proto_msgTypes[219]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPembelajaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPembelajaranResponse) ProtoMessage() {}

func (x *GetPembelajaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[219]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPembelajaranResponse.ProtoReflect.Descriptor instead.
func (*GetPembelajaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{219}
}

func (x *GetPembelajaranResponse) GetPembelajaran() []*Pembelajaran {
	if x != nil {
		return x.Pembelajaran
	}
	return nil
}

type UpdatePembelajaranRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Schemaname string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	// string pembelajaran_id = 2;
	Pembelajaran  *Pembelajaran `protobuf:"bytes,2,opt,name=pembelajaran,proto3" json:"pembelajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePembelajaranRequest) Reset() {
	*x = UpdatePembelajaranRequest{}
	mi := &file_sekolah_proto_msgTypes[220]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePembelajaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePembelajaranRequest) ProtoMessage() {}

func (x *UpdatePembelajaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[220]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePembelajaranRequest.ProtoReflect.Descriptor instead.
func (*UpdatePembelajaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{220}
}

func (x *UpdatePembelajaranRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdatePembelajaranRequest) GetPembelajaran() *Pembelajaran {
	if x != nil {
		return x.Pembelajaran
	}
	return nil
}

type UpdatePembelajaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePembelajaranResponse) Reset() {
	*x = UpdatePembelajaranResponse{}
	mi := &file_sekolah_proto_msgTypes[221]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePembelajaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePembelajaranResponse) ProtoMessage() {}

func (x *UpdatePembelajaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[221]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePembelajaranResponse.ProtoReflect.Descriptor instead.
func (*UpdatePembelajaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{221}
}

func (x *UpdatePembelajaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePembelajaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeletePembelajaranRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	PembelajaranId string                 `protobuf:"bytes,2,opt,name=pembelajaran_id,json=pembelajaranId,proto3" json:"pembelajaran_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeletePembelajaranRequest) Reset() {
	*x = DeletePembelajaranRequest{}
	mi := &file_sekolah_proto_msgTypes[222]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePembelajaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePembelajaranRequest) ProtoMessage() {}

func (x *DeletePembelajaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[222]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePembelajaranRequest.ProtoReflect.Descriptor instead.
func (*DeletePembelajaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{222}
}

func (x *DeletePembelajaranRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeletePembelajaranRequest) GetPembelajaranId() string {
	if x != nil {
		return x.PembelajaranId
	}
	return ""
}

type DeletePembelajaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePembelajaranResponse) Reset() {
	*x = DeletePembelajaranResponse{}
	mi := &file_sekolah_proto_msgTypes[223]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePembelajaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePembelajaranResponse) ProtoMessage() {}

func (x *DeletePembelajaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[223]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePembelajaranResponse.ProtoReflect.Descriptor instead.
func (*DeletePembelajaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{223}
}

func (x *DeletePembelajaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeletePembelajaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_sekolah_proto protoreflect.FileDescriptor

var file_sekolah_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6b,
	0x74, 0x69, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x65, 0x41, 0x6b, 0x74, 0x69, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67,
	0x61, 0x6c, 0x5f, 0x6d, 0x75, 0x6c, 0x61, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x61, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x73, 0x61, 0x69, 0x22, 0x53, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0b, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0b, 0x74, 0x61,
	0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x53, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x52, 0x0b, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x4d,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x42, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68,
	0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x87, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e,
	0x61, 0x6d, 0x61, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x6b, 0x74, 0x69, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65, 0x41, 0x6b, 0x74, 0x69, 0x66, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6d, 0x75, 0x6c, 0x61, 0x69, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x61,
	0x69, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x73, 0x61, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x73, 0x61, 0x69, 0x22, 0x6e, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x61, 0x68,
	0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x22, 0x46, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfb, 0x02, 0x0a, 0x07, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x6f, 0x64, 0x65, 0x5f,
	0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6b, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x61, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x6f, 0x64, 0x65, 0x4b, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x6f,
	0x64, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a, 0x61, 0x6c, 0x61, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xff, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x70, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x64,
	0x5f, 0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x64, 0x50, 0x6f,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x61, 0x78, 0x12, 0x1c, 0x0a,
	0x09, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x61, 0x62,
	0x5f, 0x6b, 0x6f, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x61, 0x62,
	0x4b, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6d, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x69, 0x70, 0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x69, 0x70, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x69, 0x79, 0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x69, 0x79, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x32, 0x0a, 0x15, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x73, 0x69,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x6f, 0x64, 0x65, 0x41, 0x6b, 0x74, 0x69,
	0x76, 0x61, 0x73, 0x69, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e,
	0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xb4, 0x02, 0x0a, 0x0f, 0x4b,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x2e,
	0x0a, 0x13, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6b, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x4b, 0x75, 0x72, 0x69,
	0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6a, 0x75,
	0x72, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x61, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75,
	0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75,
	0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x0d, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x22, 0xae, 0x01, 0x0a, 0x0d, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61,
	0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x07, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22, 0x48, 0x0a, 0x14, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x4c, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a,
	0x0e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x42, 0x0a, 0x14, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x86,
	0x01, 0x0a, 0x15, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61,
	0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22,
	0x49, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xae, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x52, 0x07, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x53, 0x74, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x6a, 0x65,
	0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6a, 0x65, 0x6e, 0x6a,
	0x61, 0x6e, 0x67, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x53, 0x74, 0x72,
	0x22, 0x66, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x52,
	0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22, 0x49, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x0f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x3d, 0x0a, 0x0e, 0x6b, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0d, 0x6b, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x51, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x63, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75,
	0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0x93, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x10, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x52, 0x0f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6b, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x0f, 0x6b, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22, 0x51, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x6e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6b, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x22,
	0x51, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x24, 0x50, 0x72, 0x6f, 0x73, 0x65, 0x73, 0x4b, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x6e, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6b,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52,
	0x0f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x12, 0x3d, 0x0a, 0x0e, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x5f, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x52, 0x0d, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22,
	0x59, 0x0a, 0x25, 0x50, 0x72, 0x6f, 0x73, 0x65, 0x73, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x6e, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb6, 0x04, 0x0a, 0x05, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x69, 0x73, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68,
	0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6c, 0x61,
	0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67,
	0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73,
	0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x67, 0x61, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x61,
	0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x73, 0x69, 0x73,
	0x77, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e,
	0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x54, 0x61,
	0x6e, 0x67, 0x67, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6d, 0x5f, 0x61, 0x79, 0x61, 0x68,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6d, 0x41, 0x79, 0x61, 0x68, 0x12, 0x15,
	0x0a, 0x06, 0x6e, 0x6d, 0x5f, 0x69, 0x62, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6d, 0x49, 0x62, 0x75, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61,
	0x61, 0x6e, 0x5f, 0x61, 0x79, 0x61, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x41, 0x79, 0x61, 0x68, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x5f, 0x69, 0x62, 0x75, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x49, 0x62,
	0x75, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6d, 0x5f, 0x77, 0x61, 0x6c, 0x69, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6d, 0x57, 0x61, 0x6c, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65,
	0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x5f, 0x77, 0x61, 0x6c, 0x69, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x57, 0x61, 0x6c,
	0x69, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6e, 0x69, 0x6b, 0x22, 0xc2, 0x03, 0x0a, 0x0e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x50, 0x65, 0x6c,
	0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67,
	0x6b, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x61, 0x6c, 0x61, 0x6d, 0x5f, 0x6b,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x61, 0x6c, 0x61, 0x6d, 0x4b, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6e, 0x61, 0x6b,
	0x5f, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x61, 0x6b, 0x4b,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x61, 0x73, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x41, 0x73, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61,
	0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6f, 0x72, 0x74, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4f, 0x72, 0x74, 0x75, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x74, 0x75, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x4f, 0x72, 0x74, 0x75, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x69, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x57, 0x61, 0x6c, 0x69,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x6c, 0x69,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x57,
	0x61, 0x6c, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x73, 0x77,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77,
	0x61, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05, 0x73,
	0x69, 0x73, 0x77, 0x61, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x01,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x69,
	0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61,
	0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x70, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x50, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x6b, 0x61, 0x70, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x9c, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x69, 0x73,
	0x77, 0x61, 0x5f, 0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x52, 0x0e, 0x73, 0x69, 0x73,
	0x77, 0x61, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x22, 0x47, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69,
	0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69,
	0x73, 0x77, 0x61, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x22, 0x3b,
	0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x18,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x19, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x7d, 0x0a, 0x1a,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x1b, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x06, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x5f,
	0x6d, 0x61, 0x70, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x64, 0x4d,
	0x61, 0x70, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6c, 0x6f, 0x6b, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4c, 0x6f, 0x6b, 0x61, 0x6c, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6b, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x4b, 0x6f, 0x6d,
	0x70, 0x65, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x6c, 0x70, 0x5f, 0x6d,
	0x70, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x6c, 0x70, 0x4d, 0x70, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75,
	0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x75, 0x74, 0x5f, 0x72, 0x61, 0x70, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x72, 0x75, 0x74, 0x52, 0x61, 0x70,
	0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x65, 0x6c,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x74,
	0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x69, 0x6c, 0x69, 0x68, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x69, 0x6c, 0x69, 0x68,
	0x61, 0x6e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x69, 0x6c,
	0x69, 0x68, 0x61, 0x6e, 0x5f, 0x62, 0x75, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x69, 0x6c, 0x69, 0x68, 0x61, 0x6e, 0x42, 0x75, 0x6b, 0x75, 0x12, 0x31, 0x0a, 0x14,
	0x70, 0x69, 0x6c, 0x69, 0x68, 0x61, 0x6e, 0x5f, 0x6b, 0x65, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x77,
	0x61, 0x73, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x69, 0x6c, 0x69,
	0x68, 0x61, 0x6e, 0x4b, 0x65, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x77, 0x61, 0x73, 0x61, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x69, 0x6c, 0x69, 0x68, 0x61, 0x6e, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x73, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x69, 0x6c, 0x69, 0x68,
	0x61, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x73, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75,
	0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xd3, 0x04, 0x0a, 0x0a, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x64, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x70, 0x65, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x69, 0x6c,
	0x61, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b,
	0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x5f, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x4b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x6b, 0x61, 0x74, 0x5f, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x4b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x5f, 0x73, 0x69, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x53, 0x69, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x6b, 0x61, 0x74, 0x5f, 0x73, 0x69, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x53, 0x69, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x5f, 0x73, 0x69, 0x6b, 0x73, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x53, 0x69, 0x6b, 0x73, 0x6f, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x5f, 0x73, 0x69, 0x6b, 0x73, 0x6f,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61,
	0x74, 0x53, 0x69, 0x6b, 0x73, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72,
	0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x4d, 0x69, 0x6e, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c,
	0x52, 0x0d, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22,
	0xd2, 0x01, 0x0a, 0x0a, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74,
	0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x73,
	0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e,
	0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61,
	0x6a, 0x61, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b,
	0x61, 0x6e, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x0b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x0a, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x22, 0x4c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61,
	0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x0b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x0a, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x53, 0x69, 0x73, 0x77, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61,
	0x6b, 0x68, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x05, 0x6e, 0x69,
	0x6c, 0x61, 0x69, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c,
	0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x5f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68,
	0x69, 0x72, 0x22, 0x4c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x62, 0x0a, 0x0b, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x70, 0x65, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x12, 0x34,
	0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73,
	0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x18, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x05, 0x6e, 0x69,
	0x6c, 0x61, 0x69, 0x22, 0x8d, 0x06, 0x0a, 0x05, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d,
	0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x5f, 0x72, 0x6f,
	0x6d, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6a, 0x65, 0x6e, 0x69,
	0x73, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x61, 0x5f,
	0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x70, 0x12,
	0x27, 0x0a, 0x0d, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61,
	0x6e, 0x53, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x75, 0x72, 0x69,
	0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x61,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x52, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x74, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x52, 0x03, 0x70,
	0x74, 0x6b, 0x12, 0x2a, 0x0a, 0x07, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4a, 0x75,
	0x72, 0x75, 0x73, 0x61, 0x6e, 0x52, 0x07, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x30,
	0x0a, 0x09, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x75, 0x72, 0x69,
	0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x52, 0x09, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d,
	0x12, 0x49, 0x0a, 0x12, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x11, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61,
	0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6a,
	0x75, 0x6d, 0x6c, 0x61, 0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x6a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70,
	0x5f, 0x69, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6a, 0x75,
	0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x61, 0x6d, 0x61, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x70, 0x12, 0x32, 0x0a,
	0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69,
	0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x69,
	0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49,
	0x64, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x3a,
	0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x60, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05,
	0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x74,
	0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x6a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x96,
	0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x61,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x4f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49,
	0x64, 0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x1a, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x52, 0x6f, 0x6d, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x1b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b,
	0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4e, 0x61, 0x6d, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0xc0, 0x03, 0x0a, 0x0c, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f, 0x6d, 0x62,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61,
	0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f,
	0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x61, 0x6c, 0x69, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x77, 0x61, 0x6c, 0x69, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x70,
	0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x29, 0x0a,
	0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69,
	0x72, 0x52, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x33, 0x0a, 0x0d, 0x70, 0x65, 0x73, 0x65,
	0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x0c, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x12, 0x3b, 0x0a,
	0x11, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x10, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e,
	0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x22, 0xee, 0x03, 0x0a, 0x0d, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x31, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44,
	0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x73, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x69, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x6d, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d,
	0x70, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x6d,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b,
	0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6d, 0x5f, 0x69, 0x62, 0x75,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6d, 0x49, 0x62, 0x75, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x69, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x61, 0x6c, 0x69,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67,
	0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b,
	0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f, 0x6d,
	0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x61, 0x6d, 0x61, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x61, 0x6d, 0x61, 0x22, 0x9d, 0x01, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x4e, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7d, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x54, 0x0a, 0x20, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x85, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x31, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x22, 0x77, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x4e, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x67, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c,
	0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x6c, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f,
	0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0x53, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6e, 0x67,
	0x6b, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65,
	0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64,
	0x69, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f,
	0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67,
	0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f,
	0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e,
	0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a,
	0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x12, 0x72,
	0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c,
	0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x22, 0x5f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x6f, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x22, 0xeb, 0x02, 0x0a,
	0x03, 0x50, 0x54, 0x4b, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12,
	0x23, 0x0a, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c,
	0x61, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x61, 0x6d, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x61, 0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68,
	0x69, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69,
	0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x70, 0x6f,
	0x64, 0x69, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x74, 0x6b, 0x49, 0x64,
	0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6b, 0x65, 0x61, 0x6b, 0x74, 0x69, 0x66, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x61, 0x6b,
	0x74, 0x69, 0x66, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73,
	0x5f, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6a,
	0x65, 0x6e, 0x69, 0x73, 0x50, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x66,
	0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x52, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x03, 0x50, 0x54, 0x4b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x52, 0x03, 0x50, 0x54, 0x4b, 0x22, 0x7e,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0x56,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x50, 0x54, 0x4b, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x50, 0x54, 0x4b, 0x52, 0x03, 0x50, 0x54, 0x4b, 0x22, 0x52, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x03,
	0x50, 0x54, 0x4b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x52, 0x03, 0x50, 0x54, 0x4b, 0x22, 0x45, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x54, 0x4b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x61, 0x22, 0x39, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x03, 0x50, 0x54, 0x4b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x52, 0x03, 0x50, 0x54, 0x4b, 0x22, 0xd3,
	0x02, 0x0a, 0x0c, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54, 0x65,
	0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6a, 0x65, 0x6e, 0x69,
	0x73, 0x5f, 0x6b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x12,
	0x37, 0x0a, 0x18, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x49,
	0x64, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x74, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x50, 0x54, 0x4b, 0x52, 0x03, 0x70, 0x74, 0x6b, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b, 0x5f,
	0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x74, 0x6b, 0x50, 0x65, 0x6c,
	0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x52, 0x0c, 0x70, 0x74, 0x6b, 0x50, 0x65, 0x6c, 0x65, 0x6e,
	0x67, 0x6b, 0x61, 0x70, 0x22, 0x77, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54,
	0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52,
	0x0c, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22, 0x87, 0x01,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61,
	0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0x7d, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x74,
	0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x54,
	0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72,
	0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b,
	0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x52, 0x0c, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x77, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54,
	0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x70,
	0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22, 0x4e, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x65, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54,
	0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x53,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x54, 0x4b,
	0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x65, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b,
	0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54,
	0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b,
	0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65,
	0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x08, 0x4b, 0x65, 0x6e, 0x61,
	0x69, 0x6b, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73,
	0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x6b,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61,
	0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0xa9, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69,
	0x6b, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69,
	0x6b, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x12, 0x3a, 0x0a,
	0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22,
	0x7a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x70, 0x65, 0x5f, 0x6b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74,
	0x69, 0x70, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x22, 0x44, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61,
	0x6e, 0x22, 0x7d, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x6e, 0x61, 0x69,
	0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x69, 0x70, 0x65, 0x5f, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x74, 0x69, 0x70, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x22, 0x47, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6b, 0x65,
	0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52,
	0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x22, 0x66, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61,
	0x6e, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61,
	0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x64, 0x5f, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x64, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61,
	0x6e, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69,
	0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a,
	0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x08, 0x6b, 0x65, 0x6e,
	0x61, 0x69, 0x6b, 0x61, 0x6e, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb8, 0x06, 0x0a, 0x06, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x6d, 0x6f, 0x72, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x6f, 0x6d, 0x6f, 0x72, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x49, 0x6a, 0x61, 0x7a,
	0x61, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x69, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x61, 0x68,
	0x6c, 0x69, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x6b, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x6b, 0x65, 0x74, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x61,
	0x6d, 0x61, 0x5f, 0x6f, 0x72, 0x74, 0x75, 0x5f, 0x77, 0x61, 0x6c, 0x69, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x4f, 0x72, 0x74, 0x75, 0x57, 0x61, 0x6c, 0x69,
	0x12, 0x43, 0x0a, 0x1e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x70, 0x65, 0x6e, 0x79,
	0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x5f, 0x75, 0x6a, 0x69, 0x61, 0x6e, 0x5f,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x50, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a,
	0x69, 0x61, 0x6e, 0x55, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x5f, 0x70, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x5f, 0x75,
	0x6a, 0x69, 0x61, 0x6e, 0x5f, 0x75, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x50, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67,
	0x61, 0x72, 0x61, 0x55, 0x6a, 0x69, 0x61, 0x6e, 0x55, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x78, 0x70, 0x6c,
	0x6f, 0x72, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0d, 0x70, 0x65, 0x73, 0x65,
	0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x0c, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x12, 0x3b, 0x0a,
	0x11, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x10, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e,
	0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x92, 0x07, 0x0a, 0x03, 0x44, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44,
	0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e,
	0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x6b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x61, 0x68, 0x6c,
	0x69, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x6b, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x61,
	0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x6b,
	0x65, 0x74, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x5f, 0x6b, 0x6f, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e,
	0x4b, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x73, 0x69,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x73, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x6c,
	0x61, 0x68, 0x69, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67,
	0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x69, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x69, 0x73, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69,
	0x73, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6f, 0x72, 0x74, 0x75, 0x5f,
	0x77, 0x61, 0x6c, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x61,
	0x4f, 0x72, 0x74, 0x75, 0x57, 0x61, 0x6c, 0x69, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x5f, 0x70, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72,
	0x61, 0x5f, 0x75, 0x6a, 0x69, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x50, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a, 0x69, 0x61, 0x6e, 0x55, 0x73, 0x12, 0x43, 0x0a,
	0x1e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x70, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x5f, 0x75, 0x6a, 0x69, 0x61, 0x6e, 0x5f, 0x75, 0x6e, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x50, 0x65,
	0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a, 0x69, 0x61, 0x6e,
	0x55, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x61, 0x6c, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x6d, 0x6f, 0x72, 0x5f, 0x69,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x6d,
	0x6f, 0x72, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70,
	0x61, 0x74, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65,
	0x6c, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x85, 0x02, 0x0a, 0x0a, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75,
	0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x19, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x64, 0x69, 0x6b, 0x65, 0x6c,
	0x75, 0x61, 0x72, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x44, 0x69, 0x6b, 0x65, 0x6c,
	0x75, 0x61, 0x72, 0x6b, 0x61, 0x6e, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x34, 0x0a, 0x16,
	0x74, 0x67, 0x6c, 0x5f, 0x64, 0x69, 0x6b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x6b, 0x61, 0x6e, 0x5f,
	0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x67,
	0x6c, 0x44, 0x69, 0x6b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x6b, 0x61, 0x6e, 0x49, 0x6a, 0x61, 0x7a,
	0x61, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6b, 0x6f, 0x70,
	0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6f, 0x70, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x55, 0x72,
	0x6c, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x74, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x52, 0x03, 0x70, 0x74,
	0x6b, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6e, 0x73, 0x52, 0x15, 0x64,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x44, 0x6e, 0x73, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x17, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6e, 0x73, 0x52, 0x15, 0x64, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73,
	0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69,
	0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72,
	0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68,
	0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49,
	0x64, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x17, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6e, 0x73, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x22,
	0x90, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6e, 0x73, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x6f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61,
	0x68, 0x22, 0x4c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x52, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x22, 0x97, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x0a,
	0x69, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x22, 0x4c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd6,
	0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73,
	0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72,
	0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f,
	0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x6d, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x69, 0x6c,
	0x61, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x22, 0x50, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c,
	0x61, 0x69, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x5f,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72,
	0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72,
	0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72,
	0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x22, 0x50, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6b, 0x72, 0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x1b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x50,
	0x0a, 0x1c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69,
	0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5a, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x17,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x75, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x75, 0x72, 0x75, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x75, 0x6c, 0x75, 0x73,
	0x61, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6a, 0x75, 0x72, 0x75,
	0x73, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0xa0, 0x03, 0x0a, 0x10, 0x42, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x5f,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6a,
	0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x75, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x50, 0x61, 0x75, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x54, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x73, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x53, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x73, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x53, 0x6d, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x73, 0x6d, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x53, 0x6d, 0x61, 0x12, 0x25,
	0x0a, 0x0e, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6e, 0x67, 0x67, 0x69,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x54,
	0x69, 0x6e, 0x67, 0x67, 0x69, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x69, 0x72, 0x65, 0x6b, 0x74, 0x6f,
	0x72, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x61, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x72, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x50,
	0x65, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6b, 0x74, 0x69,
	0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x6b, 0x74, 0x69, 0x66, 0x12, 0x33,
	0x0a, 0x15, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x73, 0x5f, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69,
	0x6b, 0x61, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x4a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x6a, 0x65, 0x6e, 0x6a, 0x61,
	0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x6d, 0x62, 0x61, 0x67, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x4c, 0x65, 0x6d, 0x62, 0x61, 0x67, 0x61,
	0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x6f, 0x72, 0x61, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67,
	0x4f, 0x72, 0x61, 0x6e, 0x67, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61,
	0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x74,
	0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x69, 0x6e, 0x67,
	0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e, 0x6a, 0x61,
	0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e,
	0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6b, 0x65, 0x70, 0x65, 0x6d,
	0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x22, 0xdf, 0x02, 0x0a, 0x07, 0x4a, 0x75, 0x72,
	0x75, 0x73, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6a, 0x75, 0x72, 0x75,
	0x73, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x4a,
	0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x74, 0x75, 0x6b, 0x5f,
	0x73, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x74, 0x75, 0x6b,
	0x53, 0x6d, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x73, 0x6d, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x74, 0x75, 0x6b, 0x53, 0x6d, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x75, 0x6e, 0x74, 0x75, 0x6b, 0x50, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x73, 0x6c, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x75, 0x6e, 0x74, 0x75, 0x6b, 0x53, 0x6c, 0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x74, 0x75,
	0x6b, 0x5f, 0x73, 0x6d, 0x6b, 0x6c, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75,
	0x6e, 0x74, 0x75, 0x6b, 0x53, 0x6d, 0x6b, 0x6c, 0x62, 0x12, 0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e,
	0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e,
	0x67, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x49, 0x6e, 0x64,
	0x75, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x62, 0x69, 0x64, 0x61,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x42, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x09, 0x4b,
	0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x75, 0x72, 0x69,
	0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6e,
	0x61, 0x6d, 0x61, 0x5f, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c,
	0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x61, 0x69, 0x5f, 0x62, 0x65, 0x72, 0x6c,
	0x61, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x61, 0x69,
	0x42, 0x65, 0x72, 0x6c, 0x61, 0x6b, 0x75, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x72, 0x75, 0x73,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x72,
	0x75, 0x73, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x6c, 0x61, 0x72,
	0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x12, 0x2a, 0x0a, 0x0e, 0x67, 0x65, 0x6c, 0x61,
	0x72, 0x5f, 0x61, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x73, 0x69, 0x73, 0x69, 0x5f, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x73, 0x69, 0x47, 0x65, 0x6c, 0x61, 0x72, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x5f, 0x61, 0x6b, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x6b, 0x22, 0x65, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x11, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x42, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x10, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4a, 0x65, 0x6e, 0x6a, 0x61,
	0x6e, 0x67, 0x52, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69,
	0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6a, 0x65,
	0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6a, 0x65, 0x6e, 0x6a, 0x61,
	0x6e, 0x67, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x69,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x12, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x11, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x22, 0x69, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61,
	0x6e, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c,
	0x69, 0x6b, 0x61, 0x6e, 0x22, 0x5d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x72, 0x75, 0x73,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e,
	0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e,
	0x67, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x72, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6a,
	0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x52, 0x07,
	0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b,
	0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x61, 0x69, 0x5f, 0x62, 0x65, 0x72,
	0x6c, 0x61, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x75,
	0x6c, 0x61, 0x69, 0x42, 0x65, 0x72, 0x6c, 0x61, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x6d, 0x75, 0x6c, 0x61, 0x69, 0x5f, 0x62, 0x65, 0x72, 0x6c, 0x61, 0x6b, 0x75, 0x22,
	0x7a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x6b, 0x75, 0x72,
	0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d,
	0x52, 0x09, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x22, 0x2c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6c, 0x61, 0x72, 0x41,
	0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6c, 0x61, 0x72, 0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x67, 0x65,
	0x6c, 0x61, 0x72, 0x5f, 0x61, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x6c,
	0x61, 0x72, 0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x52, 0x0d, 0x67, 0x65, 0x6c, 0x61,
	0x72, 0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x22, 0xc4, 0x03, 0x0a, 0x0c, 0x50, 0x65,
	0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65,
	0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e,
	0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61,
	0x6a, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74,
	0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x69, 0x5f, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75,
	0x6c, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x69, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x13,
	0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6d, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x61, 0x6d, 0x61, 0x4d,
	0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x2d, 0x0a, 0x12,
	0x69, 0x6e, 0x64, 0x75, 0x6b, 0x5f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x75, 0x6b, 0x50,
	0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x64, 0x61, 0x70, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73,
	0x44, 0x61, 0x70, 0x6f, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x52, 0x0c, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x22, 0x9b, 0x04, 0x0a, 0x0c, 0x50, 0x74, 0x6b, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61,
	0x70, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b,
	0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70,
	0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x5f, 0x64, 0x65, 0x70, 0x61,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x44, 0x65,
	0x70, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x5f, 0x62, 0x65, 0x6c,
	0x61, 0x6b, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x65, 0x6c,
	0x61, 0x72, 0x42, 0x65, 0x6c, 0x61, 0x6b, 0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12, 0x13, 0x0a, 0x05,
	0x6e, 0x6f, 0x5f, 0x4b, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x4b,
	0x4b, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75, 0x70, 0x74, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x75, 0x70, 0x74, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a, 0x61, 0x6c, 0x61, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x72, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x77, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x73, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x61, 0x4b, 0x65, 0x6c, 0x75,
	0x72, 0x61, 0x68, 0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x61, 0x62, 0x5f, 0x6b,
	0x6f, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x61, 0x62, 0x4b, 0x6f,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x19,
	0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f, 0x5f,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6d, 0x61, 0x68, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x52, 0x75,
	0x6d, 0x61, 0x68, 0x12, 0x13, 0x0a, 0x05, 0x6e, 0x6f, 0x5f, 0x68, 0x70, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x48, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x76,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x70,
	0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x65, 0x6d, 0x62,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x65, 0x6d,
	0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x22, 0x54, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x79, 0x61, 0x6b, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x52, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x76,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70,
	0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x65, 0x6d, 0x62,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0c, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x4e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x64, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65,
	0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x9d, 0x04, 0x0a,
	0x12, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68,
	0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x1e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12,
	0x85, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x1a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x73, 0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x21, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x32, 0xc5, 0x04, 0x0a,
	0x0f, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x78, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x32, 0xf8, 0x0b, 0x0a, 0x0e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x73, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x73, 0x69, 0x2d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x7c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1d,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2d, 0x74,
	0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x79, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f,
	0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x6e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x12, 0x79, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x1a, 0x1e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xa2,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a,
	0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x2d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x25, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x1a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x2d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12,
	0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x2d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x9f, 0x01, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a, 0x2f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x2d, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xc0, 0x01, 0x0a,
	0x1d, 0x50, 0x72, 0x6f, 0x73, 0x65, 0x73, 0x4b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x6e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x2d,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x65, 0x73, 0x4b,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61,
	0x6e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x65, 0x73, 0x4b, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x6e,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x3a, 0x01, 0x2a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2f, 0x6b, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x2d, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x65, 0x73, 0x32,
	0xfd, 0x05, 0x0a, 0x0c, 0x53, 0x69, 0x73, 0x77, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x79, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12,
	0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73,
	0x69, 0x73, 0x77, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69, 0x73, 0x77,
	0x61, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69, 0x73, 0x77, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30,
	0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f,
	0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73,
	0x77, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6b,
	0x12, 0x66, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x12, 0x79, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x1a, 0x24, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x73, 0x69,
	0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x32,
	0x93, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x11,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x7d, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x23, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xce, 0x05, 0x0a, 0x11, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72,
	0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a,
	0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d,
	0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x7b, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x1d, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x69,
	0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x8e, 0x01, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x1a, 0x2a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b,
	0x68, 0x69, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12,
	0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69,
	0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x32, 0x89, 0x07, 0x0a, 0x0c, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x74, 0x61, 0x6d, 0x62, 0x61, 0x68, 0x2d, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79,
	0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x12, 0x66,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x72, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x1a, 0x1d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x76, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x6e, 0x6d,
	0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x12, 0x23,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x70, 0x6f, 0x64, 0x69, 0x6b, 0x52, 0x6f, 0x6d, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65,
	0x6c, 0x61, 0x73, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2d, 0x64, 0x61, 0x70, 0x6f, 0x64,
	0x69, 0x6b, 0x32, 0xec, 0x09, 0x0a, 0x13, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x12, 0x28, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61,
	0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01, 0x2a,
	0x22, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62,
	0x61, 0x6e, 0x79, 0x61, 0x6b, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x1a, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x2a, 0x2c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65,
	0x6c, 0x61, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x34, 0x2a, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x93, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x22, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x93, 0x01, 0x0a, 0x12,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f,
	0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x32, 0x8c, 0x04, 0x0a, 0x0a, 0x50, 0x54, 0x4b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x64, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54,
	0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22,
	0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b,
	0x12, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54,
	0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x12, 0x64, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x6a, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x12, 0x19, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x2f, 0x7b, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x54, 0x4b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x54, 0x4b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x32, 0x93, 0x08, 0x0a, 0x13, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12,
	0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31,
	0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f,
	0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x74, 0x6b,
	0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0xaf, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79,
	0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x28,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01, 0x2a, 0x22, 0x33,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6b, 0x12, 0x76, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72,
	0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74,
	0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x89, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x1a, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x22,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a,
	0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2d,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x9a, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72,
	0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x86, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61,
	0x66, 0x74, 0x61, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x32, 0xc6, 0x05, 0x0a, 0x0f, 0x4b, 0x65, 0x6e, 0x61, 0x69,
	0x6b, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e,
	0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e,
	0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6e, 0x61, 0x69,
	0x6b, 0x61, 0x6e, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65,
	0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x75, 0x0a, 0x0e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x1e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61,
	0x69, 0x6b, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a,
	0x1a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x6b, 0x65, 0x6e,
	0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x6e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x2a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x6b, 0x65, 0x6e,
	0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x78, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b,
	0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x74, 0x2f,
	0x6b, 0x65, 0x6e, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x32,
	0xcf, 0x09, 0x0a, 0x0d, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x78, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x12, 0x19,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a,
	0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x69, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73,
	0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x12, 0x7f, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x1a, 0x30, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x72, 0x61, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x44, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12,
	0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x61, 0x12, 0x6e, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6e, 0x73,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a,
	0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x61, 0x12, 0x75, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6e, 0x73,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12,
	0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x72, 0x61, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x75, 0x0a, 0x09, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x44, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x73, 0x69,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x61, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x73, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2d, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x8a, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x20, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x1a, 0x26, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f,
	0x73, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2d, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2d,
	0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x79, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2d, 0x69, 0x6a, 0x61, 0x7a, 0x61,
	0x68, 0x32, 0xb7, 0x05, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x12, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x12, 0x86, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x1a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x6b,
	0x72, 0x69, 0x70, 0x2d, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c,
	0x61, 0x69, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72,
	0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12,
	0x89, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b,
	0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01,
	0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x94, 0x01, 0x0a, 0x0f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x80, 0x01, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x2f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x32, 0x8b, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x32, 0xa4, 0x07, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x73, 0x69, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6e, 0x74,
	0x75, 0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x0e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6e, 0x74, 0x75, 0x6b,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x2f, 0x62, 0x65, 0x6e, 0x74, 0x75,
	0x6b, 0x2d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x59, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x2f,
	0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x12, 0x8e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e,
	0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x72, 0x65, 0x66, 0x2f, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x2d, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x12, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e,
	0x12, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12,
	0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2d, 0x6b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b,
	0x61, 0x6e, 0x12, 0x65, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e,
	0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75,
	0x72, 0x75, 0x73, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65,
	0x66, 0x2f, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x6d, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x2f, 0x6b,
	0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x5d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65,
	0x66, 0x2f, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x7e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x65,
	0x6c, 0x61, 0x72, 0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x12, 0x20, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6c, 0x61, 0x72, 0x41, 0x6b,
	0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6c, 0x61, 0x72,
	0x41, 0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x2f, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x2d, 0x61,
	0x6b, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x6b, 0x32, 0xce, 0x05, 0x0a, 0x13, 0x50, 0x65, 0x6d, 0x62,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x88, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x65, 0x6d, 0x62, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x65,
	0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x73, 0x2f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x12, 0x75,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x88, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6d,
	0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a,
	0x1a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x65, 0x6d,
	0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x85, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6d, 0x62,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x70, 0x65, 0x6d, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x3b, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sekolah_proto_rawDescOnce sync.Once
	file_sekolah_proto_rawDescData = file_sekolah_proto_rawDesc
)

func file_sekolah_proto_rawDescGZIP() []byte {
	file_sekolah_proto_rawDescOnce.Do(func() {
		file_sekolah_proto_rawDescData = protoimpl.X.CompressGZIP(file_sekolah_proto_rawDescData)
	})
	return file_sekolah_proto_rawDescData
}

var file_sekolah_proto_msgTypes = make([]protoimpl.MessageInfo, 224)
var file_sekolah_proto_goTypes = []any{
	(*TahunAjaran)(nil),                           // 0: sekolah.TahunAjaran
	(*CreateTahunAjaranRequest)(nil),              // 1: sekolah.CreateTahunAjaranRequest
	(*CreateTahunAjaranResponse)(nil),             // 2: sekolah.CreateTahunAjaranResponse
	(*GetTahunAjaranRequest)(nil),                 // 3: sekolah.GetTahunAjaranRequest
	(*GetTahunAjaranResponse)(nil),                // 4: sekolah.GetTahunAjaranResponse
	(*UpdateTahunAjaranRequest)(nil),              // 5: sekolah.UpdateTahunAjaranRequest
	(*UpdateTahunAjaranResponse)(nil),             // 6: sekolah.UpdateTahunAjaranResponse
	(*DeleteTahunAjaranRequest)(nil),              // 7: sekolah.DeleteTahunAjaranRequest
	(*DeleteTahunAjaranResponse)(nil),             // 8: sekolah.DeleteTahunAjaranResponse
	(*Semester)(nil),                              // 9: sekolah.Semester
	(*CreateSemesterRequest)(nil),                 // 10: sekolah.CreateSemesterRequest
	(*CreateSemesterResponse)(nil),                // 11: sekolah.CreateSemesterResponse
	(*GetSemesterRequest)(nil),                    // 12: sekolah.GetSemesterRequest
	(*GetSemesterResponse)(nil),                   // 13: sekolah.GetSemesterResponse
	(*GetCurrentSemesterResponse)(nil),            // 14: sekolah.GetCurrentSemesterResponse
	(*UpdateSemesterRequest)(nil),                 // 15: sekolah.UpdateSemesterRequest
	(*UpdateSemesterResponse)(nil),                // 16: sekolah.UpdateSemesterResponse
	(*DeleteSemesterRequest)(nil),                 // 17: sekolah.DeleteSemesterRequest
	(*DeleteSemesterResponse)(nil),                // 18: sekolah.DeleteSemesterResponse
	(*Sekolah)(nil),                               // 19: sekolah.Sekolah
	(*SekolahDapo)(nil),                           // 20: sekolah.SekolahDapo
	(*KategoriSekolah)(nil),                       // 21: sekolah.KategoriSekolah
	(*KategoriKelas)(nil),                         // 22: sekolah.KategoriKelas
	(*TabelSekolahRequest)(nil),                   // 23: sekolah.TabelSekolahRequest
	(*TabelSekolahResponse)(nil),                  // 24: sekolah.TabelSekolahResponse
	(*SchoolRequest)(nil),                         // 25: sekolah.SchoolRequest
	(*SchoolResponse)(nil),                        // 26: sekolah.SchoolResponse
	(*SekolahTenantRequest)(nil),                  // 27: sekolah.SekolahTenantRequest
	(*SekolahTenantResponse)(nil),                 // 28: sekolah.SekolahTenantResponse
	(*CreateSekolahRequest)(nil),                  // 29: sekolah.CreateSekolahRequest
	(*CreateSekolahResponse)(nil),                 // 30: sekolah.CreateSekolahResponse
	(*GetSekolahRequest)(nil),                     // 31: sekolah.GetSekolahRequest
	(*GetSekolahResponse)(nil),                    // 32: sekolah.GetSekolahResponse
	(*UpdateSekolahRequest)(nil),                  // 33: sekolah.UpdateSekolahRequest
	(*UpdateSekolahResponse)(nil),                 // 34: sekolah.UpdateSekolahResponse
	(*CreateKategoriSekolahRequest)(nil),          // 35: sekolah.CreateKategoriSekolahRequest
	(*CreateKategoriSekolahResponse)(nil),         // 36: sekolah.CreateKategoriSekolahResponse
	(*GetKategoriSekolahRequest)(nil),             // 37: sekolah.GetKategoriSekolahRequest
	(*GetKategoriSekolahResponse)(nil),            // 38: sekolah.GetKategoriSekolahResponse
	(*UpdateKategoriSekolahRequest)(nil),          // 39: sekolah.UpdateKategoriSekolahRequest
	(*UpdateKategoriSekolahResponse)(nil),         // 40: sekolah.UpdateKategoriSekolahResponse
	(*DeleteKategoriSekolahRequest)(nil),          // 41: sekolah.DeleteKategoriSekolahRequest
	(*DeleteKategoriSekolahResponse)(nil),         // 42: sekolah.DeleteKategoriSekolahResponse
	(*ProsesKategoriSekolahDanKelasRequest)(nil),  // 43: sekolah.ProsesKategoriSekolahDanKelasRequest
	(*ProsesKategoriSekolahDanKelasResponse)(nil), // 44: sekolah.ProsesKategoriSekolahDanKelasResponse
	(*Siswa)(nil),                                 // 45: sekolah.Siswa
	(*SiswaPelengkap)(nil),                        // 46: sekolah.SiswaPelengkap
	(*CreateSiswaRequest)(nil),                    // 47: sekolah.CreateSiswaRequest
	(*CreateSiswaResponse)(nil),                   // 48: sekolah.CreateSiswaResponse
	(*CreateBanyakSiswaRequest)(nil),              // 49: sekolah.CreateBanyakSiswaRequest
	(*CreateBanyakSiswaResponse)(nil),             // 50: sekolah.CreateBanyakSiswaResponse
	(*GetSiswaRequest)(nil),                       // 51: sekolah.GetSiswaRequest
	(*GetSiswaResponse)(nil),                      // 52: sekolah.GetSiswaResponse
	(*UpdateSiswaRequest)(nil),                    // 53: sekolah.UpdateSiswaRequest
	(*UpdateSiswaResponse)(nil),                   // 54: sekolah.UpdateSiswaResponse
	(*DeleteSiswaRequest)(nil),                    // 55: sekolah.DeleteSiswaRequest
	(*DeleteSiswaResponse)(nil),                   // 56: sekolah.DeleteSiswaResponse
	(*SearchSiswaRequest)(nil),                    // 57: sekolah.SearchSiswaRequest
	(*SearchSiswaResponse)(nil),                   // 58: sekolah.SearchSiswaResponse
	(*UploadDataSekolahRequest)(nil),              // 59: sekolah.UploadDataSekolahRequest
	(*UploadDataSekolahResponse)(nil),             // 60: sekolah.UploadDataSekolahResponse
	(*DownloadDataSekolahRequest)(nil),            // 61: sekolah.DownloadDataSekolahRequest
	(*DownloadDataSekolahResponse)(nil),           // 62: sekolah.DownloadDataSekolahResponse
	(*Mapel1)(nil),                                // 63: sekolah.Mapel1
	(*Mapel)(nil),                                 // 64: sekolah.Mapel
	(*NilaiAkhir)(nil),                            // 65: sekolah.NilaiAkhir
	(*NilaiSiswa)(nil),                            // 66: sekolah.NilaiSiswa
	(*CreateNilaiAkhirRequest)(nil),               // 67: sekolah.CreateNilaiAkhirRequest
	(*CreateNilaiAkhirResponse)(nil),              // 68: sekolah.CreateNilaiAkhirResponse
	(*GetNilaiAkhirRequest)(nil),                  // 69: sekolah.GetNilaiAkhirRequest
	(*GetNilaiAkhirResponse)(nil),                 // 70: sekolah.GetNilaiAkhirResponse
	(*UpdateNilaiAkhirRequest)(nil),               // 71: sekolah.UpdateNilaiAkhirRequest
	(*UpdateNilaiAkhirResponse)(nil),              // 72: sekolah.UpdateNilaiAkhirResponse
	(*DeleteNilaiAkhirRequest)(nil),               // 73: sekolah.DeleteNilaiAkhirRequest
	(*DeleteNilaiAkhirResponse)(nil),              // 74: sekolah.DeleteNilaiAkhirResponse
	(*NilaiSearch)(nil),                           // 75: sekolah.NilaiSearch
	(*SearchNilaiAkhirRequest)(nil),               // 76: sekolah.SearchNilaiAkhirRequest
	(*SearchNilaiAkhirResponse)(nil),              // 77: sekolah.SearchNilaiAkhirResponse
	(*Kelas)(nil),                                 // 78: sekolah.Kelas
	(*NamaKelas)(nil),                             // 79: sekolah.NamaKelas
	(*CreateKelasRequest)(nil),                    // 80: sekolah.CreateKelasRequest
	(*CreateKelasResponse)(nil),                   // 81: sekolah.CreateKelasResponse
	(*CreateBanyakKelasRequest)(nil),              // 82: sekolah.CreateBanyakKelasRequest
	(*CreateBanyakKelasResponse)(nil),             // 83: sekolah.CreateBanyakKelasResponse
	(*GetKelasRequest)(nil),                       // 84: sekolah.GetKelasRequest
	(*GetKelasResponse)(nil),                      // 85: sekolah.GetKelasResponse
	(*UpdateKelasRequest)(nil),                    // 86: sekolah.UpdateKelasRequest
	(*UpdateKelasResponse)(nil),                   // 87: sekolah.UpdateKelasResponse
	(*DeleteKelasRequest)(nil),                    // 88: sekolah.DeleteKelasRequest
	(*DeleteKelasResponse)(nil),                   // 89: sekolah.DeleteKelasResponse
	(*ImportDapodikRombelRequest)(nil),            // 90: sekolah.ImportDapodikRombelRequest
	(*ImportDapodikRombelResponse)(nil),           // 91: sekolah.ImportDapodikRombelResponse
	(*GetKelasByNameRequest)(nil),                 // 92: sekolah.GetKelasByNameRequest
	(*GetKelasByNameResponse)(nil),                // 93: sekolah.GetKelasByNameResponse
	(*AnggotaKelas)(nil),                          // 94: sekolah.AnggotaKelas
	(*AnggotaKelas1)(nil),                         // 95: sekolah.AnggotaKelas1
	(*CreateAnggotaKelasRequest)(nil),             // 96: sekolah.CreateAnggotaKelasRequest
	(*CreateAnggotaKelasResponse)(nil),            // 97: sekolah.CreateAnggotaKelasResponse
	(*CreateBanyakAnggotaKelasRequest)(nil),       // 98: sekolah.CreateBanyakAnggotaKelasRequest
	(*CreateBanyakAnggotaKelasResponse)(nil),      // 99: sekolah.CreateBanyakAnggotaKelasResponse
	(*GetAnggotaKelasRequest)(nil),                // 100: sekolah.GetAnggotaKelasRequest
	(*GetAnggotaKelasResponse)(nil),               // 101: sekolah.GetAnggotaKelasResponse
	(*UpdateAnggotaKelasRequest)(nil),             // 102: sekolah.UpdateAnggotaKelasRequest
	(*UpdateAnggotaKelasResponse)(nil),            // 103: sekolah.UpdateAnggotaKelasResponse
	(*DeleteAnggotaKelasRequest)(nil),             // 104: sekolah.DeleteAnggotaKelasRequest
	(*DeleteAnggotaKelasResponse)(nil),            // 105: sekolah.DeleteAnggotaKelasResponse
	(*DeleteBatchAnggotaKelasRequest)(nil),        // 106: sekolah.DeleteBatchAnggotaKelasRequest
	(*DeleteBatchAnggotaKelasResponse)(nil),       // 107: sekolah.DeleteBatchAnggotaKelasResponse
	(*SearchAnggotaKelasRequest)(nil),             // 108: sekolah.SearchAnggotaKelasRequest
	(*SearchAnggotaKelasResponse)(nil),            // 109: sekolah.SearchAnggotaKelasResponse
	(*FilterAnggotaKelasRequest)(nil),             // 110: sekolah.FilterAnggotaKelasRequest
	(*FilterAnggotaKelasResponse)(nil),            // 111: sekolah.FilterAnggotaKelasResponse
	(*ConflictRow)(nil),                           // 112: sekolah.ConflictRow
	(*ConflictResponse)(nil),                      // 113: sekolah.ConflictResponse
	(*PTK)(nil),                                   // 114: sekolah.PTK
	(*CreatePTKRequest)(nil),                      // 115: sekolah.CreatePTKRequest
	(*CreatePTKResponse)(nil),                     // 116: sekolah.CreatePTKResponse
	(*GetPTKRequest)(nil),                         // 117: sekolah.GetPTKRequest
	(*GetPTKResponse)(nil),                        // 118: sekolah.GetPTKResponse
	(*UpdatePTKRequest)(nil),                      // 119: sekolah.UpdatePTKRequest
	(*UpdatePTKResponse)(nil),                     // 120: sekolah.UpdatePTKResponse
	(*DeletePTKRequest)(nil),                      // 121: sekolah.DeletePTKRequest
	(*DeletePTKResponse)(nil),                     // 122: sekolah.DeletePTKResponse
	(*SearchPTKByNameRequest)(nil),                // 123: sekolah.SearchPTKByNameRequest
	(*SearchPTKByNameResponse)(nil),               // 124: sekolah.SearchPTKByNameResponse
	(*PTKTerdaftar)(nil),                          // 125: sekolah.PTKTerdaftar
	(*CreatePTKTerdaftarRequest)(nil),             // 126: sekolah.CreatePTKTerdaftarRequest
	(*CreatePTKTerdaftarResponse)(nil),            // 127: sekolah.CreatePTKTerdaftarResponse
	(*CreateBanyakPTKTerdaftarRequest)(nil),       // 128: sekolah.CreateBanyakPTKTerdaftarRequest
	(*CreateBanyakPTKTerdaftarResponse)(nil),      // 129: sekolah.CreateBanyakPTKTerdaftarResponse
	(*GetPTKTerdaftarRequest)(nil),                // 130: sekolah.GetPTKTerdaftarRequest
	(*GetPTKTerdaftarResponse)(nil),               // 131: sekolah.GetPTKTerdaftarResponse
	(*UpdatePTKTerdaftarRequest)(nil),             // 132: sekolah.UpdatePTKTerdaftarRequest
	(*UpdatePTKTerdaftarResponse)(nil),            // 133: sekolah.UpdatePTKTerdaftarResponse
	(*DeletePTKTerdaftarRequest)(nil),             // 134: sekolah.DeletePTKTerdaftarRequest
	(*DeletePTKTerdaftarResponse)(nil),            // 135: sekolah.DeletePTKTerdaftarResponse
	(*DeleteBatchPTKTerdaftarRequest)(nil),        // 136: sekolah.DeleteBatchPTKTerdaftarRequest
	(*DeleteBatchPTKTerdaftarResponse)(nil),       // 137: sekolah.DeleteBatchPTKTerdaftarResponse
	(*SearchPTKTerdaftarRequest)(nil),             // 138: sekolah.SearchPTKTerdaftarRequest
	(*SearchPTKTerdaftarResponse)(nil),            // 139: sekolah.SearchPTKTerdaftarResponse
	(*Kenaikan)(nil),                              // 140: sekolah.Kenaikan
	(*CreateKenaikanRequest)(nil),                 // 141: sekolah.CreateKenaikanRequest
	(*CreateKenaikanResponse)(nil),                // 142: sekolah.CreateKenaikanResponse
	(*GetKenaikanRequest)(nil),                    // 143: sekolah.GetKenaikanRequest
	(*GetKenaikanResponse)(nil),                   // 144: sekolah.GetKenaikanResponse
	(*FilterKenaikanRequest)(nil),                 // 145: sekolah.FilterKenaikanRequest
	(*FilterKenaikanResponse)(nil),                // 146: sekolah.FilterKenaikanResponse
	(*UpdateKenaikanRequest)(nil),                 // 147: sekolah.UpdateKenaikanRequest
	(*UpdateKenaikanResponse)(nil),                // 148: sekolah.UpdateKenaikanResponse
	(*DeleteKenaikanRequest)(nil),                 // 149: sekolah.DeleteKenaikanRequest
	(*DeleteKenaikanResponse)(nil),                // 150: sekolah.DeleteKenaikanResponse
	(*UploadKenaikanRequest)(nil),                 // 151: sekolah.UploadKenaikanRequest
	(*UploadKenaikanResponse)(nil),                // 152: sekolah.UploadKenaikanResponse
	(*Ijazah)(nil),                                // 153: sekolah.Ijazah
	(*Dns)(nil),                                   // 154: sekolah.Dns
	(*InfoIjazah)(nil),                            // 155: sekolah.InfoIjazah
	(*CreateDnsRequest)(nil),                      // 156: sekolah.CreateDnsRequest
	(*CreateDnsResponse)(nil),                     // 157: sekolah.CreateDnsResponse
	(*UpdateDnsRequest)(nil),                      // 158: sekolah.UpdateDnsRequest
	(*UpdateDnsResponse)(nil),                     // 159: sekolah.UpdateDnsResponse
	(*GetDnsRequest)(nil),                         // 160: sekolah.GetDnsRequest
	(*GetDnsResponse)(nil),                        // 161: sekolah.GetDnsResponse
	(*DeleteDnsRequest)(nil),                      // 162: sekolah.DeleteDnsRequest
	(*DeleteDnsResponse)(nil),                     // 163: sekolah.DeleteDnsResponse
	(*SearchDnsRequest)(nil),                      // 164: sekolah.SearchDnsRequest
	(*SearchDnsResponse)(nil),                     // 165: sekolah.SearchDnsResponse
	(*FilterDnsRequest)(nil),                      // 166: sekolah.FilterDnsRequest
	(*FilterDnsResponse)(nil),                     // 167: sekolah.FilterDnsResponse
	(*CreateInfoIjazahRequest)(nil),               // 168: sekolah.CreateInfoIjazahRequest
	(*CreateInfoIjazahResponse)(nil),              // 169: sekolah.CreateInfoIjazahResponse
	(*GetInfoIjazahRequest)(nil),                  // 170: sekolah.GetInfoIjazahRequest
	(*GetInfoIjazahResponse)(nil),                 // 171: sekolah.GetInfoIjazahResponse
	(*UpdateInfoIjazahRequest)(nil),               // 172: sekolah.UpdateInfoIjazahRequest
	(*UpdateInfoIjazahResponse)(nil),              // 173: sekolah.UpdateInfoIjazahResponse
	(*DeleteInfoIjazahRequest)(nil),               // 174: sekolah.DeleteInfoIjazahRequest
	(*DeleteInfoIjazahResponse)(nil),              // 175: sekolah.DeleteInfoIjazahResponse
	(*TranskripNilai)(nil),                        // 176: sekolah.TranskripNilai
	(*CreateTranskripNilaiRequest)(nil),           // 177: sekolah.CreateTranskripNilaiRequest
	(*CreateTranskripNilaiResponse)(nil),          // 178: sekolah.CreateTranskripNilaiResponse
	(*GetTranskripNilaiRequest)(nil),              // 179: sekolah.GetTranskripNilaiRequest
	(*GetTranskripNilaiResponse)(nil),             // 180: sekolah.GetTranskripNilaiResponse
	(*UpdateTranskripNilaiRequest)(nil),           // 181: sekolah.UpdateTranskripNilaiRequest
	(*UpdateTranskripNilaiResponse)(nil),          // 182: sekolah.UpdateTranskripNilaiResponse
	(*DeleteTranskripNilaiRequest)(nil),           // 183: sekolah.DeleteTranskripNilaiRequest
	(*DeleteTranskripNilaiResponse)(nil),          // 184: sekolah.DeleteTranskripNilaiResponse
	(*UploadTranskripNilaiRequest)(nil),           // 185: sekolah.UploadTranskripNilaiRequest
	(*UploadTranskripNilaiResponse)(nil),          // 186: sekolah.UploadTranskripNilaiResponse
	(*DownloadSekolahRequest)(nil),                // 187: sekolah.DownloadSekolahRequest
	(*DownloadSekolahResponse)(nil),               // 188: sekolah.DownloadSekolahResponse
	(*GetDashboardRequest)(nil),                   // 189: sekolah.GetDashboardRequest
	(*GetDashboardResponse)(nil),                  // 190: sekolah.GetDashboardResponse
	(*Empty)(nil),                                 // 191: sekolah.Empty
	(*BentukPendidikan)(nil),                      // 192: sekolah.BentukPendidikan
	(*Jenjang)(nil),                               // 193: sekolah.Jenjang
	(*TingkatPendidikan)(nil),                     // 194: sekolah.TingkatPendidikan
	(*StatusKepemilikan)(nil),                     // 195: sekolah.StatusKepemilikan
	(*Jurusan)(nil),                               // 196: sekolah.Jurusan
	(*Kurikulum)(nil),                             // 197: sekolah.Kurikulum
	(*GelarAkademik)(nil),                         // 198: sekolah.GelarAkademik
	(*GetBentukPendidikanResponse)(nil),           // 199: sekolah.GetBentukPendidikanResponse
	(*GetJenjangResponse)(nil),                    // 200: sekolah.GetJenjangResponse
	(*GetTingkatPendidikanRequest)(nil),           // 201: sekolah.GetTingkatPendidikanRequest
	(*GetTingkatPendidikanResponse)(nil),          // 202: sekolah.GetTingkatPendidikanResponse
	(*GetStatusKepemilikanResponse)(nil),          // 203: sekolah.GetStatusKepemilikanResponse
	(*GetJurusanRequest)(nil),                     // 204: sekolah.GetJurusanRequest
	(*GetJurusanResponse)(nil),                    // 205: sekolah.GetJurusanResponse
	(*GetKurikulumRequest)(nil),                   // 206: sekolah.GetKurikulumRequest
	(*GetKurikulumResponse)(nil),                  // 207: sekolah.GetKurikulumResponse
	(*GetMapelRequest)(nil),                       // 208: sekolah.GetMapelRequest
	(*GetMapelResponse)(nil),                      // 209: sekolah.GetMapelResponse
	(*GetGelarAkademikRequest)(nil),               // 210: sekolah.GetGelarAkademikRequest
	(*GetGelarAkademikResponse)(nil),              // 211: sekolah.GetGelarAkademikResponse
	(*Pembelajaran)(nil),                          // 212: sekolah.Pembelajaran
	(*PtkPelengkap)(nil),                          // 213: sekolah.PtkPelengkap
	(*CreatePembelajaranRequest)(nil),             // 214: sekolah.CreatePembelajaranRequest
	(*CreatePembelajaranResponse)(nil),            // 215: sekolah.CreatePembelajaranResponse
	(*CreateBanyakPembelajaranRequest)(nil),       // 216: sekolah.CreateBanyakPembelajaranRequest
	(*CreateBanyakPembelajaranResponse)(nil),      // 217: sekolah.CreateBanyakPembelajaranResponse
	(*GetPembelajaranRequest)(nil),                // 218: sekolah.GetPembelajaranRequest
	(*GetPembelajaranResponse)(nil),               // 219: sekolah.GetPembelajaranResponse
	(*UpdatePembelajaranRequest)(nil),             // 220: sekolah.UpdatePembelajaranRequest
	(*UpdatePembelajaranResponse)(nil),            // 221: sekolah.UpdatePembelajaranResponse
	(*DeletePembelajaranRequest)(nil),             // 222: sekolah.DeletePembelajaranRequest
	(*DeletePembelajaranResponse)(nil),            // 223: sekolah.DeletePembelajaranResponse
}
var file_sekolah_proto_depIdxs = []int32{
	0,   // 0: sekolah.CreateTahunAjaranRequest.tahun_ajaran:type_name -> sekolah.TahunAjaran
	0,   // 1: sekolah.GetTahunAjaranResponse.tahun_ajaran:type_name -> sekolah.TahunAjaran
	0,   // 2: sekolah.UpdateTahunAjaranRequest.tahun_ajaran:type_name -> sekolah.TahunAjaran
	9,   // 3: sekolah.CreateSemesterRequest.semester:type_name -> sekolah.Semester
	9,   // 4: sekolah.GetSemesterResponse.semester:type_name -> sekolah.Semester
	9,   // 5: sekolah.GetCurrentSemesterResponse.semester:type_name -> sekolah.Semester
	9,   // 6: sekolah.UpdateSemesterRequest.semester:type_name -> sekolah.Semester
	22,  // 7: sekolah.KategoriSekolah.kategori_kelas:type_name -> sekolah.KategoriKelas
	19,  // 8: sekolah.TabelSekolahRequest.sekolah:type_name -> sekolah.Sekolah
	20,  // 9: sekolah.CreateSekolahRequest.sekolah:type_name -> sekolah.SekolahDapo
	20,  // 10: sekolah.GetSekolahResponse.sekolah:type_name -> sekolah.SekolahDapo
	20,  // 11: sekolah.UpdateSekolahRequest.sekolah:type_name -> sekolah.SekolahDapo
	21,  // 12: sekolah.CreateKategoriSekolahRequest.kategori_sekolah:type_name -> sekolah.KategoriSekolah
	22,  // 13: sekolah.CreateKategoriSekolahRequest.kategori_kelas:type_name -> sekolah.KategoriKelas
	21,  // 14: sekolah.GetKategoriSekolahResponse.kategori_sekolah:type_name -> sekolah.KategoriSekolah
	21,  // 15: sekolah.UpdateKategoriSekolahRequest.kategori_sekolah:type_name -> sekolah.KategoriSekolah
	21,  // 16: sekolah.ProsesKategoriSekolahDanKelasRequest.kategori_sekolah:type_name -> sekolah.KategoriSekolah
	22,  // 17: sekolah.ProsesKategoriSekolahDanKelasRequest.kategori_kelas:type_name -> sekolah.KategoriKelas
	45,  // 18: sekolah.SiswaPelengkap.siswa:type_name -> sekolah.Siswa
	45,  // 19: sekolah.CreateSiswaRequest.siswa:type_name -> sekolah.Siswa
	45,  // 20: sekolah.CreateBanyakSiswaRequest.siswa:type_name -> sekolah.Siswa
	113, // 21: sekolah.CreateBanyakSiswaRequest.conflicts:type_name -> sekolah.ConflictResponse
	46,  // 22: sekolah.GetSiswaResponse.siswa:type_name -> sekolah.SiswaPelengkap
	45,  // 23: sekolah.UpdateSiswaRequest.siswa:type_name -> sekolah.Siswa
	46,  // 24: sekolah.UpdateSiswaRequest.siswa_pelengkap:type_name -> sekolah.SiswaPelengkap
	45,  // 25: sekolah.SearchSiswaResponse.siswa:type_name -> sekolah.Siswa
	64,  // 26: sekolah.NilaiAkhir.mata_pelajaran:type_name -> sekolah.Mapel
	65,  // 27: sekolah.CreateNilaiAkhirRequest.nilai_akhir:type_name -> sekolah.NilaiAkhir
	66,  // 28: sekolah.GetNilaiAkhirResponse.nilai_siswa:type_name -> sekolah.NilaiSiswa
	65,  // 29: sekolah.UpdateNilaiAkhirRequest.nilai:type_name -> sekolah.NilaiAkhir
	64,  // 30: sekolah.NilaiSearch.mataPelajaran:type_name -> sekolah.Mapel
	75,  // 31: sekolah.SearchNilaiAkhirResponse.nilai:type_name -> sekolah.NilaiSearch
	94,  // 32: sekolah.Kelas.anggota_kelas:type_name -> sekolah.AnggotaKelas
	212, // 33: sekolah.Kelas.pembelajaran:type_name -> sekolah.Pembelajaran
	114, // 34: sekolah.Kelas.ptk:type_name -> sekolah.PTK
	196, // 35: sekolah.Kelas.jurusan:type_name -> sekolah.Jurusan
	197, // 36: sekolah.Kelas.kurikulum:type_name -> sekolah.Kurikulum
	194, // 37: sekolah.Kelas.tingkat_pendidikan:type_name -> sekolah.TingkatPendidikan
	78,  // 38: sekolah.CreateKelasRequest.kelas:type_name -> sekolah.Kelas
	94,  // 39: sekolah.CreateKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	78,  // 40: sekolah.CreateBanyakKelasRequest.kelas:type_name -> sekolah.Kelas
	113, // 41: sekolah.CreateBanyakKelasResponse.conflicts:type_name -> sekolah.ConflictResponse
	78,  // 42: sekolah.GetKelasResponse.kelas:type_name -> sekolah.Kelas
	78,  // 43: sekolah.UpdateKelasRequest.kelas:type_name -> sekolah.Kelas
	94,  // 44: sekolah.UpdateKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	78,  // 45: sekolah.ImportDapodikRombelRequest.kelas:type_name -> sekolah.Kelas
	113, // 46: sekolah.ImportDapodikRombelResponse.conflicts:type_name -> sekolah.ConflictResponse
	79,  // 47: sekolah.GetKelasByNameResponse.kelas:type_name -> sekolah.NamaKelas
	65,  // 48: sekolah.AnggotaKelas.nilai:type_name -> sekolah.NilaiAkhir
	45,  // 49: sekolah.AnggotaKelas.peserta_didik:type_name -> sekolah.Siswa
	78,  // 50: sekolah.AnggotaKelas.rombongan_belajar:type_name -> sekolah.Kelas
	94,  // 51: sekolah.CreateAnggotaKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	78,  // 52: sekolah.CreateAnggotaKelasRequest.kelas:type_name -> sekolah.Kelas
	94,  // 53: sekolah.CreateBanyakAnggotaKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	95,  // 54: sekolah.GetAnggotaKelasResponse.anggota_kelas:type_name -> sekolah.AnggotaKelas1
	94,  // 55: sekolah.UpdateAnggotaKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	94,  // 56: sekolah.SearchAnggotaKelasResponse.anggota_kelas:type_name -> sekolah.AnggotaKelas
	94,  // 57: sekolah.FilterAnggotaKelasResponse.anggota_kelas:type_name -> sekolah.AnggotaKelas
	112, // 58: sekolah.ConflictResponse.conflicts:type_name -> sekolah.ConflictRow
	114, // 59: sekolah.CreatePTKRequest.PTK:type_name -> sekolah.PTK
	113, // 60: sekolah.CreatePTKResponse.conflicts:type_name -> sekolah.ConflictResponse
	114, // 61: sekolah.GetPTKResponse.PTK:type_name -> sekolah.PTK
	114, // 62: sekolah.UpdatePTKRequest.PTK:type_name -> sekolah.PTK
	114, // 63: sekolah.SearchPTKByNameResponse.PTK:type_name -> sekolah.PTK
	114, // 64: sekolah.PTKTerdaftar.ptk:type_name -> sekolah.PTK
	213, // 65: sekolah.PTKTerdaftar.ptk_pelengkap:type_name -> sekolah.PtkPelengkap
	125, // 66: sekolah.CreatePTKTerdaftarRequest.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	113, // 67: sekolah.CreatePTKTerdaftarResponse.conflicts:type_name -> sekolah.ConflictResponse
	125, // 68: sekolah.CreateBanyakPTKTerdaftarRequest.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	113, // 69: sekolah.CreateBanyakPTKTerdaftarResponse.conflicts:type_name -> sekolah.ConflictResponse
	125, // 70: sekolah.GetPTKTerdaftarResponse.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	125, // 71: sekolah.UpdatePTKTerdaftarRequest.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	125, // 72: sekolah.SearchPTKTerdaftarResponse.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	94,  // 73: sekolah.Kenaikan.anggota_kelas:type_name -> sekolah.AnggotaKelas
	94,  // 74: sekolah.CreateKenaikanRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	113, // 75: sekolah.CreateKenaikanResponse.conflicts:type_name -> sekolah.ConflictResponse
	140, // 76: sekolah.GetKenaikanResponse.kenaikan:type_name -> sekolah.Kenaikan
	140, // 77: sekolah.FilterKenaikanResponse.kenaikan:type_name -> sekolah.Kenaikan
	140, // 78: sekolah.UpdateKenaikanRequest.kenaikan:type_name -> sekolah.Kenaikan
	113, // 79: sekolah.UpdateKenaikanResponse.conflicts:type_name -> sekolah.ConflictResponse
	140, // 80: sekolah.UploadKenaikanRequest.kenaikan:type_name -> sekolah.Kenaikan
	45,  // 81: sekolah.Ijazah.peserta_didik:type_name -> sekolah.Siswa
	78,  // 82: sekolah.Ijazah.rombongan_belajar:type_name -> sekolah.Kelas
	176, // 83: sekolah.Ijazah.transkrip_nilai:type_name -> sekolah.TranskripNilai
	78,  // 84: sekolah.Dns.kelas:type_name -> sekolah.Kelas
	45,  // 85: sekolah.Dns.siswa:type_name -> sekolah.Siswa
	114, // 86: sekolah.InfoIjazah.ptk:type_name -> sekolah.PTK
	154, // 87: sekolah.CreateDnsRequest.data_nominasi_sementara:type_name -> sekolah.Dns
	154, // 88: sekolah.UpdateDnsRequest.data_nominasi_sementara:type_name -> sekolah.Dns
	154, // 89: sekolah.GetDnsResponse.data_nominasi_sementara:type_name -> sekolah.Dns
	154, // 90: sekolah.SearchDnsResponse.data_nominasi_sementara:type_name -> sekolah.Dns
	154, // 91: sekolah.FilterDnsResponse.data_nominasi_sementara:type_name -> sekolah.Dns
	155, // 92: sekolah.CreateInfoIjazahRequest.info_ijazah:type_name -> sekolah.InfoIjazah
	155, // 93: sekolah.GetInfoIjazahResponse.info_ijazah:type_name -> sekolah.InfoIjazah
	155, // 94: sekolah.UpdateInfoIjazahRequest.info_ijazah:type_name -> sekolah.InfoIjazah
	176, // 95: sekolah.CreateTranskripNilaiRequest.transkrip_nilai:type_name -> sekolah.TranskripNilai
	176, // 96: sekolah.GetTranskripNilaiResponse.transkrip_nilai:type_name -> sekolah.TranskripNilai
	176, // 97: sekolah.UpdateTranskripNilaiRequest.transkrip_nilai:type_name -> sekolah.TranskripNilai
	192, // 98: sekolah.GetBentukPendidikanResponse.bentuk_pendidikan:type_name -> sekolah.BentukPendidikan
	193, // 99: sekolah.GetJenjangResponse.jenjang:type_name -> sekolah.Jenjang
	194, // 100: sekolah.GetTingkatPendidikanResponse.tingkat_pendidikan:type_name -> sekolah.TingkatPendidikan
	195, // 101: sekolah.GetStatusKepemilikanResponse.status_kepemilikan:type_name -> sekolah.StatusKepemilikan
	196, // 102: sekolah.GetJurusanResponse.jurusan:type_name -> sekolah.Jurusan
	197, // 103: sekolah.GetKurikulumResponse.kurikulum:type_name -> sekolah.Kurikulum
	64,  // 104: sekolah.GetMapelResponse.mapel:type_name -> sekolah.Mapel
	198, // 105: sekolah.GetGelarAkademikResponse.gelar_akademik:type_name -> sekolah.GelarAkademik
	125, // 106: sekolah.Pembelajaran.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	212, // 107: sekolah.CreatePembelajaranRequest.pembelajaran:type_name -> sekolah.Pembelajaran
	212, // 108: sekolah.CreateBanyakPembelajaranRequest.pembelajaran:type_name -> sekolah.Pembelajaran
	212, // 109: sekolah.GetPembelajaranResponse.pembelajaran:type_name -> sekolah.Pembelajaran
	212, // 110: sekolah.UpdatePembelajaranRequest.pembelajaran:type_name -> sekolah.Pembelajaran
	1,   // 111: sekolah.TahunAjaranService.CreateTahunAjaran:input_type -> sekolah.CreateTahunAjaranRequest
	3,   // 112: sekolah.TahunAjaranService.GetTahunAjaran:input_type -> sekolah.GetTahunAjaranRequest
	5,   // 113: sekolah.TahunAjaranService.UpdateTahunAjaran:input_type -> sekolah.UpdateTahunAjaranRequest
	7,   // 114: sekolah.TahunAjaranService.DeleteTahunAjaran:input_type -> sekolah.DeleteTahunAjaranRequest
	10,  // 115: sekolah.SemesterService.CreateSemester:input_type -> sekolah.CreateSemesterRequest
	12,  // 116: sekolah.SemesterService.GetSemester:input_type -> sekolah.GetSemesterRequest
	191, // 117: sekolah.SemesterService.GetCurrentSemester:input_type -> sekolah.Empty
	15,  // 118: sekolah.SemesterService.UpdateSemester:input_type -> sekolah.UpdateSemesterRequest
	17,  // 119: sekolah.SemesterService.DeleteSemester:input_type -> sekolah.DeleteSemesterRequest
	25,  // 120: sekolah.SekolahService.GetSchoolInfo:input_type -> sekolah.SchoolRequest
	23,  // 121: sekolah.SekolahService.RegistrasiSekolah:input_type -> sekolah.TabelSekolahRequest
	27,  // 122: sekolah.SekolahService.GetSekolahTenant:input_type -> sekolah.SekolahTenantRequest
	29,  // 123: sekolah.SekolahService.CreateSekolah:input_type -> sekolah.CreateSekolahRequest
	31,  // 124: sekolah.SekolahService.GetSekolah:input_type -> sekolah.GetSekolahRequest
	33,  // 125: sekolah.SekolahService.UpdateSekolah:input_type -> sekolah.UpdateSekolahRequest
	35,  // 126: sekolah.SekolahService.CreateKategoriSekolah:input_type -> sekolah.CreateKategoriSekolahRequest
	39,  // 127: sekolah.SekolahService.UpdateKategoriSekolah:input_type -> sekolah.UpdateKategoriSekolahRequest
	37,  // 128: sekolah.SekolahService.GetKategoriSekolah:input_type -> sekolah.GetKategoriSekolahRequest
	41,  // 129: sekolah.SekolahService.DeleteKategoriSekolah:input_type -> sekolah.DeleteKategoriSekolahRequest
	43,  // 130: sekolah.SekolahService.ProsesKategoriSekolahDanKelas:input_type -> sekolah.ProsesKategoriSekolahDanKelasRequest
	47,  // 131: sekolah.SiswaService.CreateSiswa:input_type -> sekolah.CreateSiswaRequest
	49,  // 132: sekolah.SiswaService.CreateBanyakSiswa:input_type -> sekolah.CreateBanyakSiswaRequest
	51,  // 133: sekolah.SiswaService.GetSiswa:input_type -> sekolah.GetSiswaRequest
	53,  // 134: sekolah.SiswaService.UpdateSiswa:input_type -> sekolah.UpdateSiswaRequest
	55,  // 135: sekolah.SiswaService.DeleteSiswa:input_type -> sekolah.DeleteSiswaRequest
	57,  // 136: sekolah.SiswaService.SearchSiswa:input_type -> sekolah.SearchSiswaRequest
	59,  // 137: sekolah.UploadDataSekolahService.UploadDataSekolah:input_type -> sekolah.UploadDataSekolahRequest
	61,  // 138: sekolah.UploadDataSekolahService.DownloadDataSekolah:input_type -> sekolah.DownloadDataSekolahRequest
	67,  // 139: sekolah.NilaiAkhirService.CreateNilaiAkhir:input_type -> sekolah.CreateNilaiAkhirRequest
	69,  // 140: sekolah.NilaiAkhirService.GetNilaiAkhir:input_type -> sekolah.GetNilaiAkhirRequest
	71,  // 141: sekolah.NilaiAkhirService.UpdateNilaiAkhir:input_type -> sekolah.UpdateNilaiAkhirRequest
	73,  // 142: sekolah.NilaiAkhirService.DeleteNilaiAkhir:input_type -> sekolah.DeleteNilaiAkhirRequest
	76,  // 143: sekolah.NilaiAkhirService.SearchNilaiAkhir:input_type -> sekolah.SearchNilaiAkhirRequest
	80,  // 144: sekolah.KelasService.CreateKelas:input_type -> sekolah.CreateKelasRequest
	82,  // 145: sekolah.KelasService.CreateBanyakKelas:input_type -> sekolah.CreateBanyakKelasRequest
	84,  // 146: sekolah.KelasService.GetKelas:input_type -> sekolah.GetKelasRequest
	86,  // 147: sekolah.KelasService.UpdateKelas:input_type -> sekolah.UpdateKelasRequest
	88,  // 148: sekolah.KelasService.DeleteKelas:input_type -> sekolah.DeleteKelasRequest
	92,  // 149: sekolah.KelasService.GetKelasByName:input_type -> sekolah.GetKelasByNameRequest
	90,  // 150: sekolah.KelasService.ImportDapodikRombel:input_type -> sekolah.ImportDapodikRombelRequest
	96,  // 151: sekolah.AnggotaKelasService.CreateAnggotaKelas:input_type -> sekolah.CreateAnggotaKelasRequest
	98,  // 152: sekolah.AnggotaKelasService.CreateBanyakAnggotaKelas:input_type -> sekolah.CreateBanyakAnggotaKelasRequest
	100, // 153: sekolah.AnggotaKelasService.GetAnggotaKelas:input_type -> sekolah.GetAnggotaKelasRequest
	102, // 154: sekolah.AnggotaKelasService.UpdateAnggotaKelas:input_type -> sekolah.UpdateAnggotaKelasRequest
	104, // 155: sekolah.AnggotaKelasService.DeleteAnggotaKelas:input_type -> sekolah.DeleteAnggotaKelasRequest
	106, // 156: sekolah.AnggotaKelasService.DeleteBatchAnggotaKelas:input_type -> sekolah.DeleteBatchAnggotaKelasRequest
	108, // 157: sekolah.AnggotaKelasService.SearchAnggotaKelas:input_type -> sekolah.SearchAnggotaKelasRequest
	110, // 158: sekolah.AnggotaKelasService.FilterAnggotaKelas:input_type -> sekolah.FilterAnggotaKelasRequest
	115, // 159: sekolah.PTKService.CreatePTK:input_type -> sekolah.CreatePTKRequest
	117, // 160: sekolah.PTKService.GetPTK:input_type -> sekolah.GetPTKRequest
	119, // 161: sekolah.PTKService.UpdatePTK:input_type -> sekolah.UpdatePTKRequest
	121, // 162: sekolah.PTKService.DeletePTK:input_type -> sekolah.DeletePTKRequest
	123, // 163: sekolah.PTKService.SearchPTKByName:input_type -> sekolah.SearchPTKByNameRequest
	126, // 164: sekolah.PTKTerdaftarService.CreatePTKTerdaftar:input_type -> sekolah.CreatePTKTerdaftarRequest
	128, // 165: sekolah.PTKTerdaftarService.CreateBanyakPTKTerdaftar:input_type -> sekolah.CreateBanyakPTKTerdaftarRequest
	130, // 166: sekolah.PTKTerdaftarService.GetPTKTerdaftar:input_type -> sekolah.GetPTKTerdaftarRequest
	132, // 167: sekolah.PTKTerdaftarService.UpdatePTKTerdaftar:input_type -> sekolah.UpdatePTKTerdaftarRequest
	134, // 168: sekolah.PTKTerdaftarService.DeletePTKTerdaftar:input_type -> sekolah.DeletePTKTerdaftarRequest
	136, // 169: sekolah.PTKTerdaftarService.DeletBatchPTKTerdaftar:input_type -> sekolah.DeleteBatchPTKTerdaftarRequest
	138, // 170: sekolah.PTKTerdaftarService.SearchPTKTerdaftar:input_type -> sekolah.SearchPTKTerdaftarRequest
	141, // 171: sekolah.KenaikanService.CreateKenaikan:input_type -> sekolah.CreateKenaikanRequest
	143, // 172: sekolah.KenaikanService.GetKenaikan:input_type -> sekolah.GetKenaikanRequest
	145, // 173: sekolah.KenaikanService.FilterKenaikan:input_type -> sekolah.FilterKenaikanRequest
	147, // 174: sekolah.KenaikanService.UpdateKenaikan:input_type -> sekolah.UpdateKenaikanRequest
	149, // 175: sekolah.KenaikanService.DeleteKenaikan:input_type -> sekolah.DeleteKenaikanRequest
	151, // 176: sekolah.KenaikanService.UploadKenaikan:input_type -> sekolah.UploadKenaikanRequest
	156, // 177: sekolah.IjazahService.CreateDns:input_type -> sekolah.CreateDnsRequest
	158, // 178: sekolah.IjazahService.UpdateDns:input_type -> sekolah.UpdateDnsRequest
	160, // 179: sekolah.IjazahService.GetDns:input_type -> sekolah.GetDnsRequest
	162, // 180: sekolah.IjazahService.DeleteDns:input_type -> sekolah.DeleteDnsRequest
	164, // 181: sekolah.IjazahService.SearchDns:input_type -> sekolah.SearchDnsRequest
	166, // 182: sekolah.IjazahService.FilterDns:input_type -> sekolah.FilterDnsRequest
	168, // 183: sekolah.IjazahService.CreateInfoIjazah:input_type -> sekolah.CreateInfoIjazahRequest
	172, // 184: sekolah.IjazahService.UpdateInfoIjazah:input_type -> sekolah.UpdateInfoIjazahRequest
	170, // 185: sekolah.IjazahService.GetInfoIjazah:input_type -> sekolah.GetInfoIjazahRequest
	174, // 186: sekolah.IjazahService.DeleteInfoIjazah:input_type -> sekolah.DeleteInfoIjazahRequest
	177, // 187: sekolah.TranskripNilaiService.CreateTranskripNilai:input_type -> sekolah.CreateTranskripNilaiRequest
	179, // 188: sekolah.TranskripNilaiService.GetTranskripNilai:input_type -> sekolah.GetTranskripNilaiRequest
	181, // 189: sekolah.TranskripNilaiService.UpdateTranskripNilai:input_type -> sekolah.UpdateTranskripNilaiRequest
	183, // 190: sekolah.TranskripNilaiService.DeleteTranskripNilai:input_type -> sekolah.DeleteTranskripNilaiRequest
	185, // 191: sekolah.TranskripNilaiService.UploadITranskripNilai:input_type -> sekolah.UploadTranskripNilaiRequest
	187, // 192: sekolah.DownloadService.DownloadSekolahService:input_type -> sekolah.DownloadSekolahRequest
	189, // 193: sekolah.DashboardService.GetDashboard:input_type -> sekolah.GetDashboardRequest
	191, // 194: sekolah.ReferensiService.GetBentukPendidikan:input_type -> sekolah.Empty
	191, // 195: sekolah.ReferensiService.GetJenjang:input_type -> sekolah.Empty
	201, // 196: sekolah.ReferensiService.GetTingkatPendidikan:input_type -> sekolah.GetTingkatPendidikanRequest
	191, // 197: sekolah.ReferensiService.GetStatusKepemilikan:input_type -> sekolah.Empty
	204, // 198: sekolah.ReferensiService.GetJurusan:input_type -> sekolah.GetJurusanRequest
	206, // 199: sekolah.ReferensiService.GetKurikulum:input_type -> sekolah.GetKurikulumRequest
	208, // 200: sekolah.ReferensiService.GetMapel:input_type -> sekolah.GetMapelRequest
	210, // 201: sekolah.ReferensiService.GetGelarAkademik:input_type -> sekolah.GetGelarAkademikRequest
	214, // 202: sekolah.PembelajaranService.CreatePembelajaran:input_type -> sekolah.CreatePembelajaranRequest
	216, // 203: sekolah.PembelajaranService.CreateBanyakPembelajaran:input_type -> sekolah.CreateBanyakPembelajaranRequest
	218, // 204: sekolah.PembelajaranService.GetPembelajaran:input_type -> sekolah.GetPembelajaranRequest
	220, // 205: sekolah.PembelajaranService.UpdatePembelajaran:input_type -> sekolah.UpdatePembelajaranRequest
	222, // 206: sekolah.PembelajaranService.DeletePembelajaran:input_type -> sekolah.DeletePembelajaranRequest
	2,   // 207: sekolah.TahunAjaranService.CreateTahunAjaran:output_type -> sekolah.CreateTahunAjaranResponse
	4,   // 208: sekolah.TahunAjaranService.GetTahunAjaran:output_type -> sekolah.GetTahunAjaranResponse
	6,   // 209: sekolah.TahunAjaranService.UpdateTahunAjaran:output_type -> sekolah.UpdateTahunAjaranResponse
	8,   // 210: sekolah.TahunAjaranService.DeleteTahunAjaran:output_type -> sekolah.DeleteTahunAjaranResponse
	11,  // 211: sekolah.SemesterService.CreateSemester:output_type -> sekolah.CreateSemesterResponse
	13,  // 212: sekolah.SemesterService.GetSemester:output_type -> sekolah.GetSemesterResponse
	14,  // 213: sekolah.SemesterService.GetCurrentSemester:output_type -> sekolah.GetCurrentSemesterResponse
	16,  // 214: sekolah.SemesterService.UpdateSemester:output_type -> sekolah.UpdateSemesterResponse
	18,  // 215: sekolah.SemesterService.DeleteSemester:output_type -> sekolah.DeleteSemesterResponse
	26,  // 216: sekolah.SekolahService.GetSchoolInfo:output_type -> sekolah.SchoolResponse
	24,  // 217: sekolah.SekolahService.RegistrasiSekolah:output_type -> sekolah.TabelSekolahResponse
	28,  // 218: sekolah.SekolahService.GetSekolahTenant:output_type -> sekolah.SekolahTenantResponse
	30,  // 219: sekolah.SekolahService.CreateSekolah:output_type -> sekolah.CreateSekolahResponse
	32,  // 220: sekolah.SekolahService.GetSekolah:output_type -> sekolah.GetSekolahResponse
	34,  // 221: sekolah.SekolahService.UpdateSekolah:output_type -> sekolah.UpdateSekolahResponse
	36,  // 222: sekolah.SekolahService.CreateKategoriSekolah:output_type -> sekolah.CreateKategoriSekolahResponse
	40,  // 223: sekolah.SekolahService.UpdateKategoriSekolah:output_type -> sekolah.UpdateKategoriSekolahResponse
	38,  // 224: sekolah.SekolahService.GetKategoriSekolah:output_type -> sekolah.GetKategoriSekolahResponse
	42,  // 225: sekolah.SekolahService.DeleteKategoriSekolah:output_type -> sekolah.DeleteKategoriSekolahResponse
	44,  // 226: sekolah.SekolahService.ProsesKategoriSekolahDanKelas:output_type -> sekolah.ProsesKategoriSekolahDanKelasResponse
	48,  // 227: sekolah.SiswaService.CreateSiswa:output_type -> sekolah.CreateSiswaResponse
	50,  // 228: sekolah.SiswaService.CreateBanyakSiswa:output_type -> sekolah.CreateBanyakSiswaResponse
	52,  // 229: sekolah.SiswaService.GetSiswa:output_type -> sekolah.GetSiswaResponse
	54,  // 230: sekolah.SiswaService.UpdateSiswa:output_type -> sekolah.UpdateSiswaResponse
	56,  // 231: sekolah.SiswaService.DeleteSiswa:output_type -> sekolah.DeleteSiswaResponse
	58,  // 232: sekolah.SiswaService.SearchSiswa:output_type -> sekolah.SearchSiswaResponse
	60,  // 233: sekolah.UploadDataSekolahService.UploadDataSekolah:output_type -> sekolah.UploadDataSekolahResponse
	62,  // 234: sekolah.UploadDataSekolahService.DownloadDataSekolah:output_type -> sekolah.DownloadDataSekolahResponse
	68,  // 235: sekolah.NilaiAkhirService.CreateNilaiAkhir:output_type -> sekolah.CreateNilaiAkhirResponse
	70,  // 236: sekolah.NilaiAkhirService.GetNilaiAkhir:output_type -> sekolah.GetNilaiAkhirResponse
	72,  // 237: sekolah.NilaiAkhirService.UpdateNilaiAkhir:output_type -> sekolah.UpdateNilaiAkhirResponse
	74,  // 238: sekolah.NilaiAkhirService.DeleteNilaiAkhir:output_type -> sekolah.DeleteNilaiAkhirResponse
	77,  // 239: sekolah.NilaiAkhirService.SearchNilaiAkhir:output_type -> sekolah.SearchNilaiAkhirResponse
	81,  // 240: sekolah.KelasService.CreateKelas:output_type -> sekolah.CreateKelasResponse
	83,  // 241: sekolah.KelasService.CreateBanyakKelas:output_type -> sekolah.CreateBanyakKelasResponse
	85,  // 242: sekolah.KelasService.GetKelas:output_type -> sekolah.GetKelasResponse
	87,  // 243: sekolah.KelasService.UpdateKelas:output_type -> sekolah.UpdateKelasResponse
	89,  // 244: sekolah.KelasService.DeleteKelas:output_type -> sekolah.DeleteKelasResponse
	93,  // 245: sekolah.KelasService.GetKelasByName:output_type -> sekolah.GetKelasByNameResponse
	91,  // 246: sekolah.KelasService.ImportDapodikRombel:output_type -> sekolah.ImportDapodikRombelResponse
	97,  // 247: sekolah.AnggotaKelasService.CreateAnggotaKelas:output_type -> sekolah.CreateAnggotaKelasResponse
	99,  // 248: sekolah.AnggotaKelasService.CreateBanyakAnggotaKelas:output_type -> sekolah.CreateBanyakAnggotaKelasResponse
	101, // 249: sekolah.AnggotaKelasService.GetAnggotaKelas:output_type -> sekolah.GetAnggotaKelasResponse
	103, // 250: sekolah.AnggotaKelasService.UpdateAnggotaKelas:output_type -> sekolah.UpdateAnggotaKelasResponse
	105, // 251: sekolah.AnggotaKelasService.DeleteAnggotaKelas:output_type -> sekolah.DeleteAnggotaKelasResponse
	107, // 252: sekolah.AnggotaKelasService.DeleteBatchAnggotaKelas:output_type -> sekolah.DeleteBatchAnggotaKelasResponse
	109, // 253: sekolah.AnggotaKelasService.SearchAnggotaKelas:output_type -> sekolah.SearchAnggotaKelasResponse
	111, // 254: sekolah.AnggotaKelasService.FilterAnggotaKelas:output_type -> sekolah.FilterAnggotaKelasResponse
	116, // 255: sekolah.PTKService.CreatePTK:output_type -> sekolah.CreatePTKResponse
	118, // 256: sekolah.PTKService.GetPTK:output_type -> sekolah.GetPTKResponse
	120, // 257: sekolah.PTKService.UpdatePTK:output_type -> sekolah.UpdatePTKResponse
	122, // 258: sekolah.PTKService.DeletePTK:output_type -> sekolah.DeletePTKResponse
	124, // 259: sekolah.PTKService.SearchPTKByName:output_type -> sekolah.SearchPTKByNameResponse
	127, // 260: sekolah.PTKTerdaftarService.CreatePTKTerdaftar:output_type -> sekolah.CreatePTKTerdaftarResponse
	129, // 261: sekolah.PTKTerdaftarService.CreateBanyakPTKTerdaftar:output_type -> sekolah.CreateBanyakPTKTerdaftarResponse
	131, // 262: sekolah.PTKTerdaftarService.GetPTKTerdaftar:output_type -> sekolah.GetPTKTerdaftarResponse
	133, // 263: sekolah.PTKTerdaftarService.UpdatePTKTerdaftar:output_type -> sekolah.UpdatePTKTerdaftarResponse
	135, // 264: sekolah.PTKTerdaftarService.DeletePTKTerdaftar:output_type -> sekolah.DeletePTKTerdaftarResponse
	137, // 265: sekolah.PTKTerdaftarService.DeletBatchPTKTerdaftar:output_type -> sekolah.DeleteBatchPTKTerdaftarResponse
	139, // 266: sekolah.PTKTerdaftarService.SearchPTKTerdaftar:output_type -> sekolah.SearchPTKTerdaftarResponse
	142, // 267: sekolah.KenaikanService.CreateKenaikan:output_type -> sekolah.CreateKenaikanResponse
	144, // 268: sekolah.KenaikanService.GetKenaikan:output_type -> sekolah.GetKenaikanResponse
	146, // 269: sekolah.KenaikanService.FilterKenaikan:output_type -> sekolah.FilterKenaikanResponse
	148, // 270: sekolah.KenaikanService.UpdateKenaikan:output_type -> sekolah.UpdateKenaikanResponse
	150, // 271: sekolah.KenaikanService.DeleteKenaikan:output_type -> sekolah.DeleteKenaikanResponse
	152, // 272: sekolah.KenaikanService.UploadKenaikan:output_type -> sekolah.UploadKenaikanResponse
	157, // 273: sekolah.IjazahService.CreateDns:output_type -> sekolah.CreateDnsResponse
	159, // 274: sekolah.IjazahService.UpdateDns:output_type -> sekolah.UpdateDnsResponse
	161, // 275: sekolah.IjazahService.GetDns:output_type -> sekolah.GetDnsResponse
	163, // 276: sekolah.IjazahService.DeleteDns:output_type -> sekolah.DeleteDnsResponse
	165, // 277: sekolah.IjazahService.SearchDns:output_type -> sekolah.SearchDnsResponse
	167, // 278: sekolah.IjazahService.FilterDns:output_type -> sekolah.FilterDnsResponse
	169, // 279: sekolah.IjazahService.CreateInfoIjazah:output_type -> sekolah.CreateInfoIjazahResponse
	173, // 280: sekolah.IjazahService.UpdateInfoIjazah:output_type -> sekolah.UpdateInfoIjazahResponse
	171, // 281: sekolah.IjazahService.GetInfoIjazah:output_type -> sekolah.GetInfoIjazahResponse
	175, // 282: sekolah.IjazahService.DeleteInfoIjazah:output_type -> sekolah.DeleteInfoIjazahResponse
	178, // 283: sekolah.TranskripNilaiService.CreateTranskripNilai:output_type -> sekolah.CreateTranskripNilaiResponse
	180, // 284: sekolah.TranskripNilaiService.GetTranskripNilai:output_type -> sekolah.GetTranskripNilaiResponse
	182, // 285: sekolah.TranskripNilaiService.UpdateTranskripNilai:output_type -> sekolah.UpdateTranskripNilaiResponse
	184, // 286: sekolah.TranskripNilaiService.DeleteTranskripNilai:output_type -> sekolah.DeleteTranskripNilaiResponse
	186, // 287: sekolah.TranskripNilaiService.UploadITranskripNilai:output_type -> sekolah.UploadTranskripNilaiResponse
	188, // 288: sekolah.DownloadService.DownloadSekolahService:output_type -> sekolah.DownloadSekolahResponse
	190, // 289: sekolah.DashboardService.GetDashboard:output_type -> sekolah.GetDashboardResponse
	199, // 290: sekolah.ReferensiService.GetBentukPendidikan:output_type -> sekolah.GetBentukPendidikanResponse
	200, // 291: sekolah.ReferensiService.GetJenjang:output_type -> sekolah.GetJenjangResponse
	202, // 292: sekolah.ReferensiService.GetTingkatPendidikan:output_type -> sekolah.GetTingkatPendidikanResponse
	203, // 293: sekolah.ReferensiService.GetStatusKepemilikan:output_type -> sekolah.GetStatusKepemilikanResponse
	205, // 294: sekolah.ReferensiService.GetJurusan:output_type -> sekolah.GetJurusanResponse
	207, // 295: sekolah.ReferensiService.GetKurikulum:output_type -> sekolah.GetKurikulumResponse
	209, // 296: sekolah.ReferensiService.GetMapel:output_type -> sekolah.GetMapelResponse
	211, // 297: sekolah.ReferensiService.GetGelarAkademik:output_type -> sekolah.GetGelarAkademikResponse
	215, // 298: sekolah.PembelajaranService.CreatePembelajaran:output_type -> sekolah.CreatePembelajaranResponse
	217, // 299: sekolah.PembelajaranService.CreateBanyakPembelajaran:output_type -> sekolah.CreateBanyakPembelajaranResponse
	219, // 300: sekolah.PembelajaranService.GetPembelajaran:output_type -> sekolah.GetPembelajaranResponse
	221, // 301: sekolah.PembelajaranService.UpdatePembelajaran:output_type -> sekolah.UpdatePembelajaranResponse
	223, // 302: sekolah.PembelajaranService.DeletePembelajaran:output_type -> sekolah.DeletePembelajaranResponse
	207, // [207:303] is the sub-list for method output_type
	111, // [111:207] is the sub-list for method input_type
	111, // [111:111] is the sub-list for extension type_name
	111, // [111:111] is the sub-list for extension extendee
	0,   // [0:111] is the sub-list for field type_name
}

func init() { file_sekolah_proto_init() }
func file_sekolah_proto_init() {
	if File_sekolah_proto != nil {
		return
	}
	file_sekolah_proto_msgTypes[3].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[78].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[108].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[110].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[117].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[160].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[166].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[198].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[206].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[218].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sekolah_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   224,
			NumExtensions: 0,
			NumServices:   17,
		},
		GoTypes:           file_sekolah_proto_goTypes,
		DependencyIndexes: file_sekolah_proto_depIdxs,
		MessageInfos:      file_sekolah_proto_msgTypes,
	}.Build()
	File_sekolah_proto = out.File
	file_sekolah_proto_rawDesc = nil
	file_sekolah_proto_goTypes = nil
	file_sekolah_proto_depIdxs = nil
}
