// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.28.3
// source: auth.proto

package auth

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Struktur Sekolah
type SekolahTenant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	SekolahId     *string                `protobuf:"bytes,2,opt,name=sekolah_id,json=sekolahId,proto3,oneof" json:"sekolah_id,omitempty"`
	NamaSekolah   string                 `protobuf:"bytes,3,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	Npsn          string                 `protobuf:"bytes,4,opt,name=npsn,proto3" json:"npsn,omitempty"`
	EnkripId      *string                `protobuf:"bytes,5,opt,name=enkrip_id,json=enkripId,proto3,oneof" json:"enkrip_id,omitempty"`
	Kecamatan     *string                `protobuf:"bytes,6,opt,name=kecamatan,proto3,oneof" json:"kecamatan,omitempty"`
	Kabupaten     *string                `protobuf:"bytes,7,opt,name=kabupaten,proto3,oneof" json:"kabupaten,omitempty"`
	Propinsi      *string                `protobuf:"bytes,8,opt,name=propinsi,proto3,oneof" json:"propinsi,omitempty"`
	KodeKecamatan *string                `protobuf:"bytes,9,opt,name=kode_kecamatan,json=kodeKecamatan,proto3,oneof" json:"kode_kecamatan,omitempty"`
	KodeKab       *string                `protobuf:"bytes,10,opt,name=kode_kab,json=kodeKab,proto3,oneof" json:"kode_kab,omitempty"`
	KodeProp      *string                `protobuf:"bytes,11,opt,name=kode_prop,json=kodeProp,proto3,oneof" json:"kode_prop,omitempty"`
	AlamatJalan   *string                `protobuf:"bytes,12,opt,name=alamat_jalan,json=alamatJalan,proto3,oneof" json:"alamat_jalan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SekolahTenant) Reset() {
	*x = SekolahTenant{}
	mi := &file_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTenant) ProtoMessage() {}

func (x *SekolahTenant) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTenant.ProtoReflect.Descriptor instead.
func (*SekolahTenant) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0}
}

func (x *SekolahTenant) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SekolahTenant) GetSekolahId() string {
	if x != nil && x.SekolahId != nil {
		return *x.SekolahId
	}
	return ""
}

func (x *SekolahTenant) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *SekolahTenant) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *SekolahTenant) GetEnkripId() string {
	if x != nil && x.EnkripId != nil {
		return *x.EnkripId
	}
	return ""
}

func (x *SekolahTenant) GetKecamatan() string {
	if x != nil && x.Kecamatan != nil {
		return *x.Kecamatan
	}
	return ""
}

func (x *SekolahTenant) GetKabupaten() string {
	if x != nil && x.Kabupaten != nil {
		return *x.Kabupaten
	}
	return ""
}

func (x *SekolahTenant) GetPropinsi() string {
	if x != nil && x.Propinsi != nil {
		return *x.Propinsi
	}
	return ""
}

func (x *SekolahTenant) GetKodeKecamatan() string {
	if x != nil && x.KodeKecamatan != nil {
		return *x.KodeKecamatan
	}
	return ""
}

func (x *SekolahTenant) GetKodeKab() string {
	if x != nil && x.KodeKab != nil {
		return *x.KodeKab
	}
	return ""
}

func (x *SekolahTenant) GetKodeProp() string {
	if x != nil && x.KodeProp != nil {
		return *x.KodeProp
	}
	return ""
}

func (x *SekolahTenant) GetAlamatJalan() string {
	if x != nil && x.AlamatJalan != nil {
		return *x.AlamatJalan
	}
	return ""
}

// Struktur User
type User struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SekolahTenantId   uint32                 `protobuf:"varint,2,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"`
	Username          string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Email             string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Password          *string                `protobuf:"bytes,5,opt,name=password,proto3,oneof" json:"password,omitempty"`
	Role              string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	IsInitialPassword *bool                  `protobuf:"varint,7,opt,name=is_initial_password,json=isInitialPassword,proto3,oneof" json:"is_initial_password,omitempty"`
	InitialPassword   *string                `protobuf:"bytes,8,opt,name=initial_password,json=initialPassword,proto3,oneof" json:"initial_password,omitempty"`
	LastLogin         *string                `protobuf:"bytes,9,opt,name=last_login,json=lastLogin,proto3,oneof" json:"last_login,omitempty"` // ISO timestamp string
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetIsInitialPassword() bool {
	if x != nil && x.IsInitialPassword != nil {
		return *x.IsInitialPassword
	}
	return false
}

func (x *User) GetInitialPassword() string {
	if x != nil && x.InitialPassword != nil {
		return *x.InitialPassword
	}
	return ""
}

func (x *User) GetLastLogin() string {
	if x != nil && x.LastLogin != nil {
		return *x.LastLogin
	}
	return ""
}

type NewUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Sekolah       *SekolahTenant         `protobuf:"bytes,2,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	UserProfile   *UserProfile           `protobuf:"bytes,4,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewUser) Reset() {
	*x = NewUser{}
	mi := &file_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewUser) ProtoMessage() {}

func (x *NewUser) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewUser.ProtoReflect.Descriptor instead.
func (*NewUser) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2}
}

func (x *NewUser) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *NewUser) GetSekolah() *SekolahTenant {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

func (x *NewUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *NewUser) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

// Request untuk Register
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sekolah       *SekolahTenant         `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	User          *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterRequest) GetSekolah() *SekolahTenant {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

func (x *RegisterRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Response untuk Register
type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Ok            bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	User          *User                  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	SekolahTenant *SekolahTenant         `protobuf:"bytes,4,opt,name=sekolah_tenant,json=sekolahTenant,proto3" json:"sekolah_tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *RegisterResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RegisterResponse) GetSekolahTenant() *SekolahTenant {
	if x != nil {
		return x.SekolahTenant
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{5}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Ok            bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	User          *User                  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	SekolahTenant *SekolahTenant         `protobuf:"bytes,4,opt,name=sekolah_tenant,json=sekolahTenant,proto3" json:"sekolah_tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{6}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResponse) GetSekolahTenant() *SekolahTenant {
	if x != nil {
		return x.SekolahTenant
	}
	return nil
}

type GetSekolahRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Npsn            string                 `protobuf:"bytes,1,opt,name=npsn,proto3" json:"npsn,omitempty"`
	SekolahTenantId uint32                 `protobuf:"varint,2,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSekolahRequest) Reset() {
	*x = GetSekolahRequest{}
	mi := &file_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahRequest) ProtoMessage() {}

func (x *GetSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahRequest.ProtoReflect.Descriptor instead.
func (*GetSekolahRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{7}
}

func (x *GetSekolahRequest) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *GetSekolahRequest) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

type GetSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nama          string                 `protobuf:"bytes,1,opt,name=nama,proto3" json:"nama,omitempty"`
	SekolahData   *SekolahTenant         `protobuf:"bytes,2,opt,name=sekolah_data,json=sekolahData,proto3" json:"sekolah_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahResponse) Reset() {
	*x = GetSekolahResponse{}
	mi := &file_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahResponse) ProtoMessage() {}

func (x *GetSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahResponse.ProtoReflect.Descriptor instead.
func (*GetSekolahResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{8}
}

func (x *GetSekolahResponse) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *GetSekolahResponse) GetSekolahData() *SekolahTenant {
	if x != nil {
		return x.SekolahData
	}
	return nil
}

type GetUserByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Pastikan field ini ada
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserByIDRequest) Reset() {
	*x = GetUserByIDRequest{}
	mi := &file_auth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIDRequest) ProtoMessage() {}

func (x *GetUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIDRequest.ProtoReflect.Descriptor instead.
func (*GetUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserByIDResponse) Reset() {
	*x = GetUserByIDResponse{}
	mi := &file_auth_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIDResponse) ProtoMessage() {}

func (x *GetUserByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIDResponse.ProtoReflect.Descriptor instead.
func (*GetUserByIDResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserByIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetUserByIDResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserByIDResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	mi := &file_auth_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ResetPasswordRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ResetPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordResponse) Reset() {
	*x = ResetPasswordResponse{}
	mi := &file_auth_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResponse) ProtoMessage() {}

func (x *ResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{12}
}

func (x *ResetPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*NewUser             `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUsersRequest) Reset() {
	*x = CreateUsersRequest{}
	mi := &file_auth_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUsersRequest) ProtoMessage() {}

func (x *CreateUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUsersRequest.ProtoReflect.Descriptor instead.
func (*CreateUsersRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{13}
}

func (x *CreateUsersRequest) GetUsers() []*NewUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUsersResponse) Reset() {
	*x = CreateUsersResponse{}
	mi := &file_auth_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUsersResponse) ProtoMessage() {}

func (x *CreateUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUsersResponse.ProtoReflect.Descriptor instead.
func (*CreateUsersResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{14}
}

func (x *CreateUsersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUsersRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahTenantId uint32                 `protobuf:"varint,1,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"`
	Role            string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	mi := &file_auth_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{15}
}

func (x *GetUsersRequest) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

func (x *GetUsersRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GetUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	mi := &file_auth_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{16}
}

func (x *GetUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// ===============================
type StudentUsername struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PersertaDidikId string                 `protobuf:"bytes,1,opt,name=perserta_didik_id,json=persertaDidikId,proto3" json:"perserta_didik_id,omitempty"`
	TglLahir        string                 `protobuf:"bytes,2,opt,name=tgl_lahir,json=tglLahir,proto3" json:"tgl_lahir,omitempty"`
	ThnLulus        string                 `protobuf:"bytes,3,opt,name=thn_lulus,json=thnLulus,proto3" json:"thn_lulus,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StudentUsername) Reset() {
	*x = StudentUsername{}
	mi := &file_auth_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudentUsername) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentUsername) ProtoMessage() {}

func (x *StudentUsername) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentUsername.ProtoReflect.Descriptor instead.
func (*StudentUsername) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{17}
}

func (x *StudentUsername) GetPersertaDidikId() string {
	if x != nil {
		return x.PersertaDidikId
	}
	return ""
}

func (x *StudentUsername) GetTglLahir() string {
	if x != nil {
		return x.TglLahir
	}
	return ""
}

func (x *StudentUsername) GetThnLulus() string {
	if x != nil {
		return x.ThnLulus
	}
	return ""
}

type GenerateStudentUsernameRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahTenantId uint32                 `protobuf:"varint,1,opt,name=sekolah_tenant_id,json=sekolahTenantId,proto3" json:"sekolah_tenant_id,omitempty"`
	PesertaDidik    []*StudentUsername     `protobuf:"bytes,2,rep,name=peserta_didik,json=pesertaDidik,proto3" json:"peserta_didik,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateStudentUsernameRequest) Reset() {
	*x = GenerateStudentUsernameRequest{}
	mi := &file_auth_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateStudentUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStudentUsernameRequest) ProtoMessage() {}

func (x *GenerateStudentUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStudentUsernameRequest.ProtoReflect.Descriptor instead.
func (*GenerateStudentUsernameRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateStudentUsernameRequest) GetSekolahTenantId() uint32 {
	if x != nil {
		return x.SekolahTenantId
	}
	return 0
}

func (x *GenerateStudentUsernameRequest) GetPesertaDidik() []*StudentUsername {
	if x != nil {
		return x.PesertaDidik
	}
	return nil
}

type GenerateStudentUsernameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateStudentUsernameResponse) Reset() {
	*x = GenerateStudentUsernameResponse{}
	mi := &file_auth_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateStudentUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStudentUsernameResponse) ProtoMessage() {}

func (x *GenerateStudentUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStudentUsernameResponse.ProtoReflect.Descriptor instead.
func (*GenerateStudentUsernameResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateStudentUsernameResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// Struktur User Profile
type UserProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nama          string                 `protobuf:"bytes,3,opt,name=nama,proto3" json:"nama,omitempty"`
	Jk            string                 `protobuf:"bytes,4,opt,name=jk,proto3" json:"jk,omitempty"`
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	TptLahir      string                 `protobuf:"bytes,6,opt,name=tpt_lahir,json=tptLahir,proto3" json:"tpt_lahir,omitempty"`
	TglLahir      string                 `protobuf:"bytes,7,opt,name=tgl_lahir,json=tglLahir,proto3" json:"tgl_lahir,omitempty"` // ISO date string
	AlamatJalan   string                 `protobuf:"bytes,8,opt,name=alamat_jalan,json=alamatJalan,proto3" json:"alamat_jalan,omitempty"`
	KotaKab       string                 `protobuf:"bytes,9,opt,name=kota_kab,json=kotaKab,proto3" json:"kota_kab,omitempty"`
	Prov          string                 `protobuf:"bytes,10,opt,name=prov,proto3" json:"prov,omitempty"`
	KodePos       string                 `protobuf:"bytes,11,opt,name=kode_pos,json=kodePos,proto3" json:"kode_pos,omitempty"`
	NamaAyah      string                 `protobuf:"bytes,12,opt,name=nama_ayah,json=namaAyah,proto3" json:"nama_ayah,omitempty"`
	NamaIbu       string                 `protobuf:"bytes,13,opt,name=nama_ibu,json=namaIbu,proto3" json:"nama_ibu,omitempty"`
	PhotoUrl      string                 `protobuf:"bytes,14,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	mi := &file_auth_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{20}
}

func (x *UserProfile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserProfile) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserProfile) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *UserProfile) GetJk() string {
	if x != nil {
		return x.Jk
	}
	return ""
}

func (x *UserProfile) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserProfile) GetTptLahir() string {
	if x != nil {
		return x.TptLahir
	}
	return ""
}

func (x *UserProfile) GetTglLahir() string {
	if x != nil {
		return x.TglLahir
	}
	return ""
}

func (x *UserProfile) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *UserProfile) GetKotaKab() string {
	if x != nil {
		return x.KotaKab
	}
	return ""
}

func (x *UserProfile) GetProv() string {
	if x != nil {
		return x.Prov
	}
	return ""
}

func (x *UserProfile) GetKodePos() string {
	if x != nil {
		return x.KodePos
	}
	return ""
}

func (x *UserProfile) GetNamaAyah() string {
	if x != nil {
		return x.NamaAyah
	}
	return ""
}

func (x *UserProfile) GetNamaIbu() string {
	if x != nil {
		return x.NamaIbu
	}
	return ""
}

func (x *UserProfile) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

type GetUserProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfileRequest) Reset() {
	*x = GetUserProfileRequest{}
	mi := &file_auth_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileRequest) ProtoMessage() {}

func (x *GetUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileRequest.ProtoReflect.Descriptor instead.
func (*GetUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserProfileRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserProfile   *UserProfile           `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfileResponse) Reset() {
	*x = GetUserProfileResponse{}
	mi := &file_auth_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileResponse) ProtoMessage() {}

func (x *GetUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileResponse.ProtoReflect.Descriptor instead.
func (*GetUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserProfileResponse) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type UpdateUserProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserProfile   *UserProfile           `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserProfileRequest) Reset() {
	*x = UpdateUserProfileRequest{}
	mi := &file_auth_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProfileRequest) ProtoMessage() {}

func (x *UpdateUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateUserProfileRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserProfileRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type UpdateUserProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserProfileResponse) Reset() {
	*x = UpdateUserProfileResponse{}
	mi := &file_auth_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProfileResponse) ProtoMessage() {}

func (x *UpdateUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProfileResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateUserProfileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateUserProfileResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadUserPhotoProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`                  // Data gambar dikirim dalam chunk (streaming)
	UserId        uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID untuk menghubungkan foto ke user
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadUserPhotoProfileRequest) Reset() {
	*x = UploadUserPhotoProfileRequest{}
	mi := &file_auth_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadUserPhotoProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUserPhotoProfileRequest) ProtoMessage() {}

func (x *UploadUserPhotoProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUserPhotoProfileRequest.ProtoReflect.Descriptor instead.
func (*UploadUserPhotoProfileRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{25}
}

func (x *UploadUserPhotoProfileRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadUserPhotoProfileRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadUserPhotoProfileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type UploadUserPhotoProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Status sukses/gagal
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`  // URL foto yang tersimpan
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadUserPhotoProfileResponse) Reset() {
	*x = UploadUserPhotoProfileResponse{}
	mi := &file_auth_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadUserPhotoProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUserPhotoProfileResponse) ProtoMessage() {}

func (x *UploadUserPhotoProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUserPhotoProfileResponse.ProtoReflect.Descriptor instead.
func (*UploadUserPhotoProfileResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{26}
}

func (x *UploadUserPhotoProfileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadUserPhotoProfileResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetUserProfilePhotoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID pengguna untuk mendapatkan foto profil
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfilePhotoRequest) Reset() {
	*x = GetUserProfilePhotoRequest{}
	mi := &file_auth_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfilePhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfilePhotoRequest) ProtoMessage() {}

func (x *GetUserProfilePhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfilePhotoRequest.ProtoReflect.Descriptor instead.
func (*GetUserProfilePhotoRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserProfilePhotoRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserProfilePhotoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Photo         []byte                 `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`                                // Foto profil dalam format binary
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // Tipe konten (misalnya "image/png", "image/jpeg")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfilePhotoResponse) Reset() {
	*x = GetUserProfilePhotoResponse{}
	mi := &file_auth_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfilePhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfilePhotoResponse) ProtoMessage() {}

func (x *GetUserProfilePhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfilePhotoResponse.ProtoReflect.Descriptor instead.
func (*GetUserProfilePhotoResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserProfilePhotoResponse) GetPhoto() []byte {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *GetUserProfilePhotoResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type DownloadUserPhotoProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID untuk menghubungkan foto ke user
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`            // URL foto yang akan diunduh
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadUserPhotoProfileRequest) Reset() {
	*x = DownloadUserPhotoProfileRequest{}
	mi := &file_auth_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadUserPhotoProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadUserPhotoProfileRequest) ProtoMessage() {}

func (x *DownloadUserPhotoProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadUserPhotoProfileRequest.ProtoReflect.Descriptor instead.
func (*DownloadUserPhotoProfileRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{29}
}

func (x *DownloadUserPhotoProfileRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DownloadUserPhotoProfileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type DownloadUserPhotoProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`       // Status sukses/gagal
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` // URL foto yang tersimpan
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadUserPhotoProfileResponse) Reset() {
	*x = DownloadUserPhotoProfileResponse{}
	mi := &file_auth_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadUserPhotoProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadUserPhotoProfileResponse) ProtoMessage() {}

func (x *DownloadUserPhotoProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadUserPhotoProfileResponse.ProtoReflect.Descriptor instead.
func (*DownloadUserPhotoProfileResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{30}
}

func (x *DownloadUserPhotoProfileResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *DownloadUserPhotoProfileResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type SekolahIndonesia struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahIdEnkrip string                 `protobuf:"bytes,1,opt,name=sekolah_id_enkrip,proto3" json:"sekolah_id_enkrip,omitempty"`
	Kecamatan       string                 `protobuf:"bytes,2,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	Kabupaten       string                 `protobuf:"bytes,3,opt,name=kabupaten,proto3" json:"kabupaten,omitempty"`
	Propinsi        string                 `protobuf:"bytes,4,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	KodeKecamatan   string                 `protobuf:"bytes,5,opt,name=kode_kecamatan,proto3" json:"kode_kecamatan,omitempty"`
	KodeKab         string                 `protobuf:"bytes,6,opt,name=kode_kab,proto3" json:"kode_kab,omitempty"`
	KodeProp        string                 `protobuf:"bytes,7,opt,name=kode_prop,proto3" json:"kode_prop,omitempty"`
	NamaSekolah     string                 `protobuf:"bytes,8,opt,name=nama_sekolah,proto3" json:"nama_sekolah,omitempty"`
	Npsn            string                 `protobuf:"bytes,9,opt,name=npsn,proto3" json:"npsn,omitempty"`
	AlamatJalan     string                 `protobuf:"bytes,10,opt,name=alamat_jalan,proto3" json:"alamat_jalan,omitempty"`
	Status          string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SekolahIndonesia) Reset() {
	*x = SekolahIndonesia{}
	mi := &file_auth_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahIndonesia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahIndonesia) ProtoMessage() {}

func (x *SekolahIndonesia) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahIndonesia.ProtoReflect.Descriptor instead.
func (*SekolahIndonesia) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{31}
}

func (x *SekolahIndonesia) GetSekolahIdEnkrip() string {
	if x != nil {
		return x.SekolahIdEnkrip
	}
	return ""
}

func (x *SekolahIndonesia) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *SekolahIndonesia) GetKabupaten() string {
	if x != nil {
		return x.Kabupaten
	}
	return ""
}

func (x *SekolahIndonesia) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *SekolahIndonesia) GetKodeKecamatan() string {
	if x != nil {
		return x.KodeKecamatan
	}
	return ""
}

func (x *SekolahIndonesia) GetKodeKab() string {
	if x != nil {
		return x.KodeKab
	}
	return ""
}

func (x *SekolahIndonesia) GetKodeProp() string {
	if x != nil {
		return x.KodeProp
	}
	return ""
}

func (x *SekolahIndonesia) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *SekolahIndonesia) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *SekolahIndonesia) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *SekolahIndonesia) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetSekolahIndonesiaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npsn          string                 `protobuf:"bytes,1,opt,name=npsn,proto3" json:"npsn,omitempty"`
	NamaSekolah   string                 `protobuf:"bytes,2,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahIndonesiaRequest) Reset() {
	*x = GetSekolahIndonesiaRequest{}
	mi := &file_auth_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahIndonesiaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahIndonesiaRequest) ProtoMessage() {}

func (x *GetSekolahIndonesiaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahIndonesiaRequest.ProtoReflect.Descriptor instead.
func (*GetSekolahIndonesiaRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{32}
}

func (x *GetSekolahIndonesiaRequest) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *GetSekolahIndonesiaRequest) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

type GetSekolahIndonesiaResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Pesan            string                 `protobuf:"bytes,1,opt,name=pesan,proto3" json:"pesan,omitempty"`
	SekolahIndonesia []*SekolahIndonesia    `protobuf:"bytes,2,rep,name=sekolah_indonesia,json=sekolahIndonesia,proto3" json:"sekolah_indonesia,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetSekolahIndonesiaResponse) Reset() {
	*x = GetSekolahIndonesiaResponse{}
	mi := &file_auth_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahIndonesiaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahIndonesiaResponse) ProtoMessage() {}

func (x *GetSekolahIndonesiaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahIndonesiaResponse.ProtoReflect.Descriptor instead.
func (*GetSekolahIndonesiaResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{33}
}

func (x *GetSekolahIndonesiaResponse) GetPesan() string {
	if x != nil {
		return x.Pesan
	}
	return ""
}

func (x *GetSekolahIndonesiaResponse) GetSekolahIndonesia() []*SekolahIndonesia {
	if x != nil {
		return x.SekolahIndonesia
	}
	return nil
}

var File_auth_proto protoreflect.FileDescriptor

var file_auth_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xaa, 0x04, 0x0a, 0x0d, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70,
	0x73, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d,
	0x61, 0x74, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70,
	0x61, 0x74, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x6b, 0x61,
	0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6b,
	0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0d, 0x6b, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x63, 0x61, 0x6d,
	0x61, 0x74, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x5f,
	0x6b, 0x61, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x6b, 0x6f, 0x64,
	0x65, 0x4b, 0x61, 0x62, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x6b, 0x6f,
	0x64, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x6c, 0x61,
	0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a, 0x61, 0x6c, 0x61, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x6b, 0x72,
	0x69, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61,
	0x74, 0x61, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65,
	0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61,
	0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x61, 0x62, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x22, 0xfb, 0x02,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x73, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x11, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x07,
	0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x60, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x0e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x0c, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x0d,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x53, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x60, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x36, 0x0a, 0x0c,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x36, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x77, 0x0a, 0x0f, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x67,
	0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x67, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x6e, 0x5f, 0x6c,
	0x75, 0x6c, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x6e, 0x4c,
	0x75, 0x6c, 0x75, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x0c, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x22,
	0x43, 0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x22, 0xec, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6a,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x70, 0x74, 0x5f, 0x6c,
	0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x70, 0x74, 0x4c,
	0x61, 0x68, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x67, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x67, 0x6c, 0x4c, 0x61, 0x68, 0x69,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a,
	0x61, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x61, 0x62,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x6f, 0x74, 0x61, 0x4b, 0x61, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x76, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x72, 0x6f, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x61, 0x79, 0x61, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x61, 0x41, 0x79, 0x61, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x61, 0x6d, 0x61, 0x5f, 0x69, 0x62, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x61, 0x6d, 0x61, 0x49, 0x62, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x55, 0x72, 0x6c, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x69, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x4d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x6a, 0x0a, 0x1d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x1e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56,
	0x0a, 0x1f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x20, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xee, 0x02, 0x0a,
	0x10, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69,
	0x61, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x5f,
	0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x6b, 0x6f, 0x64, 0x65, 0x5f,
	0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x61, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x61, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x61, 0x6d,
	0x61, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x70, 0x73, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f,
	0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x6e, 0x64, 0x6f, 0x6e,
	0x65, 0x73, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x70, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x22, 0x78, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x73, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x65, 0x73, 0x61, 0x6e, 0x12, 0x43, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x52, 0x10, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x32, 0xa8, 0x06, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x5b, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x12, 0x5d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x63, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x8d, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x32, 0xbc, 0x05, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x3a, 0x01, 0x2a, 0x1a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x8c, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a,
	0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x28, 0x01, 0x12, 0x95,
	0x01, 0x0a, 0x18, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x30, 0x01, 0x32, 0x98, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x12, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x6e, 0x64, 0x6f, 0x6e,
	0x65, 0x73, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x6e, 0x64,
	0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2d, 0x69, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69,
	0x61, 0x42, 0x17, 0x5a, 0x15, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_auth_proto_rawDescOnce sync.Once
	file_auth_proto_rawDescData = file_auth_proto_rawDesc
)

func file_auth_proto_rawDescGZIP() []byte {
	file_auth_proto_rawDescOnce.Do(func() {
		file_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_proto_rawDescData)
	})
	return file_auth_proto_rawDescData
}

var file_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_auth_proto_goTypes = []any{
	(*SekolahTenant)(nil),                    // 0: auth.SekolahTenant
	(*User)(nil),                             // 1: auth.User
	(*NewUser)(nil),                          // 2: auth.NewUser
	(*RegisterRequest)(nil),                  // 3: auth.RegisterRequest
	(*RegisterResponse)(nil),                 // 4: auth.RegisterResponse
	(*LoginRequest)(nil),                     // 5: auth.LoginRequest
	(*LoginResponse)(nil),                    // 6: auth.LoginResponse
	(*GetSekolahRequest)(nil),                // 7: auth.GetSekolahRequest
	(*GetSekolahResponse)(nil),               // 8: auth.GetSekolahResponse
	(*GetUserByIDRequest)(nil),               // 9: auth.GetUserByIDRequest
	(*GetUserByIDResponse)(nil),              // 10: auth.GetUserByIDResponse
	(*ResetPasswordRequest)(nil),             // 11: auth.ResetPasswordRequest
	(*ResetPasswordResponse)(nil),            // 12: auth.ResetPasswordResponse
	(*CreateUsersRequest)(nil),               // 13: auth.CreateUsersRequest
	(*CreateUsersResponse)(nil),              // 14: auth.CreateUsersResponse
	(*GetUsersRequest)(nil),                  // 15: auth.GetUsersRequest
	(*GetUsersResponse)(nil),                 // 16: auth.GetUsersResponse
	(*StudentUsername)(nil),                  // 17: auth.StudentUsername
	(*GenerateStudentUsernameRequest)(nil),   // 18: auth.GenerateStudentUsernameRequest
	(*GenerateStudentUsernameResponse)(nil),  // 19: auth.GenerateStudentUsernameResponse
	(*UserProfile)(nil),                      // 20: auth.UserProfile
	(*GetUserProfileRequest)(nil),            // 21: auth.GetUserProfileRequest
	(*GetUserProfileResponse)(nil),           // 22: auth.GetUserProfileResponse
	(*UpdateUserProfileRequest)(nil),         // 23: auth.UpdateUserProfileRequest
	(*UpdateUserProfileResponse)(nil),        // 24: auth.UpdateUserProfileResponse
	(*UploadUserPhotoProfileRequest)(nil),    // 25: auth.UploadUserPhotoProfileRequest
	(*UploadUserPhotoProfileResponse)(nil),   // 26: auth.UploadUserPhotoProfileResponse
	(*GetUserProfilePhotoRequest)(nil),       // 27: auth.GetUserProfilePhotoRequest
	(*GetUserProfilePhotoResponse)(nil),      // 28: auth.GetUserProfilePhotoResponse
	(*DownloadUserPhotoProfileRequest)(nil),  // 29: auth.DownloadUserPhotoProfileRequest
	(*DownloadUserPhotoProfileResponse)(nil), // 30: auth.DownloadUserPhotoProfileResponse
	(*SekolahIndonesia)(nil),                 // 31: auth.SekolahIndonesia
	(*GetSekolahIndonesiaRequest)(nil),       // 32: auth.GetSekolahIndonesiaRequest
	(*GetSekolahIndonesiaResponse)(nil),      // 33: auth.GetSekolahIndonesiaResponse
}
var file_auth_proto_depIdxs = []int32{
	1,  // 0: auth.NewUser.user:type_name -> auth.User
	0,  // 1: auth.NewUser.sekolah:type_name -> auth.SekolahTenant
	20, // 2: auth.NewUser.user_profile:type_name -> auth.UserProfile
	0,  // 3: auth.RegisterRequest.sekolah:type_name -> auth.SekolahTenant
	1,  // 4: auth.RegisterRequest.user:type_name -> auth.User
	1,  // 5: auth.RegisterResponse.user:type_name -> auth.User
	0,  // 6: auth.RegisterResponse.sekolah_tenant:type_name -> auth.SekolahTenant
	1,  // 7: auth.LoginResponse.user:type_name -> auth.User
	0,  // 8: auth.LoginResponse.sekolah_tenant:type_name -> auth.SekolahTenant
	0,  // 9: auth.GetSekolahResponse.sekolah_data:type_name -> auth.SekolahTenant
	1,  // 10: auth.ResetPasswordRequest.user:type_name -> auth.User
	2,  // 11: auth.CreateUsersRequest.users:type_name -> auth.NewUser
	1,  // 12: auth.GetUsersResponse.users:type_name -> auth.User
	17, // 13: auth.GenerateStudentUsernameRequest.peserta_didik:type_name -> auth.StudentUsername
	1,  // 14: auth.GenerateStudentUsernameResponse.users:type_name -> auth.User
	20, // 15: auth.GetUserProfileResponse.user_profile:type_name -> auth.UserProfile
	20, // 16: auth.UpdateUserProfileRequest.user_profile:type_name -> auth.UserProfile
	31, // 17: auth.GetSekolahIndonesiaResponse.sekolah_indonesia:type_name -> auth.SekolahIndonesia
	5,  // 18: auth.AuthService.Login:input_type -> auth.LoginRequest
	3,  // 19: auth.AuthService.Register:input_type -> auth.RegisterRequest
	7,  // 20: auth.AuthService.GetSekolah:input_type -> auth.GetSekolahRequest
	9,  // 21: auth.AuthService.GetUserByID:input_type -> auth.GetUserByIDRequest
	11, // 22: auth.AuthService.ResetPassword:input_type -> auth.ResetPasswordRequest
	13, // 23: auth.AuthService.CreateUsers:input_type -> auth.CreateUsersRequest
	15, // 24: auth.AuthService.GetUsers:input_type -> auth.GetUsersRequest
	18, // 25: auth.AuthService.GenerateStudentUsername:input_type -> auth.GenerateStudentUsernameRequest
	21, // 26: auth.UserProfileService.GetUserProfile:input_type -> auth.GetUserProfileRequest
	23, // 27: auth.UserProfileService.UpdateUserProfile:input_type -> auth.UpdateUserProfileRequest
	27, // 28: auth.UserProfileService.GetUserProfilePhoto:input_type -> auth.GetUserProfilePhotoRequest
	25, // 29: auth.UserProfileService.UploadUserPhotoProfile:input_type -> auth.UploadUserPhotoProfileRequest
	29, // 30: auth.UserProfileService.DownloadUserPhotoProfile:input_type -> auth.DownloadUserPhotoProfileRequest
	32, // 31: auth.SekolahIndonesiaService.GetSekolahIndonesia:input_type -> auth.GetSekolahIndonesiaRequest
	6,  // 32: auth.AuthService.Login:output_type -> auth.LoginResponse
	4,  // 33: auth.AuthService.Register:output_type -> auth.RegisterResponse
	8,  // 34: auth.AuthService.GetSekolah:output_type -> auth.GetSekolahResponse
	10, // 35: auth.AuthService.GetUserByID:output_type -> auth.GetUserByIDResponse
	12, // 36: auth.AuthService.ResetPassword:output_type -> auth.ResetPasswordResponse
	14, // 37: auth.AuthService.CreateUsers:output_type -> auth.CreateUsersResponse
	16, // 38: auth.AuthService.GetUsers:output_type -> auth.GetUsersResponse
	19, // 39: auth.AuthService.GenerateStudentUsername:output_type -> auth.GenerateStudentUsernameResponse
	22, // 40: auth.UserProfileService.GetUserProfile:output_type -> auth.GetUserProfileResponse
	24, // 41: auth.UserProfileService.UpdateUserProfile:output_type -> auth.UpdateUserProfileResponse
	28, // 42: auth.UserProfileService.GetUserProfilePhoto:output_type -> auth.GetUserProfilePhotoResponse
	26, // 43: auth.UserProfileService.UploadUserPhotoProfile:output_type -> auth.UploadUserPhotoProfileResponse
	30, // 44: auth.UserProfileService.DownloadUserPhotoProfile:output_type -> auth.DownloadUserPhotoProfileResponse
	33, // 45: auth.SekolahIndonesiaService.GetSekolahIndonesia:output_type -> auth.GetSekolahIndonesiaResponse
	32, // [32:46] is the sub-list for method output_type
	18, // [18:32] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_auth_proto_init() }
func file_auth_proto_init() {
	if File_auth_proto != nil {
		return
	}
	file_auth_proto_msgTypes[0].OneofWrappers = []any{}
	file_auth_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_auth_proto_goTypes,
		DependencyIndexes: file_auth_proto_depIdxs,
		MessageInfos:      file_auth_proto_msgTypes,
	}.Build()
	File_auth_proto = out.File
	file_auth_proto_rawDesc = nil
	file_auth_proto_goTypes = nil
	file_auth_proto_depIdxs = nil
}
